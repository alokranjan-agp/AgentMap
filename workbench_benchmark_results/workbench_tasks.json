[
  {
    "id": "analytics_0",
    "domain": "analytics",
    "query": "Can you make a bar chart of total visits since November 21?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-21\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"bar\")']",
    "base_template": "Can you make a {plot_type} chart of {natural_language_metric} since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_1",
    "domain": "analytics",
    "query": "Can you make a histogram chart of engaged users since September 27?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-27\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"histogram\")']",
    "base_template": "Can you make a {plot_type} chart of {natural_language_metric} since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_2",
    "domain": "analytics",
    "query": "Create a bar chart of total visits since September 2",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-02\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"bar\")']",
    "base_template": "Can you make a {plot_type} chart of {natural_language_metric} since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_3",
    "domain": "analytics",
    "query": "Can you make a scatter chart of engaged users since September 7?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-07\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"scatter\")']",
    "base_template": "Can you make a {plot_type} chart of {natural_language_metric} since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_4",
    "domain": "analytics",
    "query": "Can you make a bar chart of engaged users since October 2?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-02\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"bar\")']",
    "base_template": "Can you make a {plot_type} chart of {natural_language_metric} since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_5",
    "domain": "analytics",
    "query": "Plot total visits since October 28 as a scatter chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-28\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"scatter\")']",
    "base_template": "Can you make a {plot_type} chart of {natural_language_metric} since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_6",
    "domain": "analytics",
    "query": "Plot average session duration since September 29 as a line chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-29\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"line\")']",
    "base_template": "Can you make a {plot_type} chart of {natural_language_metric} since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_7",
    "domain": "analytics",
    "query": "Create a bar chart of engaged users since September 4",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-04\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"bar\")']",
    "base_template": "Can you make a {plot_type} chart of {natural_language_metric} since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_8",
    "domain": "analytics",
    "query": "Can you make a bar chart of total visits since September 9?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-09\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"bar\")']",
    "base_template": "Can you make a {plot_type} chart of {natural_language_metric} since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_9",
    "domain": "analytics",
    "query": "Plot average session duration since September 26 as a bar chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-26\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"bar\")']",
    "base_template": "Can you make a {plot_type} chart of {natural_language_metric} since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_10",
    "domain": "analytics",
    "query": "please plot the distribution of the total visits metric on October 10",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-10\", time_max=\"2023-10-10\", value_to_plot=\"total_visits\", plot_type=\"histogram\")']",
    "base_template": "Plot the distribution of {natural_language_metric} on {natural_language_date}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_11",
    "domain": "analytics",
    "query": "please plot the distribution of the total visits metric on October 20",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-20\", time_max=\"2023-10-20\", value_to_plot=\"total_visits\", plot_type=\"histogram\")']",
    "base_template": "Plot the distribution of {natural_language_metric} on {natural_language_date}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_12",
    "domain": "analytics",
    "query": "Can you make a histogram of total visits on September 20?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-20\", time_max=\"2023-09-20\", value_to_plot=\"total_visits\", plot_type=\"histogram\")']",
    "base_template": "Plot the distribution of {natural_language_metric} on {natural_language_date}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_13",
    "domain": "analytics",
    "query": "please plot the distribution of the total visits metric on September 9",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-09\", time_max=\"2023-09-09\", value_to_plot=\"total_visits\", plot_type=\"histogram\")']",
    "base_template": "Plot the distribution of {natural_language_metric} on {natural_language_date}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_14",
    "domain": "analytics",
    "query": "please plot the distribution of the total visits metric on October 17",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-17\", time_max=\"2023-10-17\", value_to_plot=\"total_visits\", plot_type=\"histogram\")']",
    "base_template": "Plot the distribution of {natural_language_metric} on {natural_language_date}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_15",
    "domain": "analytics",
    "query": "please plot the distribution of the average session duration metric on September 11",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-11\", time_max=\"2023-09-11\", value_to_plot=\"session_duration_seconds\", plot_type=\"histogram\")']",
    "base_template": "Plot the distribution of {natural_language_metric} on {natural_language_date}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_16",
    "domain": "analytics",
    "query": "please plot the distribution of the total visits metric on November 14",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-14\", time_max=\"2023-11-14\", value_to_plot=\"total_visits\", plot_type=\"histogram\")']",
    "base_template": "Plot the distribution of {natural_language_metric} on {natural_language_date}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_17",
    "domain": "analytics",
    "query": "please plot the distribution of the engaged users metric on November 15",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-15\", time_max=\"2023-11-15\", value_to_plot=\"user_engaged\", plot_type=\"histogram\")']",
    "base_template": "Plot the distribution of {natural_language_metric} on {natural_language_date}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_18",
    "domain": "analytics",
    "query": "please plot the distribution of the engaged users metric on November 29",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-29\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"histogram\")']",
    "base_template": "Plot the distribution of {natural_language_metric} on {natural_language_date}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_19",
    "domain": "analytics",
    "query": "Plot the distribution of total visits on October 28",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-28\", time_max=\"2023-10-28\", value_to_plot=\"total_visits\", plot_type=\"histogram\")']",
    "base_template": "Plot the distribution of {natural_language_metric} on {natural_language_date}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_20",
    "domain": "analytics",
    "query": "Please plot for me the distribution of engaged users and total visits between November 5 and November 21",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-05\", time_max=\"2023-11-21\", value_to_plot=\"user_engaged\", plot_type=\"histogram\")', 'analytics.create_plot.func(time_min=\"2023-11-05\", time_max=\"2023-11-21\", value_to_plot=\"total_visits\", plot_type=\"histogram\")']",
    "base_template": "Can you plot the distribution of both {natural_language_metric} and {natural_language_metric_2} between {natural_language_date} and {natural_language_date_max}??",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_21",
    "domain": "analytics",
    "query": "I need a histogram of total visits and average session duration between September 29 and November 13",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-29\", time_max=\"2023-11-13\", value_to_plot=\"total_visits\", plot_type=\"histogram\")', 'analytics.create_plot.func(time_min=\"2023-09-29\", time_max=\"2023-11-13\", value_to_plot=\"session_duration_seconds\", plot_type=\"histogram\")']",
    "base_template": "Can you plot the distribution of both {natural_language_metric} and {natural_language_metric_2} between {natural_language_date} and {natural_language_date_max}??",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_22",
    "domain": "analytics",
    "query": "Can you plot the distribution of both total visits and average session duration between October 11 and November 19??",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-11\", time_max=\"2023-11-19\", value_to_plot=\"total_visits\", plot_type=\"histogram\")', 'analytics.create_plot.func(time_min=\"2023-10-11\", time_max=\"2023-11-19\", value_to_plot=\"session_duration_seconds\", plot_type=\"histogram\")']",
    "base_template": "Can you plot the distribution of both {natural_language_metric} and {natural_language_metric_2} between {natural_language_date} and {natural_language_date_max}??",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_23",
    "domain": "analytics",
    "query": "Can you plot the distribution of both total visits and average session duration between October 12 and November 6??",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-12\", time_max=\"2023-11-06\", value_to_plot=\"total_visits\", plot_type=\"histogram\")', 'analytics.create_plot.func(time_min=\"2023-10-12\", time_max=\"2023-11-06\", value_to_plot=\"session_duration_seconds\", plot_type=\"histogram\")']",
    "base_template": "Can you plot the distribution of both {natural_language_metric} and {natural_language_metric_2} between {natural_language_date} and {natural_language_date_max}??",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_24",
    "domain": "analytics",
    "query": "Please plot for me the distribution of engaged users and average session duration between October 14 and November 6",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-14\", time_max=\"2023-11-06\", value_to_plot=\"user_engaged\", plot_type=\"histogram\")', 'analytics.create_plot.func(time_min=\"2023-10-14\", time_max=\"2023-11-06\", value_to_plot=\"session_duration_seconds\", plot_type=\"histogram\")']",
    "base_template": "Can you plot the distribution of both {natural_language_metric} and {natural_language_metric_2} between {natural_language_date} and {natural_language_date_max}??",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_25",
    "domain": "analytics",
    "query": "Please plot for me the distribution of total visits and average session duration between November 15 and November 24",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-15\", time_max=\"2023-11-24\", value_to_plot=\"total_visits\", plot_type=\"histogram\")', 'analytics.create_plot.func(time_min=\"2023-11-15\", time_max=\"2023-11-24\", value_to_plot=\"session_duration_seconds\", plot_type=\"histogram\")']",
    "base_template": "Can you plot the distribution of both {natural_language_metric} and {natural_language_metric_2} between {natural_language_date} and {natural_language_date_max}??",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_26",
    "domain": "analytics",
    "query": "I need a histogram of average session duration and engaged users between November 3 and November 19",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-03\", time_max=\"2023-11-19\", value_to_plot=\"session_duration_seconds\", plot_type=\"histogram\")', 'analytics.create_plot.func(time_min=\"2023-11-03\", time_max=\"2023-11-19\", value_to_plot=\"user_engaged\", plot_type=\"histogram\")']",
    "base_template": "Can you plot the distribution of both {natural_language_metric} and {natural_language_metric_2} between {natural_language_date} and {natural_language_date_max}??",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_27",
    "domain": "analytics",
    "query": "Please plot for me the distribution of engaged users and total visits between September 3 and November 2",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-03\", time_max=\"2023-11-02\", value_to_plot=\"user_engaged\", plot_type=\"histogram\")', 'analytics.create_plot.func(time_min=\"2023-09-03\", time_max=\"2023-11-02\", value_to_plot=\"total_visits\", plot_type=\"histogram\")']",
    "base_template": "Can you plot the distribution of both {natural_language_metric} and {natural_language_metric_2} between {natural_language_date} and {natural_language_date_max}??",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_28",
    "domain": "analytics",
    "query": "Please plot for me the distribution of total visits and average session duration between November 24 and November 28",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-24\", time_max=\"2023-11-28\", value_to_plot=\"total_visits\", plot_type=\"histogram\")', 'analytics.create_plot.func(time_min=\"2023-11-24\", time_max=\"2023-11-28\", value_to_plot=\"session_duration_seconds\", plot_type=\"histogram\")']",
    "base_template": "Can you plot the distribution of both {natural_language_metric} and {natural_language_metric_2} between {natural_language_date} and {natural_language_date_max}??",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_29",
    "domain": "analytics",
    "query": "I need a histogram of average session duration and engaged users between October 9 and October 26",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-09\", time_max=\"2023-10-26\", value_to_plot=\"session_duration_seconds\", plot_type=\"histogram\")', 'analytics.create_plot.func(time_min=\"2023-10-09\", time_max=\"2023-10-26\", value_to_plot=\"user_engaged\", plot_type=\"histogram\")']",
    "base_template": "Can you plot the distribution of both {natural_language_metric} and {natural_language_metric_2} between {natural_language_date} and {natural_language_date_max}??",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_30",
    "domain": "analytics",
    "query": "was total visits less than 3 at any time since September 13? If so, please plot it as a line chart",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_31",
    "domain": "analytics",
    "query": "Can you make a line chart of engaged users since October 24 if it was less than 11 since at any time October 24?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-24\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_32",
    "domain": "analytics",
    "query": "was total visits more than 3 at any time since October 28? If so, please plot it as a line chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-28\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_33",
    "domain": "analytics",
    "query": "If average session duration was more than 2 at any time since October 29, make a line plot of it since then",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-29\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_34",
    "domain": "analytics",
    "query": "was engaged users less than 1 at any time since September 7? If so, please plot it as a line chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-07\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_35",
    "domain": "analytics",
    "query": "was total visits more than 3 at any time since October 6? If so, please plot it as a line chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-06\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_36",
    "domain": "analytics",
    "query": "was average session duration more than 19 at any time since November 5? If so, please plot it as a line chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-05\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_37",
    "domain": "analytics",
    "query": "Can you make a line chart of total visits since September 24 if it was more than 21 since at any time September 24?",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_38",
    "domain": "analytics",
    "query": "Can you make a line chart of engaged users since October 6 if it was more than 1 since at any time October 6?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-06\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_39",
    "domain": "analytics",
    "query": "Can you make a line chart of engaged users since September 9 if it was more than 5 since at any time September 9?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-09\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_40",
    "domain": "analytics",
    "query": "Make bar charts showing average session duration and engaged users since 2023-09-04",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-04\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-09-04\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"bar\")']",
    "base_template": "Make bar charts showing {natural_language_metric} and {natural_language_metric_2} since {date_min}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_41",
    "domain": "analytics",
    "query": "can you make bar charts of average session duration and total visits since 2023-11-05?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-05\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-11-05\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"bar\")']",
    "base_template": "Make bar charts showing {natural_language_metric} and {natural_language_metric_2} since {date_min}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_42",
    "domain": "analytics",
    "query": "I need bar charts of total visits and engaged users since 2023-11-10",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-10\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-11-10\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"bar\")']",
    "base_template": "Make bar charts showing {natural_language_metric} and {natural_language_metric_2} since {date_min}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_43",
    "domain": "analytics",
    "query": "Make bar charts showing engaged users and average session duration since 2023-09-24",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-24\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-09-24\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"bar\")']",
    "base_template": "Make bar charts showing {natural_language_metric} and {natural_language_metric_2} since {date_min}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_44",
    "domain": "analytics",
    "query": "I need bar charts of average session duration and total visits since 2023-11-03",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-03\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-11-03\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"bar\")']",
    "base_template": "Make bar charts showing {natural_language_metric} and {natural_language_metric_2} since {date_min}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_45",
    "domain": "analytics",
    "query": "Make bar charts showing average session duration and total visits since 2023-11-17",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-17\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-11-17\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"bar\")']",
    "base_template": "Make bar charts showing {natural_language_metric} and {natural_language_metric_2} since {date_min}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_46",
    "domain": "analytics",
    "query": "Make bar charts showing total visits and engaged users since 2023-11-17",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-17\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-11-17\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"bar\")']",
    "base_template": "Make bar charts showing {natural_language_metric} and {natural_language_metric_2} since {date_min}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_47",
    "domain": "analytics",
    "query": "Make bar charts showing engaged users and average session duration since 2023-11-23",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-23\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-11-23\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"bar\")']",
    "base_template": "Make bar charts showing {natural_language_metric} and {natural_language_metric_2} since {date_min}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_48",
    "domain": "analytics",
    "query": "can you make bar charts of engaged users and average session duration since 2023-11-02?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-02\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-11-02\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"bar\")']",
    "base_template": "Make bar charts showing {natural_language_metric} and {natural_language_metric_2} since {date_min}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_49",
    "domain": "analytics",
    "query": "I need bar charts of engaged users and average session duration since 2023-10-14",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-14\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-10-14\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"bar\")']",
    "base_template": "Make bar charts showing {natural_language_metric} and {natural_language_metric_2} since {date_min}",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_50",
    "domain": "analytics",
    "query": "Was total visits more than 21 at any time in the last 1 weeks? If so, please plot it as a line chart",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} any time in the last {past_n_weeks} weeks, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_51",
    "domain": "analytics",
    "query": "Can you make a line chart of average session duration since the last 2 weeks if it was more than 2 at any time in the last 2 weeks?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-16\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} any time in the last {past_n_weeks} weeks, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_52",
    "domain": "analytics",
    "query": "If engaged users was more than 11 any time in the last 1 weeks, make a line plot of it since then",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} any time in the last {past_n_weeks} weeks, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_53",
    "domain": "analytics",
    "query": "Can you make a line chart of total visits since the last 4 weeks if it was more than 10 at any time in the last 4 weeks?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-02\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} any time in the last {past_n_weeks} weeks, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_54",
    "domain": "analytics",
    "query": "Was total visits less than 3 at any time in the last 1 weeks? If so, please plot it as a line chart",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} any time in the last {past_n_weeks} weeks, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_55",
    "domain": "analytics",
    "query": "Was total visits more than 10 at any time in the last 2 weeks? If so, please plot it as a line chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-16\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} any time in the last {past_n_weeks} weeks, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_56",
    "domain": "analytics",
    "query": "Was engaged users more than 11 at any time in the last 3 weeks? If so, please plot it as a line chart",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} any time in the last {past_n_weeks} weeks, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_57",
    "domain": "analytics",
    "query": "Was average session duration less than 2 at any time in the last 2 weeks? If so, please plot it as a line chart",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} any time in the last {past_n_weeks} weeks, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_58",
    "domain": "analytics",
    "query": "Can you make a line chart of total visits since the last 5 weeks if it was more than 21 at any time in the last 5 weeks?",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} any time in the last {past_n_weeks} weeks, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_59",
    "domain": "analytics",
    "query": "Can you make a line chart of engaged users since the last 4 weeks if it was less than 5 at any time in the last 4 weeks?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-02\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} any time in the last {past_n_weeks} weeks, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_60",
    "domain": "analytics",
    "query": "Is engaged users more than 5% lower than September 25? If so, please plot it as a line chart",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_61",
    "domain": "analytics",
    "query": "Can you make a line chart of engaged users since October 3 if it was more than 3% lower than October 3?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-03\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_62",
    "domain": "analytics",
    "query": "Is engaged users more than 5% higher than September 26? If so, please plot it as a line chart",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_63",
    "domain": "analytics",
    "query": "Is total visits more than 5% lower than September 28? If so, please plot it as a line chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-28\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_64",
    "domain": "analytics",
    "query": "Can you make a line chart of total visits since September 15 if it was more than 3% lower than September 15?",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_65",
    "domain": "analytics",
    "query": "If engaged users is more than 3% higher than November 18, make a line plot of it since then",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-18\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_66",
    "domain": "analytics",
    "query": "Is total visits more than 10% lower than October 21? If so, please plot it as a line chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-21\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_67",
    "domain": "analytics",
    "query": "If engaged users is more than 10% lower than November 24, make a line plot of it since then",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_68",
    "domain": "analytics",
    "query": "Can you make a line chart of engaged users since October 21 if it was more than 10% higher than October 21?",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_69",
    "domain": "analytics",
    "query": "If average session duration is more than 3% lower than October 4, make a line plot of it since then",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-04\", time_max=\"2023-11-29\", value_to_plot=\"session_duration_seconds\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than {natural_language_date}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_70",
    "domain": "analytics",
    "query": "Can you make a line chart of engaged users since Sunday if it is more than 10% higher than Sunday?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-26\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than it was on {day_of_week}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_71",
    "domain": "analytics",
    "query": "Is average session duration more than 5% higher than it was on Sunday? If so, please plot it as a line chart since then",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than it was on {day_of_week}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_72",
    "domain": "analytics",
    "query": "Can you make a line chart of engaged users since Sunday if it is more than 5% lower than Sunday?",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than it was on {day_of_week}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_73",
    "domain": "analytics",
    "query": "Is total visits more than 3% higher than it was on Wednesday? If so, please plot it as a line chart since then",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than it was on {day_of_week}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_74",
    "domain": "analytics",
    "query": "Is engaged users more than 2% lower than it was on Sunday? If so, please plot it as a line chart since then",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than it was on {day_of_week}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_75",
    "domain": "analytics",
    "query": "Is total visits more than 2% lower than it was on Saturday? If so, please plot it as a line chart since then",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-25\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than it was on {day_of_week}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_76",
    "domain": "analytics",
    "query": "Is engaged users more than 3% lower than it was on Sunday? If so, please plot it as a line chart since then",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than it was on {day_of_week}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_77",
    "domain": "analytics",
    "query": "Can you make a line chart of average session duration since Wednesday if it is more than 3% higher than Wednesday?",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than it was on {day_of_week}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_78",
    "domain": "analytics",
    "query": "If average session duration is more than 10% lower than it was on Saturday, make a line plot of it since then",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than it was on {day_of_week}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_79",
    "domain": "analytics",
    "query": "Is average session duration more than 10% lower than it was on Wednesday? If so, please plot it as a line chart since then",
    "answer": "[]",
    "base_template": "If {natural_language_metric} is more than {natural_language_growth_threshold} {higher_or_lower} than it was on {day_of_week}, make a line plot of it since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_80",
    "domain": "analytics",
    "query": "If average session duration on monday was more than 2% lower than it was the previous monday, make a line plot of it over that period.",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-20\", time_max=\"2023-11-27\", value_to_plot=\"session_duration_seconds\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} on {day_of_week} was more than {natural_language_growth_threshold} {higher_or_lower} than it was the previous {day_of_week}, make a line plot of it over that period.",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_81",
    "domain": "analytics",
    "query": "make a line chart of engaged users over the period from friday to the previous friday if it was more than 3% higher on friday than it was the previous friday",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-17\", time_max=\"2023-11-24\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} on {day_of_week} was more than {natural_language_growth_threshold} {higher_or_lower} than it was the previous {day_of_week}, make a line plot of it over that period.",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_82",
    "domain": "analytics",
    "query": "make a line chart of total visits over the period from tuesday to the previous tuesday if it was more than 2% lower on tuesday than it was the previous tuesday",
    "answer": "[]",
    "base_template": "If {natural_language_metric} on {day_of_week} was more than {natural_language_growth_threshold} {higher_or_lower} than it was the previous {day_of_week}, make a line plot of it over that period.",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_83",
    "domain": "analytics",
    "query": "Was total visits on monday more than 5% higher than it was the previous monday? If so, please plot it as a line chart",
    "answer": "[]",
    "base_template": "If {natural_language_metric} on {day_of_week} was more than {natural_language_growth_threshold} {higher_or_lower} than it was the previous {day_of_week}, make a line plot of it over that period.",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_84",
    "domain": "analytics",
    "query": "If average session duration on saturday was more than 3% higher than it was the previous saturday, make a line plot of it over that period.",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-18\", time_max=\"2023-11-25\", value_to_plot=\"session_duration_seconds\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} on {day_of_week} was more than {natural_language_growth_threshold} {higher_or_lower} than it was the previous {day_of_week}, make a line plot of it over that period.",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_85",
    "domain": "analytics",
    "query": "make a line chart of engaged users over the period from friday to the previous friday if it was more than 2% lower on friday than it was the previous friday",
    "answer": "[]",
    "base_template": "If {natural_language_metric} on {day_of_week} was more than {natural_language_growth_threshold} {higher_or_lower} than it was the previous {day_of_week}, make a line plot of it over that period.",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_86",
    "domain": "analytics",
    "query": "Was engaged users on monday more than 10% higher than it was the previous monday? If so, please plot it as a line chart",
    "answer": "[]",
    "base_template": "If {natural_language_metric} on {day_of_week} was more than {natural_language_growth_threshold} {higher_or_lower} than it was the previous {day_of_week}, make a line plot of it over that period.",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_87",
    "domain": "analytics",
    "query": "Was average session duration on monday more than 3% lower than it was the previous monday? If so, please plot it as a line chart",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-20\", time_max=\"2023-11-27\", value_to_plot=\"session_duration_seconds\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} on {day_of_week} was more than {natural_language_growth_threshold} {higher_or_lower} than it was the previous {day_of_week}, make a line plot of it over that period.",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_88",
    "domain": "analytics",
    "query": "If average session duration on sunday was more than 2% lower than it was the previous sunday, make a line plot of it over that period.",
    "answer": "[]",
    "base_template": "If {natural_language_metric} on {day_of_week} was more than {natural_language_growth_threshold} {higher_or_lower} than it was the previous {day_of_week}, make a line plot of it over that period.",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_89",
    "domain": "analytics",
    "query": "If engaged users on sunday was more than 2% lower than it was the previous sunday, make a line plot of it over that period.",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-19\", time_max=\"2023-11-26\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "If {natural_language_metric} on {day_of_week} was more than {natural_language_growth_threshold} {higher_or_lower} than it was the previous {day_of_week}, make a line plot of it over that period.",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_90",
    "domain": "analytics",
    "query": "if total visits grew by more than engaged users since Saturday, make a line plot of both since then",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-25\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"line\")', 'analytics.create_plot.func(time_min=\"2023-11-25\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"line\")']",
    "base_template": "Can you check the percent growth of {natural_language_metric} since {day_of_week}? If it grew by more than {natural_language_metric_2}, plot both lines since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_91",
    "domain": "analytics",
    "query": "if engaged users grew by more than total visits since Tuesday, make a line plot of both since then",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-28\", time_max=\"2023-11-29\", value_to_plot=\"user_engaged\", plot_type=\"line\")', 'analytics.create_plot.func(time_min=\"2023-11-28\", time_max=\"2023-11-29\", value_to_plot=\"total_visits\", plot_type=\"line\")']",
    "base_template": "Can you check the percent growth of {natural_language_metric} since {day_of_week}? If it grew by more than {natural_language_metric_2}, plot both lines since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_92",
    "domain": "analytics",
    "query": "Can you check the percent growth of average session duration since Sunday? If it grew by more than total visits, plot both lines since then",
    "answer": "[]",
    "base_template": "Can you check the percent growth of {natural_language_metric} since {day_of_week}? If it grew by more than {natural_language_metric_2}, plot both lines since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_93",
    "domain": "analytics",
    "query": "if average session duration grew by more than total visits since Friday, make a line plot of both since then",
    "answer": "[]",
    "base_template": "Can you check the percent growth of {natural_language_metric} since {day_of_week}? If it grew by more than {natural_language_metric_2}, plot both lines since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_94",
    "domain": "analytics",
    "query": "Check the percent growth of average session duration since Friday. If it grew by more than engaged users, plot both lines since then",
    "answer": "[]",
    "base_template": "Can you check the percent growth of {natural_language_metric} since {day_of_week}? If it grew by more than {natural_language_metric_2}, plot both lines since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_95",
    "domain": "analytics",
    "query": "Can you check the percent growth of average session duration since Monday? If it grew by more than engaged users, plot both lines since then",
    "answer": "[]",
    "base_template": "Can you check the percent growth of {natural_language_metric} since {day_of_week}? If it grew by more than {natural_language_metric_2}, plot both lines since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_96",
    "domain": "analytics",
    "query": "if engaged users grew by more than total visits since Monday, make a line plot of both since then",
    "answer": "[]",
    "base_template": "Can you check the percent growth of {natural_language_metric} since {day_of_week}? If it grew by more than {natural_language_metric_2}, plot both lines since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_97",
    "domain": "analytics",
    "query": "Check the percent growth of engaged users since Tuesday. If it grew by more than average session duration, plot both lines since then",
    "answer": "[]",
    "base_template": "Can you check the percent growth of {natural_language_metric} since {day_of_week}? If it grew by more than {natural_language_metric_2}, plot both lines since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_98",
    "domain": "analytics",
    "query": "Can you check the percent growth of average session duration since Wednesday? If it grew by more than total visits, plot both lines since then",
    "answer": "[]",
    "base_template": "Can you check the percent growth of {natural_language_metric} since {day_of_week}? If it grew by more than {natural_language_metric_2}, plot both lines since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_99",
    "domain": "analytics",
    "query": "if average session duration grew by more than total visits since Wednesday, make a line plot of both since then",
    "answer": "[]",
    "base_template": "Can you check the percent growth of {natural_language_metric} since {day_of_week}? If it grew by more than {natural_language_metric_2}, plot both lines since then",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_100",
    "domain": "analytics",
    "query": "Can you make a line plot of the most popular traffic source since September 28?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-28\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"line\")']",
    "base_template": "Can you make a line plot of the {most_or_least} popular traffic source since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_101",
    "domain": "analytics",
    "query": "Can you make a line plot of the most popular traffic source since November 29?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-29\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"line\")']",
    "base_template": "Can you make a line plot of the {most_or_least} popular traffic source since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_102",
    "domain": "analytics",
    "query": "Can you make a line plot of the most popular traffic source since November 27?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-27\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"line\")']",
    "base_template": "Can you make a line plot of the {most_or_least} popular traffic source since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_103",
    "domain": "analytics",
    "query": "Make a line plot of the most popular traffic source since October 20",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-20\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"line\")']",
    "base_template": "Can you make a line plot of the {most_or_least} popular traffic source since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_104",
    "domain": "analytics",
    "query": "Can you make a line plot of the most popular traffic source since October 15?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-15\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"line\")']",
    "base_template": "Can you make a line plot of the {most_or_least} popular traffic source since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_105",
    "domain": "analytics",
    "query": "Can you make a line plot of the most popular traffic source since November 24?",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-24\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"line\")']",
    "base_template": "Can you make a line plot of the {most_or_least} popular traffic source since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_106",
    "domain": "analytics",
    "query": "Make a line plot of the most popular traffic source since November 16",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-16\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"line\")']",
    "base_template": "Can you make a line plot of the {most_or_least} popular traffic source since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_107",
    "domain": "analytics",
    "query": "Make a line plot of the most popular traffic source since October 13",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-13\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"line\")']",
    "base_template": "Can you make a line plot of the {most_or_least} popular traffic source since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_108",
    "domain": "analytics",
    "query": "plot the most popular traffic source since September 28",
    "answer": "['analytics.create_plot.func(time_min=\"2023-09-28\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"line\")']",
    "base_template": "Can you make a line plot of the {most_or_least} popular traffic source since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_109",
    "domain": "analytics",
    "query": "plot the most popular traffic source since October 27",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-27\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"line\")']",
    "base_template": "Can you make a line plot of the {most_or_least} popular traffic source since {natural_language_date}?",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_110",
    "domain": "analytics",
    "query": "Make bar charts of social media and search engine over the last 6 weeks if we got more traffic from social media than search engine",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-19\", time_max=\"2023-11-29\", value_to_plot=\"visits_social_media\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-10-19\", time_max=\"2023-11-29\", value_to_plot=\"visits_search_engine\", plot_type=\"bar\")']",
    "base_template": "If we got more traffic from {traffic_source_1} than {traffic_source_2} during the last {n_weeks} weeks, make bar charts of both over that period",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_111",
    "domain": "analytics",
    "query": "did we get more traffic from referral than direct during the last 3 weeks? If so, make bar charts of both over that period",
    "answer": "[]",
    "base_template": "If we got more traffic from {traffic_source_1} than {traffic_source_2} during the last {n_weeks} weeks, make bar charts of both over that period",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_112",
    "domain": "analytics",
    "query": "did we get more traffic from direct than social media during the last 6 weeks? If so, make bar charts of both over that period",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-19\", time_max=\"2023-11-29\", value_to_plot=\"visits_direct\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-10-19\", time_max=\"2023-11-29\", value_to_plot=\"visits_social_media\", plot_type=\"bar\")']",
    "base_template": "If we got more traffic from {traffic_source_1} than {traffic_source_2} during the last {n_weeks} weeks, make bar charts of both over that period",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_113",
    "domain": "analytics",
    "query": "Make bar charts of referral and social media over the last 4 weeks if we got more traffic from referral than social media",
    "answer": "[]",
    "base_template": "If we got more traffic from {traffic_source_1} than {traffic_source_2} during the last {n_weeks} weeks, make bar charts of both over that period",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_114",
    "domain": "analytics",
    "query": "did we get more traffic from search engine than direct during the last 5 weeks? If so, make bar charts of both over that period",
    "answer": "[]",
    "base_template": "If we got more traffic from {traffic_source_1} than {traffic_source_2} during the last {n_weeks} weeks, make bar charts of both over that period",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_115",
    "domain": "analytics",
    "query": "If we got more traffic from referral than social media during the last 6 weeks, make bar charts of both over that period",
    "answer": "[]",
    "base_template": "If we got more traffic from {traffic_source_1} than {traffic_source_2} during the last {n_weeks} weeks, make bar charts of both over that period",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_116",
    "domain": "analytics",
    "query": "did we get more traffic from social media than search engine during the last 5 weeks? If so, make bar charts of both over that period",
    "answer": "['analytics.create_plot.func(time_min=\"2023-10-26\", time_max=\"2023-11-29\", value_to_plot=\"visits_social_media\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-10-26\", time_max=\"2023-11-29\", value_to_plot=\"visits_search_engine\", plot_type=\"bar\")']",
    "base_template": "If we got more traffic from {traffic_source_1} than {traffic_source_2} during the last {n_weeks} weeks, make bar charts of both over that period",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_117",
    "domain": "analytics",
    "query": "If we got more traffic from search engine than social media during the last 5 weeks, make bar charts of both over that period",
    "answer": "[]",
    "base_template": "If we got more traffic from {traffic_source_1} than {traffic_source_2} during the last {n_weeks} weeks, make bar charts of both over that period",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_118",
    "domain": "analytics",
    "query": "If we got more traffic from referral than search engine during the last 5 weeks, make bar charts of both over that period",
    "answer": "[]",
    "base_template": "If we got more traffic from {traffic_source_1} than {traffic_source_2} during the last {n_weeks} weeks, make bar charts of both over that period",
    "domains": "['analytics']"
  },
  {
    "id": "analytics_119",
    "domain": "analytics",
    "query": "Make bar charts of social media and search engine over the last 4 weeks if we got more traffic from social media than search engine",
    "answer": "['analytics.create_plot.func(time_min=\"2023-11-02\", time_max=\"2023-11-29\", value_to_plot=\"visits_social_media\", plot_type=\"bar\")', 'analytics.create_plot.func(time_min=\"2023-11-02\", time_max=\"2023-11-29\", value_to_plot=\"visits_search_engine\", plot_type=\"bar\")']",
    "base_template": "If we got more traffic from {traffic_source_1} than {traffic_source_2} during the last {n_weeks} weeks, make bar charts of both over that period",
    "domains": "['analytics']"
  },
  {
    "id": "calendar_0",
    "domain": "calendar",
    "query": "Delete my first meeting on December 13",
    "answer": "['calendar.delete_event.func(event_id=\"00000256\")']",
    "base_template": "Cancel my first meeting on {natural_language_date}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_1",
    "domain": "calendar",
    "query": "Cancel my first meeting on December 13",
    "answer": "['calendar.delete_event.func(event_id=\"00000256\")']",
    "base_template": "Cancel my first meeting on {natural_language_date}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_2",
    "domain": "calendar",
    "query": "can you cancel my first meeting on December 1",
    "answer": "['calendar.delete_event.func(event_id=\"00000165\")']",
    "base_template": "Cancel my first meeting on {natural_language_date}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_3",
    "domain": "calendar",
    "query": "can you cancel my first meeting on December 8",
    "answer": "['calendar.delete_event.func(event_id=\"00000236\")']",
    "base_template": "Cancel my first meeting on {natural_language_date}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_4",
    "domain": "calendar",
    "query": "can you cancel my first meeting on December 6",
    "answer": "['calendar.delete_event.func(event_id=\"00000045\")']",
    "base_template": "Cancel my first meeting on {natural_language_date}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_5",
    "domain": "calendar",
    "query": "Cancel my first meeting on December 18",
    "answer": "['calendar.delete_event.func(event_id=\"00000047\")']",
    "base_template": "Cancel my first meeting on {natural_language_date}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_6",
    "domain": "calendar",
    "query": "Delete my first meeting on December 6",
    "answer": "['calendar.delete_event.func(event_id=\"00000045\")']",
    "base_template": "Cancel my first meeting on {natural_language_date}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_7",
    "domain": "calendar",
    "query": "Delete my first meeting on December 18",
    "answer": "['calendar.delete_event.func(event_id=\"00000047\")']",
    "base_template": "Cancel my first meeting on {natural_language_date}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_8",
    "domain": "calendar",
    "query": "Delete my first meeting on December 12",
    "answer": "['calendar.delete_event.func(event_id=\"00000055\")']",
    "base_template": "Cancel my first meeting on {natural_language_date}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_9",
    "domain": "calendar",
    "query": "Cancel my first meeting on December 7",
    "answer": "['calendar.delete_event.func(event_id=\"00000019\")']",
    "base_template": "Cancel my first meeting on {natural_language_date}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_10",
    "domain": "calendar",
    "query": "Change the name of the last event on December 19 to casual catch-up",
    "answer": "['calendar.update_event.func(event_id=\"00000020\", field=\"event_name\", new_value=\"casual catch-up\")']",
    "base_template": "Change the name of the last event on {natural_language_date} to {event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_11",
    "domain": "calendar",
    "query": "Can you change the name of the last event on November 30 to brainstorming session",
    "answer": "['calendar.update_event.func(event_id=\"00000253\", field=\"event_name\", new_value=\"brainstorming session\")']",
    "base_template": "Change the name of the last event on {natural_language_date} to {event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_12",
    "domain": "calendar",
    "query": "Change the name of the last event on December 4 to weekly summary",
    "answer": "['calendar.update_event.func(event_id=\"00000062\", field=\"event_name\", new_value=\"weekly summary\")']",
    "base_template": "Change the name of the last event on {natural_language_date} to {event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_13",
    "domain": "calendar",
    "query": "Change the name of the last event on December 12 to Machine Learning Chat",
    "answer": "['calendar.update_event.func(event_id=\"00000208\", field=\"event_name\", new_value=\"Machine Learning Chat\")']",
    "base_template": "Change the name of the last event on {natural_language_date} to {event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_14",
    "domain": "calendar",
    "query": "Change the name of the last event on December 5 to quarterly tech roundup",
    "answer": "['calendar.update_event.func(event_id=\"00000060\", field=\"event_name\", new_value=\"quarterly tech roundup\")']",
    "base_template": "Change the name of the last event on {natural_language_date} to {event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_15",
    "domain": "calendar",
    "query": "Change the name of the last event on December 4 to feedback discussion",
    "answer": "['calendar.update_event.func(event_id=\"00000062\", field=\"event_name\", new_value=\"feedback discussion\")']",
    "base_template": "Change the name of the last event on {natural_language_date} to {event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_16",
    "domain": "calendar",
    "query": "Change the name of the last event on December 8 to feedback discussion",
    "answer": "['calendar.update_event.func(event_id=\"00000185\", field=\"event_name\", new_value=\"feedback discussion\")']",
    "base_template": "Change the name of the last event on {natural_language_date} to {event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_17",
    "domain": "calendar",
    "query": "Can you change the name of the last event on December 14 to quarterly tech roundup",
    "answer": "['calendar.update_event.func(event_id=\"00000082\", field=\"event_name\", new_value=\"quarterly tech roundup\")']",
    "base_template": "Change the name of the last event on {natural_language_date} to {event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_18",
    "domain": "calendar",
    "query": "Rename the last event on December 14 to Customer Insight Forum",
    "answer": "['calendar.update_event.func(event_id=\"00000082\", field=\"event_name\", new_value=\"Customer Insight Forum\")']",
    "base_template": "Change the name of the last event on {natural_language_date} to {event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_19",
    "domain": "calendar",
    "query": "Change the name of the last event on December 15 to Product Launch Analysis",
    "answer": "['calendar.update_event.func(event_id=\"00000181\", field=\"event_name\", new_value=\"Product Launch Analysis\")']",
    "base_template": "Change the name of the last event on {natural_language_date} to {event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_20",
    "domain": "calendar",
    "query": "please move my first meeting with kofi on December 4 by 1.5 hours",
    "answer": "['calendar.update_event.func(event_id=\"00000109\", field=\"event_start\", new_value=\"2023-12-04 12:00:00\")']",
    "base_template": "Push back my first meeting with {name} on {natural_language_date} by {duration}s",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_21",
    "domain": "calendar",
    "query": "Push back my first meeting with yuki on December 4 by 2 hours",
    "answer": "['calendar.update_event.func(event_id=\"00000062\", field=\"event_start\", new_value=\"2023-12-04 16:30:00\")']",
    "base_template": "Push back my first meeting with {name} on {natural_language_date} by {duration}s",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_22",
    "domain": "calendar",
    "query": "Delay my first meeting with yuki on December 4 by 30 minutes",
    "answer": "['calendar.update_event.func(event_id=\"00000062\", field=\"event_start\", new_value=\"2023-12-04 15:00:00\")']",
    "base_template": "Push back my first meeting with {name} on {natural_language_date} by {duration}s",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_23",
    "domain": "calendar",
    "query": "Delay my first meeting with nia on December 19 by 1.5 hours",
    "answer": "['calendar.update_event.func(event_id=\"00000020\", field=\"event_start\", new_value=\"2023-12-19 15:30:00\")']",
    "base_template": "Push back my first meeting with {name} on {natural_language_date} by {duration}s",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_24",
    "domain": "calendar",
    "query": "please move my first meeting with nadia on December 11 by 1.5 hours",
    "answer": "['calendar.update_event.func(event_id=\"00000161\", field=\"event_start\", new_value=\"2023-12-11 15:00:00\")']",
    "base_template": "Push back my first meeting with {name} on {natural_language_date} by {duration}s",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_25",
    "domain": "calendar",
    "query": "please move my first meeting with dmitri on December 18 by 2 hours",
    "answer": "['calendar.update_event.func(event_id=\"00000047\", field=\"event_start\", new_value=\"2023-12-18 15:30:00\")']",
    "base_template": "Push back my first meeting with {name} on {natural_language_date} by {duration}s",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_26",
    "domain": "calendar",
    "query": "please move my first meeting with dmitri on December 18 by 30 minutes",
    "answer": "['calendar.update_event.func(event_id=\"00000047\", field=\"event_start\", new_value=\"2023-12-18 14:00:00\")']",
    "base_template": "Push back my first meeting with {name} on {natural_language_date} by {duration}s",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_27",
    "domain": "calendar",
    "query": "please move my first meeting with amir on December 20 by 30 minutes",
    "answer": "['calendar.update_event.func(event_id=\"00000077\", field=\"event_start\", new_value=\"2023-12-20 10:30:00\")']",
    "base_template": "Push back my first meeting with {name} on {natural_language_date} by {duration}s",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_28",
    "domain": "calendar",
    "query": "Push back my first meeting with nia on December 12 by 1.5 hours",
    "answer": "['calendar.update_event.func(event_id=\"00000208\", field=\"event_start\", new_value=\"2023-12-12 16:00:00\")']",
    "base_template": "Push back my first meeting with {name} on {natural_language_date} by {duration}s",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_29",
    "domain": "calendar",
    "query": "Push back my first meeting with dmitri on December 18 by 1 hours",
    "answer": "['calendar.update_event.func(event_id=\"00000047\", field=\"event_start\", new_value=\"2023-12-18 14:30:00\")']",
    "base_template": "Push back my first meeting with {name} on {natural_language_date} by {duration}s",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_30",
    "domain": "calendar",
    "query": "Can you cancel the next Year-End Performance Assessment meeting",
    "answer": "['calendar.delete_event.func(event_id=\"00000091\")']",
    "base_template": "Cancel the next {event_name} meeting",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_31",
    "domain": "calendar",
    "query": "Can you cancel the next annual summary meeting",
    "answer": "['calendar.delete_event.func(event_id=\"00000096\")']",
    "base_template": "Cancel the next {event_name} meeting",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_32",
    "domain": "calendar",
    "query": "Can you cancel the next Corporate Social Responsibility Initiative meeting",
    "answer": "['calendar.delete_event.func(event_id=\"00000165\")']",
    "base_template": "Cancel the next {event_name} meeting",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_33",
    "domain": "calendar",
    "query": "Can you cancel the next project checkpoint meeting",
    "answer": "['calendar.delete_event.func(event_id=\"00000237\")']",
    "base_template": "Cancel the next {event_name} meeting",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_34",
    "domain": "calendar",
    "query": "Can you cancel the next IT Systems Update Briefing meeting",
    "answer": "['calendar.delete_event.func(event_id=\"00000213\")']",
    "base_template": "Cancel the next {event_name} meeting",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_35",
    "domain": "calendar",
    "query": "Delete the next Health & Wellness Expo meeting",
    "answer": "['calendar.delete_event.func(event_id=\"00000082\")']",
    "base_template": "Cancel the next {event_name} meeting",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_36",
    "domain": "calendar",
    "query": "Delete the next Board of Directors Conclave meeting",
    "answer": "['calendar.delete_event.func(event_id=\"00000170\")']",
    "base_template": "Cancel the next {event_name} meeting",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_37",
    "domain": "calendar",
    "query": "Delete the next Annual Budget Planning Session meeting",
    "answer": "['calendar.delete_event.func(event_id=\"00000200\")']",
    "base_template": "Cancel the next {event_name} meeting",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_38",
    "domain": "calendar",
    "query": "Cancel the next Quarterly Sales Review meeting",
    "answer": "['calendar.delete_event.func(event_id=\"00000121\")']",
    "base_template": "Cancel the next {event_name} meeting",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_39",
    "domain": "calendar",
    "query": "Cancel the next team evaluation meeting",
    "answer": "['calendar.delete_event.func(event_id=\"00000047\")']",
    "base_template": "Cancel the next {event_name} meeting",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_40",
    "domain": "calendar",
    "query": "can you rename the next process review meeting to Customer Insight Forum",
    "answer": "['calendar.update_event.func(event_id=\"00000137\", field=\"event_name\", new_value=\"Customer Insight Forum\")']",
    "base_template": "Rename the next {event_name} meeting to {new_event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_41",
    "domain": "calendar",
    "query": "Rename the next team evaluation meeting to Customer Insight Forum",
    "answer": "['calendar.update_event.func(event_id=\"00000047\", field=\"event_name\", new_value=\"Customer Insight Forum\")']",
    "base_template": "Rename the next {event_name} meeting to {new_event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_42",
    "domain": "calendar",
    "query": "can you rename the next sync up meeting to daily stand-up",
    "answer": "['calendar.update_event.func(event_id=\"00000016\", field=\"event_name\", new_value=\"daily stand-up\")']",
    "base_template": "Rename the next {event_name} meeting to {new_event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_43",
    "domain": "calendar",
    "query": "Rename the next Project Initiation Meeting meeting to Product Launch Analysis",
    "answer": "['calendar.update_event.func(event_id=\"00000060\", field=\"event_name\", new_value=\"Product Launch Analysis\")']",
    "base_template": "Rename the next {event_name} meeting to {new_event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_44",
    "domain": "calendar",
    "query": "Change the name of the next daily stand-up meeting to Data Security and Compliance Training",
    "answer": "['calendar.update_event.func(event_id=\"00000086\", field=\"event_name\", new_value=\"Data Security and Compliance Training\")']",
    "base_template": "Rename the next {event_name} meeting to {new_event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_45",
    "domain": "calendar",
    "query": "Rename the next daily stand-up meeting to Diversity & Inclusion Workshop",
    "answer": "['calendar.update_event.func(event_id=\"00000086\", field=\"event_name\", new_value=\"Diversity & Inclusion Workshop\")']",
    "base_template": "Rename the next {event_name} meeting to {new_event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_46",
    "domain": "calendar",
    "query": "Change the name of the next brainstorming session meeting to status briefing",
    "answer": "['calendar.update_event.func(event_id=\"00000252\", field=\"event_name\", new_value=\"status briefing\")']",
    "base_template": "Rename the next {event_name} meeting to {new_event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_47",
    "domain": "calendar",
    "query": "Rename the next Corporate Social Responsibility Initiative meeting to Risk Management Forum",
    "answer": "['calendar.update_event.func(event_id=\"00000165\", field=\"event_name\", new_value=\"Risk Management Forum\")']",
    "base_template": "Rename the next {event_name} meeting to {new_event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_48",
    "domain": "calendar",
    "query": "can you rename the next project checkpoint meeting to team orientation",
    "answer": "['calendar.update_event.func(event_id=\"00000237\", field=\"event_name\", new_value=\"team orientation\")']",
    "base_template": "Rename the next {event_name} meeting to {new_event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_49",
    "domain": "calendar",
    "query": "Change the name of the next Year-End Performance Assessment meeting to Machine Learning Chat",
    "answer": "['calendar.update_event.func(event_id=\"00000091\", field=\"event_name\", new_value=\"Machine Learning Chat\")']",
    "base_template": "Rename the next {event_name} meeting to {new_event_name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_50",
    "domain": "calendar",
    "query": "Cancel my next meeting with sofia",
    "answer": "['calendar.delete_event.func(event_id=\"00000027\")']",
    "base_template": "Cancel my next meeting with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_51",
    "domain": "calendar",
    "query": "Cancel my next meeting with yuki",
    "answer": "['calendar.delete_event.func(event_id=\"00000062\")']",
    "base_template": "Cancel my next meeting with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_52",
    "domain": "calendar",
    "query": "sofia is off sick. Can you cancel my next meeting with them?",
    "answer": "['calendar.delete_event.func(event_id=\"00000027\")']",
    "base_template": "Cancel my next meeting with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_53",
    "domain": "calendar",
    "query": "I need to cancel my next meeting with aisha. Can you do that for me please?",
    "answer": "['calendar.delete_event.func(event_id=\"00000225\")']",
    "base_template": "Cancel my next meeting with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_54",
    "domain": "calendar",
    "query": "I need to cancel my next meeting with fatima. Can you do that for me please?",
    "answer": "['calendar.delete_event.func(event_id=\"00000200\")']",
    "base_template": "Cancel my next meeting with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_55",
    "domain": "calendar",
    "query": "I need to cancel my next meeting with raj. Can you do that for me please?",
    "answer": "['calendar.delete_event.func(event_id=\"00000093\")']",
    "base_template": "Cancel my next meeting with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_56",
    "domain": "calendar",
    "query": "Cancel my next meeting with anaya",
    "answer": "['calendar.delete_event.func(event_id=\"00000152\")']",
    "base_template": "Cancel my next meeting with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_57",
    "domain": "calendar",
    "query": "Cancel my next meeting with dmitri",
    "answer": "['calendar.delete_event.func(event_id=\"00000236\")']",
    "base_template": "Cancel my next meeting with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_58",
    "domain": "calendar",
    "query": "I need to cancel my next meeting with akira. Can you do that for me please?",
    "answer": "[]",
    "base_template": "Cancel my next meeting with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_59",
    "domain": "calendar",
    "query": "Cancel my next meeting with aisha",
    "answer": "['calendar.delete_event.func(event_id=\"00000225\")']",
    "base_template": "Cancel my next meeting with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_60",
    "domain": "calendar",
    "query": "I think I might need to catch up with sofia. Can you check if I've met with them in the last 3 days? If not, schedule a 30-minute meeting for my first free slot from tomorrow",
    "answer": "[]",
    "base_template": "If I haven't met with {name} in the last {duration} days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_61",
    "domain": "calendar",
    "query": "If I haven't met with aisha in the last 4 days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"catch-up\", participant_email=\"aisha.chen@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If I haven't met with {name} in the last {duration} days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_62",
    "domain": "calendar",
    "query": "If I haven't met with aisha in the last 9 days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "answer": "[]",
    "base_template": "If I haven't met with {name} in the last {duration} days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_63",
    "domain": "calendar",
    "query": "If I haven't met with fatima in the last 9 days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"catch-up\", participant_email=\"fatima.khan@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If I haven't met with {name} in the last {duration} days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_64",
    "domain": "calendar",
    "query": "If I haven't met with amir in the last 4 days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"catch-up\", participant_email=\"amir.ali@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If I haven't met with {name} in the last {duration} days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_65",
    "domain": "calendar",
    "query": "I think I might need to catch up with sofia. Can you check if I've met with them in the last 8 days? If not, schedule a 30-minute meeting for my first free slot from tomorrow",
    "answer": "[]",
    "base_template": "If I haven't met with {name} in the last {duration} days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_66",
    "domain": "calendar",
    "query": "If I haven't met with akira in the last 7 days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "answer": "[]",
    "base_template": "If I haven't met with {name} in the last {duration} days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_67",
    "domain": "calendar",
    "query": "If I haven't met with santiago in the last 7 days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"catch-up\", participant_email=\"santiago.martinez@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If I haven't met with {name} in the last {duration} days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_68",
    "domain": "calendar",
    "query": "I think I might need to catch up with raj. Can you check if I've met with them in the last 5 days? If not, schedule a 30-minute meeting for my first free slot from tomorrow",
    "answer": "[]",
    "base_template": "If I haven't met with {name} in the last {duration} days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_69",
    "domain": "calendar",
    "query": "have I met with carlos in the last 7 days? If not, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"catch-up\", participant_email=\"carlos.rodriguez@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If I haven't met with {name} in the last {duration} days, schedule a 30-minute meeting called 'catch-up' for my first free slot from tomorrow",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_70",
    "domain": "calendar",
    "query": "Cancel my meetings on Wednesday after 11",
    "answer": "['calendar.delete_event.func(event_id=\"00000038\")', 'calendar.delete_event.func(event_id=\"00000242\")']",
    "base_template": "Cancel my meetings on {next_day} {before_or_after} {natural_language_time}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_71",
    "domain": "calendar",
    "query": "Delete my meetings on Friday before 12",
    "answer": "['calendar.delete_event.func(event_id=\"00000165\")', 'calendar.delete_event.func(event_id=\"00000091\")']",
    "base_template": "Cancel my meetings on {next_day} {before_or_after} {natural_language_time}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_72",
    "domain": "calendar",
    "query": "Delete my meetings on Friday before 2",
    "answer": "['calendar.delete_event.func(event_id=\"00000165\")', 'calendar.delete_event.func(event_id=\"00000091\")', 'calendar.delete_event.func(event_id=\"00000237\")', 'calendar.delete_event.func(event_id=\"00000093\")']",
    "base_template": "Cancel my meetings on {next_day} {before_or_after} {natural_language_time}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_73",
    "domain": "calendar",
    "query": "something came up. Can you cancel my meetings on Tuesday before 9?",
    "answer": "[]",
    "base_template": "Cancel my meetings on {next_day} {before_or_after} {natural_language_time}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_74",
    "domain": "calendar",
    "query": "something came up. Can you cancel my meetings on Friday before 11:30?",
    "answer": "['calendar.delete_event.func(event_id=\"00000165\")', 'calendar.delete_event.func(event_id=\"00000091\")']",
    "base_template": "Cancel my meetings on {next_day} {before_or_after} {natural_language_time}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_75",
    "domain": "calendar",
    "query": "Cancel my meetings on Friday before 10:30",
    "answer": "['calendar.delete_event.func(event_id=\"00000165\")', 'calendar.delete_event.func(event_id=\"00000091\")']",
    "base_template": "Cancel my meetings on {next_day} {before_or_after} {natural_language_time}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_76",
    "domain": "calendar",
    "query": "something came up. Can you cancel my meetings on Tuesday before 2?",
    "answer": "['calendar.delete_event.func(event_id=\"00000287\")', 'calendar.delete_event.func(event_id=\"00000064\")', 'calendar.delete_event.func(event_id=\"00000060\")']",
    "base_template": "Cancel my meetings on {next_day} {before_or_after} {natural_language_time}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_77",
    "domain": "calendar",
    "query": "something came up. Can you cancel my meetings on Friday before 10:30?",
    "answer": "['calendar.delete_event.func(event_id=\"00000165\")', 'calendar.delete_event.func(event_id=\"00000091\")']",
    "base_template": "Cancel my meetings on {next_day} {before_or_after} {natural_language_time}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_78",
    "domain": "calendar",
    "query": "Cancel my meetings on Tuesday after 3",
    "answer": "[]",
    "base_template": "Cancel my meetings on {next_day} {before_or_after} {natural_language_time}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_79",
    "domain": "calendar",
    "query": "Delete my meetings on Wednesday after 1:30",
    "answer": "['calendar.delete_event.func(event_id=\"00000242\")']",
    "base_template": "Cancel my meetings on {next_day} {before_or_after} {natural_language_time}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_80",
    "domain": "calendar",
    "query": "Cancel all future meetings with raj",
    "answer": "['calendar.delete_event.func(event_id=\"00000093\")', 'calendar.delete_event.func(event_id=\"00000242\")', 'calendar.delete_event.func(event_id=\"00000012\")']",
    "base_template": "Cancel all future meetings with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_81",
    "domain": "calendar",
    "query": "carlos is leaving the company. Can you cancel all future meetings with them?",
    "answer": "['calendar.delete_event.func(event_id=\"00000054\")', 'calendar.delete_event.func(event_id=\"00000205\")']",
    "base_template": "Cancel all future meetings with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_82",
    "domain": "calendar",
    "query": "Cancel all future meetings with anaya",
    "answer": "['calendar.delete_event.func(event_id=\"00000152\")']",
    "base_template": "Cancel all future meetings with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_83",
    "domain": "calendar",
    "query": "luis is leaving the company. Can you cancel all future meetings with them?",
    "answer": "['calendar.delete_event.func(event_id=\"00000070\")']",
    "base_template": "Cancel all future meetings with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_84",
    "domain": "calendar",
    "query": "I need to cancel all future meetings with olga. Can you do that for me please?",
    "answer": "['calendar.delete_event.func(event_id=\"00000165\")', 'calendar.delete_event.func(event_id=\"00000287\")', 'calendar.delete_event.func(event_id=\"00000121\")', 'calendar.delete_event.func(event_id=\"00000131\")']",
    "base_template": "Cancel all future meetings with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_85",
    "domain": "calendar",
    "query": "Cancel all future meetings with yuki",
    "answer": "['calendar.delete_event.func(event_id=\"00000062\")', 'calendar.delete_event.func(event_id=\"00000119\")']",
    "base_template": "Cancel all future meetings with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_86",
    "domain": "calendar",
    "query": "Cancel all future meetings with nia",
    "answer": "['calendar.delete_event.func(event_id=\"00000237\")', 'calendar.delete_event.func(event_id=\"00000279\")', 'calendar.delete_event.func(event_id=\"00000208\")', 'calendar.delete_event.func(event_id=\"00000020\")']",
    "base_template": "Cancel all future meetings with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_87",
    "domain": "calendar",
    "query": "leila is leaving the company. Can you cancel all future meetings with them?",
    "answer": "['calendar.delete_event.func(event_id=\"00000091\")', 'calendar.delete_event.func(event_id=\"00000294\")', 'calendar.delete_event.func(event_id=\"00000174\")']",
    "base_template": "Cancel all future meetings with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_88",
    "domain": "calendar",
    "query": "kofi is leaving the company. Can you cancel all future meetings with them?",
    "answer": "['calendar.delete_event.func(event_id=\"00000253\")', 'calendar.delete_event.func(event_id=\"00000109\")', 'calendar.delete_event.func(event_id=\"00000086\")']",
    "base_template": "Cancel all future meetings with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_89",
    "domain": "calendar",
    "query": "Cancel all future meetings with amir",
    "answer": "['calendar.delete_event.func(event_id=\"00000261\")', 'calendar.delete_event.func(event_id=\"00000137\")', 'calendar.delete_event.func(event_id=\"00000213\")', 'calendar.delete_event.func(event_id=\"00000284\")', 'calendar.delete_event.func(event_id=\"00000077\")', 'calendar.delete_event.func(event_id=\"00000171\")']",
    "base_template": "Cancel all future meetings with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_90",
    "domain": "calendar",
    "query": "Delete all the future board of directors conclave meetings",
    "answer": "['calendar.delete_event.func(event_id=\"00000170\")']",
    "base_template": "Cancel future {event_name} meetings",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_91",
    "domain": "calendar",
    "query": "Delete all the future Global Expansion Strategy Discussion meetings",
    "answer": "[]",
    "base_template": "Cancel future {event_name} meetings",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_92",
    "domain": "calendar",
    "query": "We've decided we don't need any any more risk management forum meetings. Can you cancel all future ones?",
    "answer": "['calendar.delete_event.func(event_id=\"00000225\")']",
    "base_template": "Cancel future {event_name} meetings",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_93",
    "domain": "calendar",
    "query": "We've decided we don't need any any more health & wellness expo meetings. Can you cancel all future ones?",
    "answer": "['calendar.delete_event.func(event_id=\"00000082\")']",
    "base_template": "Cancel future {event_name} meetings",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_94",
    "domain": "calendar",
    "query": "We've decided we don't need any any more weekly summary meetings. Can you cancel all future ones?",
    "answer": "[]",
    "base_template": "Cancel future {event_name} meetings",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_95",
    "domain": "calendar",
    "query": "We've decided we don't need any any more sync up meetings. Can you cancel all future ones?",
    "answer": "['calendar.delete_event.func(event_id=\"00000016\")']",
    "base_template": "Cancel future {event_name} meetings",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_96",
    "domain": "calendar",
    "query": "Delete all the future quarterly tech roundup meetings",
    "answer": "['calendar.delete_event.func(event_id=\"00000294\")', 'calendar.delete_event.func(event_id=\"00000119\")']",
    "base_template": "Cancel future {event_name} meetings",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_97",
    "domain": "calendar",
    "query": "Cancel future status briefing meetings",
    "answer": "[]",
    "base_template": "Cancel future {event_name} meetings",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_98",
    "domain": "calendar",
    "query": "Delete all the future strategic planning meeting meetings",
    "answer": "['calendar.delete_event.func(event_id=\"00000185\")', 'calendar.delete_event.func(event_id=\"00000012\")', 'calendar.delete_event.func(event_id=\"00000205\")']",
    "base_template": "Cancel future {event_name} meetings",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_99",
    "domain": "calendar",
    "query": "Cancel future quarterly sales review meetings",
    "answer": "['calendar.delete_event.func(event_id=\"00000121\")']",
    "base_template": "Cancel future {event_name} meetings",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_100",
    "domain": "calendar",
    "query": "Create a 1.5 hour event called New Employee Onboarding on December 8 at 3:30 with nia",
    "answer": "['calendar.create_event.func(event_name=\"New Employee Onboarding\", participant_email=\"nia.johnson@atlas.com\", event_start=\"2023-12-08 15:30:00\", duration=\"90\")']",
    "base_template": "Create a {duration} event called {event_name} on {natural_language_date} at {natural_language_time} with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_101",
    "domain": "calendar",
    "query": "I need to catch up with nadia. can you schedule a 1.5 hour event called Diversity & Inclusion Workshop on December 19 at 11?",
    "answer": "['calendar.create_event.func(event_name=\"Diversity & Inclusion Workshop\", participant_email=\"nadia.moreau@atlas.com\", event_start=\"2023-12-19 11:00:00\", duration=\"90\")']",
    "base_template": "Create a {duration} event called {event_name} on {natural_language_date} at {natural_language_time} with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_102",
    "domain": "calendar",
    "query": "I need to catch up with nadia. can you schedule a 1.5 hour event called Global Expansion Strategy Discussion on December 13 at 12:30?",
    "answer": "['calendar.create_event.func(event_name=\"Global Expansion Strategy Discussion\", participant_email=\"nadia.moreau@atlas.com\", event_start=\"2023-12-13 12:30:00\", duration=\"90\")']",
    "base_template": "Create a {duration} event called {event_name} on {natural_language_date} at {natural_language_time} with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_103",
    "domain": "calendar",
    "query": "I need to catch up with sofia. can you schedule a 1.5 hour event called quarterly tech roundup on December 5 at 11?",
    "answer": "['calendar.create_event.func(event_name=\"quarterly tech roundup\", participant_email=\"sofia.santos@atlas.com\", event_start=\"2023-12-05 11:00:00\", duration=\"90\")']",
    "base_template": "Create a {duration} event called {event_name} on {natural_language_date} at {natural_language_time} with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_104",
    "domain": "calendar",
    "query": "I need to catch up with fatima. can you schedule a 2 hour event called Board of Directors Conclave on December 4 at 1:30?",
    "answer": "['calendar.create_event.func(event_name=\"Board of Directors Conclave\", participant_email=\"fatima.khan@atlas.com\", event_start=\"2023-12-04 13:30:00\", duration=\"120\")']",
    "base_template": "Create a {duration} event called {event_name} on {natural_language_date} at {natural_language_time} with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_105",
    "domain": "calendar",
    "query": "I haven't met with yuki in a while. Can you schedule a 30 minute event called Digital Transformation Conference on December 20 at 10?",
    "answer": "['calendar.create_event.func(event_name=\"Digital Transformation Conference\", participant_email=\"yuki.tanaka@atlas.com\", event_start=\"2023-12-20 10:00:00\", duration=\"30\")']",
    "base_template": "Create a {duration} event called {event_name} on {natural_language_date} at {natural_language_time} with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_106",
    "domain": "calendar",
    "query": "I haven't met with olga in a while. Can you schedule a 2 hour event called project runway briefing on December 13 at 3:30?",
    "answer": "['calendar.create_event.func(event_name=\"project runway briefing\", participant_email=\"olga.petrova@atlas.com\", event_start=\"2023-12-13 15:30:00\", duration=\"120\")']",
    "base_template": "Create a {duration} event called {event_name} on {natural_language_date} at {natural_language_time} with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_107",
    "domain": "calendar",
    "query": "Create a 2 hour event called brainstorming session on December 21 at 12 with dmitri",
    "answer": "['calendar.create_event.func(event_name=\"brainstorming session\", participant_email=\"dmitri.ivanov@atlas.com\", event_start=\"2023-12-21 12:00:00\", duration=\"120\")']",
    "base_template": "Create a {duration} event called {event_name} on {natural_language_date} at {natural_language_time} with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_108",
    "domain": "calendar",
    "query": "I haven't met with raj in a while. Can you schedule a 2 hour event called Data Security and Compliance Training on December 19 at 3?",
    "answer": "['calendar.create_event.func(event_name=\"Data Security and Compliance Training\", participant_email=\"raj.patel@atlas.com\", event_start=\"2023-12-19 15:00:00\", duration=\"120\")']",
    "base_template": "Create a {duration} event called {event_name} on {natural_language_date} at {natural_language_time} with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "calendar_109",
    "domain": "calendar",
    "query": "I need to catch up with leila. can you schedule a 1.5 hour event called Creative Thinking Workshop on December 1 at 1?",
    "answer": "['calendar.create_event.func(event_name=\"Creative Thinking Workshop\", participant_email=\"leila.azizi@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"90\")']",
    "base_template": "Create a {duration} event called {event_name} on {natural_language_date} at {natural_language_time} with {name}",
    "domains": "['calendar']"
  },
  {
    "id": "customer_relationship_manager_0",
    "domain": "customer_relationship_manager",
    "query": "Update the status of Cameron Anderson to qualified in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000048\", field=\"status\", new_value=\"Qualified\")']",
    "base_template": "Update the status of {current_customer_name} to {new_status_natural_language} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_1",
    "domain": "customer_relationship_manager",
    "query": "Update the status of Riley Brown to proposal in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000169\", field=\"status\", new_value=\"Proposal\")']",
    "base_template": "Update the status of {current_customer_name} to {new_status_natural_language} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_2",
    "domain": "customer_relationship_manager",
    "query": "Update the status of Jessie Thomas to won in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000149\", field=\"status\", new_value=\"Won\")']",
    "base_template": "Update the status of {current_customer_name} to {new_status_natural_language} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_3",
    "domain": "customer_relationship_manager",
    "query": "Quinn Thomas has moved to lead status. Can you update that in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000041\", field=\"status\", new_value=\"Lead\")']",
    "base_template": "Update the status of {current_customer_name} to {new_status_natural_language} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_4",
    "domain": "customer_relationship_manager",
    "query": "Update the status of Quinn Harris to won in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000107\", field=\"status\", new_value=\"Won\")']",
    "base_template": "Update the status of {current_customer_name} to {new_status_natural_language} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_5",
    "domain": "customer_relationship_manager",
    "query": "Quinn Brown has moved to lost status. Can you update that in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000188\", field=\"status\", new_value=\"Lost\")']",
    "base_template": "Update the status of {current_customer_name} to {new_status_natural_language} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_6",
    "domain": "customer_relationship_manager",
    "query": "Update the status of Jamie Anderson to lost in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000133\", field=\"status\", new_value=\"Lost\")']",
    "base_template": "Update the status of {current_customer_name} to {new_status_natural_language} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_7",
    "domain": "customer_relationship_manager",
    "query": "We've got a new customer that's moved to proposal status. Can you update Kerry Brown to proposal in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000199\", field=\"status\", new_value=\"Proposal\")']",
    "base_template": "Update the status of {current_customer_name} to {new_status_natural_language} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_8",
    "domain": "customer_relationship_manager",
    "query": "Update the status of Jordan Jones to won in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000027\", field=\"status\", new_value=\"Won\")']",
    "base_template": "Update the status of {current_customer_name} to {new_status_natural_language} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_9",
    "domain": "customer_relationship_manager",
    "query": "Jamie Davis has moved to lead status. Can you update that in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000007\", field=\"status\", new_value=\"Lead\")']",
    "base_template": "Update the status of {current_customer_name} to {new_status_natural_language} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_10",
    "domain": "customer_relationship_manager",
    "query": "Casey White is no longer a customer. Can you delete them from the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000167\")']",
    "base_template": "Delete {current_customer_name} from the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_11",
    "domain": "customer_relationship_manager",
    "query": "Delete Rahul Martinez from the crm",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000003\")']",
    "base_template": "Delete {current_customer_name} from the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_12",
    "domain": "customer_relationship_manager",
    "query": "We no longer need to keep Shannon Wilson in the crm. Can you delete them?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000124\")']",
    "base_template": "Delete {current_customer_name} from the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_13",
    "domain": "customer_relationship_manager",
    "query": "Rahul Moore is no longer a customer. Can you delete them from the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000073\")']",
    "base_template": "Delete {current_customer_name} from the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_14",
    "domain": "customer_relationship_manager",
    "query": "Delete Peyton Jones from the crm",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000182\")']",
    "base_template": "Delete {current_customer_name} from the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_15",
    "domain": "customer_relationship_manager",
    "query": "Kerry Moore is no longer a customer. Can you delete them from the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000046\")']",
    "base_template": "Delete {current_customer_name} from the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_16",
    "domain": "customer_relationship_manager",
    "query": "Delete Shannon Jones from the crm",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000008\")']",
    "base_template": "Delete {current_customer_name} from the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_17",
    "domain": "customer_relationship_manager",
    "query": "Delete Jamie Taylor from the crm",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000019\")']",
    "base_template": "Delete {current_customer_name} from the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_18",
    "domain": "customer_relationship_manager",
    "query": "Kerry Robinson is no longer a customer. Can you delete them from the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000196\")']",
    "base_template": "Delete {current_customer_name} from the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_19",
    "domain": "customer_relationship_manager",
    "query": "Delete Jaden White from the crm",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000052\")']",
    "base_template": "Delete {current_customer_name} from the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_20",
    "domain": "customer_relationship_manager",
    "query": "can you add Morgan Wilson to the crm? They're a new lead and need to be assigned to Nadia",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Morgan Wilson\", assigned_to_email=\"nadia.moreau@atlas.com\", status=\"Lead\")']",
    "base_template": "Add {new_customer_name} as a new lead in the crm and assign them to {assigned_to_first_name}",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_21",
    "domain": "customer_relationship_manager",
    "query": "Add Avery White as a new lead in the crm and assign them to Raj",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Avery White\", assigned_to_email=\"raj.patel@atlas.com\", status=\"Lead\")']",
    "base_template": "Add {new_customer_name} as a new lead in the crm and assign them to {assigned_to_first_name}",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_22",
    "domain": "customer_relationship_manager",
    "query": "We've got a new lead called Jordan Moore. Can you add them to the crm and assign them to Akira?",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Jordan Moore\", assigned_to_email=\"akira.sato@atlas.com\", status=\"Lead\")']",
    "base_template": "Add {new_customer_name} as a new lead in the crm and assign them to {assigned_to_first_name}",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_23",
    "domain": "customer_relationship_manager",
    "query": "Add Quinn Robinson as a new lead in the crm and assign them to Raj",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Quinn Robinson\", assigned_to_email=\"raj.patel@atlas.com\", status=\"Lead\")']",
    "base_template": "Add {new_customer_name} as a new lead in the crm and assign them to {assigned_to_first_name}",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_24",
    "domain": "customer_relationship_manager",
    "query": "Add Rahul Johnson as a new lead in the crm and assign them to Lena",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Rahul Johnson\", assigned_to_email=\"lena.schmidt@atlas.com\", status=\"Lead\")']",
    "base_template": "Add {new_customer_name} as a new lead in the crm and assign them to {assigned_to_first_name}",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_25",
    "domain": "customer_relationship_manager",
    "query": "can you add Jaden Brown to the crm? They're a new lead and need to be assigned to Sofia",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Jaden Brown\", assigned_to_email=\"sofia.santos@atlas.com\", status=\"Lead\")']",
    "base_template": "Add {new_customer_name} as a new lead in the crm and assign them to {assigned_to_first_name}",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_26",
    "domain": "customer_relationship_manager",
    "query": "can you add Taylor Robinson to the crm? They're a new lead and need to be assigned to Sofia",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Taylor Robinson\", assigned_to_email=\"sofia.santos@atlas.com\", status=\"Lead\")']",
    "base_template": "Add {new_customer_name} as a new lead in the crm and assign them to {assigned_to_first_name}",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_27",
    "domain": "customer_relationship_manager",
    "query": "Add Jordan Moore as a new lead in the crm and assign them to Nadia",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Jordan Moore\", assigned_to_email=\"nadia.moreau@atlas.com\", status=\"Lead\")']",
    "base_template": "Add {new_customer_name} as a new lead in the crm and assign them to {assigned_to_first_name}",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_28",
    "domain": "customer_relationship_manager",
    "query": "Add Rahul Davis as a new lead in the crm and assign them to Akira",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Rahul Davis\", assigned_to_email=\"akira.sato@atlas.com\", status=\"Lead\")']",
    "base_template": "Add {new_customer_name} as a new lead in the crm and assign them to {assigned_to_first_name}",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_29",
    "domain": "customer_relationship_manager",
    "query": "We've got a new lead called Dakota Wilson. Can you add them to the crm and assign them to Sofia?",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Dakota Wilson\", assigned_to_email=\"sofia.santos@atlas.com\", status=\"Lead\")']",
    "base_template": "Add {new_customer_name} as a new lead in the crm and assign them to {assigned_to_first_name}",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_30",
    "domain": "customer_relationship_manager",
    "query": "We're moving Dakota Wilson to Raj. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000076\", field=\"assigned_to_email\", new_value=\"raj.patel@atlas.com\")']",
    "base_template": "Reassign {current_customer_name} to {assigned_to_first_name} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_31",
    "domain": "customer_relationship_manager",
    "query": "Reassign Morgan Robinson to Sofia in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000125\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")']",
    "base_template": "Reassign {current_customer_name} to {assigned_to_first_name} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_32",
    "domain": "customer_relationship_manager",
    "query": "Raj is taking over Alex Jackson. Can you reassign them in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000038\", field=\"assigned_to_email\", new_value=\"raj.patel@atlas.com\")']",
    "base_template": "Reassign {current_customer_name} to {assigned_to_first_name} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_33",
    "domain": "customer_relationship_manager",
    "query": "Reassign Rahul Martinez to Lena in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000003\", field=\"assigned_to_email\", new_value=\"lena.schmidt@atlas.com\")']",
    "base_template": "Reassign {current_customer_name} to {assigned_to_first_name} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_34",
    "domain": "customer_relationship_manager",
    "query": "Akira is taking over Reese Thomas. Can you reassign them in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000020\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")']",
    "base_template": "Reassign {current_customer_name} to {assigned_to_first_name} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_35",
    "domain": "customer_relationship_manager",
    "query": "Reassign Reese Jones to Lena in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000051\", field=\"assigned_to_email\", new_value=\"lena.schmidt@atlas.com\")']",
    "base_template": "Reassign {current_customer_name} to {assigned_to_first_name} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_36",
    "domain": "customer_relationship_manager",
    "query": "Lena is taking over Parker Martin. Can you reassign them in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000159\", field=\"assigned_to_email\", new_value=\"lena.schmidt@atlas.com\")']",
    "base_template": "Reassign {current_customer_name} to {assigned_to_first_name} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_37",
    "domain": "customer_relationship_manager",
    "query": "Nadia is taking over Avery Martinez. Can you reassign them in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000160\", field=\"assigned_to_email\", new_value=\"nadia.moreau@atlas.com\")']",
    "base_template": "Reassign {current_customer_name} to {assigned_to_first_name} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_38",
    "domain": "customer_relationship_manager",
    "query": "We're moving Taylor Jackson to Raj. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000189\", field=\"assigned_to_email\", new_value=\"raj.patel@atlas.com\")']",
    "base_template": "Reassign {current_customer_name} to {assigned_to_first_name} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_39",
    "domain": "customer_relationship_manager",
    "query": "We're moving Jamie Martin to Sofia. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000193\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")']",
    "base_template": "Reassign {current_customer_name} to {assigned_to_first_name} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_40",
    "domain": "customer_relationship_manager",
    "query": "Akira is taking over all of Lena's leads that are interested in software. Can you reassign them in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000076\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000063\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000113\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")']",
    "base_template": "Reassign all of {assigned_to_first_name}'s leads that are interested in {natural_language_product_interest} to {new_assigned_to_first_name} in the crm.",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_41",
    "domain": "customer_relationship_manager",
    "query": "Reassign all of Akira's leads that are interested in hardware to Lena in the crm.",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000004\", field=\"assigned_to_email\", new_value=\"lena.schmidt@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000012\", field=\"assigned_to_email\", new_value=\"lena.schmidt@atlas.com\")']",
    "base_template": "Reassign all of {assigned_to_first_name}'s leads that are interested in {natural_language_product_interest} to {new_assigned_to_first_name} in the crm.",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_42",
    "domain": "customer_relationship_manager",
    "query": "Reassign all of Nadia's leads that are interested in training to Lena in the crm.",
    "answer": "[]",
    "base_template": "Reassign all of {assigned_to_first_name}'s leads that are interested in {natural_language_product_interest} to {new_assigned_to_first_name} in the crm.",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_43",
    "domain": "customer_relationship_manager",
    "query": "Lena is taking over all of Akira's leads that are interested in software. Can you reassign them in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000095\", field=\"assigned_to_email\", new_value=\"lena.schmidt@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000080\", field=\"assigned_to_email\", new_value=\"lena.schmidt@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000035\", field=\"assigned_to_email\", new_value=\"lena.schmidt@atlas.com\")']",
    "base_template": "Reassign all of {assigned_to_first_name}'s leads that are interested in {natural_language_product_interest} to {new_assigned_to_first_name} in the crm.",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_44",
    "domain": "customer_relationship_manager",
    "query": "Reassign all of Raj's leads that are interested in services to Sofia in the crm.",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000154\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000149\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000100\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000108\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")']",
    "base_template": "Reassign all of {assigned_to_first_name}'s leads that are interested in {natural_language_product_interest} to {new_assigned_to_first_name} in the crm.",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_45",
    "domain": "customer_relationship_manager",
    "query": "Reassign all of Nadia's leads that are interested in consulting to Raj in the crm.",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000031\", field=\"assigned_to_email\", new_value=\"raj.patel@atlas.com\")']",
    "base_template": "Reassign all of {assigned_to_first_name}'s leads that are interested in {natural_language_product_interest} to {new_assigned_to_first_name} in the crm.",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_46",
    "domain": "customer_relationship_manager",
    "query": "Akira is taking over all of Lena's leads that are interested in hardware. Can you reassign them in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000187\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000180\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000017\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000015\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")']",
    "base_template": "Reassign all of {assigned_to_first_name}'s leads that are interested in {natural_language_product_interest} to {new_assigned_to_first_name} in the crm.",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_47",
    "domain": "customer_relationship_manager",
    "query": "We're moving all of Lena's leads that are interested in services to Sofia. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000034\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000177\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000110\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")']",
    "base_template": "Reassign all of {assigned_to_first_name}'s leads that are interested in {natural_language_product_interest} to {new_assigned_to_first_name} in the crm.",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_48",
    "domain": "customer_relationship_manager",
    "query": "Reassign all of Raj's leads that are interested in training to Akira in the crm.",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000194\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000129\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000062\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")']",
    "base_template": "Reassign all of {assigned_to_first_name}'s leads that are interested in {natural_language_product_interest} to {new_assigned_to_first_name} in the crm.",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_49",
    "domain": "customer_relationship_manager",
    "query": "Reassign all of Lena's leads that are interested in services to Sofia in the crm.",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000034\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000177\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000110\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")']",
    "base_template": "Reassign all of {assigned_to_first_name}'s leads that are interested in {natural_language_product_interest} to {new_assigned_to_first_name} in the crm.",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_50",
    "domain": "customer_relationship_manager",
    "query": "I need to move all of Sofia's customers that are interested in services and are either qualified or in proposal to Raj. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000099\", field=\"assigned_to_email\", new_value=\"raj.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000137\", field=\"assigned_to_email\", new_value=\"raj.patel@atlas.com\")']",
    "base_template": "Give {new_assigned_to_first_name} all of {assigned_to_first_name}'s customers that are interested in {natural_language_product_interest} and are either qualified or in proposal in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_51",
    "domain": "customer_relationship_manager",
    "query": "Raj is taking over all of Sofia's customers that are interested in training and are either qualified or in proposal. Can you reassign them in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000120\", field=\"assigned_to_email\", new_value=\"raj.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000042\", field=\"assigned_to_email\", new_value=\"raj.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000184\", field=\"assigned_to_email\", new_value=\"raj.patel@atlas.com\")']",
    "base_template": "Give {new_assigned_to_first_name} all of {assigned_to_first_name}'s customers that are interested in {natural_language_product_interest} and are either qualified or in proposal in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_52",
    "domain": "customer_relationship_manager",
    "query": "Give Raj all of Nadia's customers that are interested in consulting and are either qualified or in proposal in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000027\", field=\"assigned_to_email\", new_value=\"raj.patel@atlas.com\")']",
    "base_template": "Give {new_assigned_to_first_name} all of {assigned_to_first_name}'s customers that are interested in {natural_language_product_interest} and are either qualified or in proposal in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_53",
    "domain": "customer_relationship_manager",
    "query": "I need to move all of Sofia's customers that are interested in training and are either qualified or in proposal to Nadia. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000120\", field=\"assigned_to_email\", new_value=\"nadia.moreau@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000042\", field=\"assigned_to_email\", new_value=\"nadia.moreau@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000184\", field=\"assigned_to_email\", new_value=\"nadia.moreau@atlas.com\")']",
    "base_template": "Give {new_assigned_to_first_name} all of {assigned_to_first_name}'s customers that are interested in {natural_language_product_interest} and are either qualified or in proposal in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_54",
    "domain": "customer_relationship_manager",
    "query": "Give Sofia all of Lena's customers that are interested in training and are either qualified or in proposal in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000141\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000161\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000146\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000087\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000181\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000022\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")']",
    "base_template": "Give {new_assigned_to_first_name} all of {assigned_to_first_name}'s customers that are interested in {natural_language_product_interest} and are either qualified or in proposal in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_55",
    "domain": "customer_relationship_manager",
    "query": "Give Nadia all of Sofia's customers that are interested in hardware and are either qualified or in proposal in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000102\", field=\"assigned_to_email\", new_value=\"nadia.moreau@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000159\", field=\"assigned_to_email\", new_value=\"nadia.moreau@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000026\", field=\"assigned_to_email\", new_value=\"nadia.moreau@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000058\", field=\"assigned_to_email\", new_value=\"nadia.moreau@atlas.com\")']",
    "base_template": "Give {new_assigned_to_first_name} all of {assigned_to_first_name}'s customers that are interested in {natural_language_product_interest} and are either qualified or in proposal in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_56",
    "domain": "customer_relationship_manager",
    "query": "I need to move all of Raj's customers that are interested in hardware and are either qualified or in proposal to Sofia. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000135\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")']",
    "base_template": "Give {new_assigned_to_first_name} all of {assigned_to_first_name}'s customers that are interested in {natural_language_product_interest} and are either qualified or in proposal in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_57",
    "domain": "customer_relationship_manager",
    "query": "Give Akira all of Nadia's customers that are interested in hardware and are either qualified or in proposal in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000037\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000195\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000138\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000132\", field=\"assigned_to_email\", new_value=\"akira.sato@atlas.com\")']",
    "base_template": "Give {new_assigned_to_first_name} all of {assigned_to_first_name}'s customers that are interested in {natural_language_product_interest} and are either qualified or in proposal in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_58",
    "domain": "customer_relationship_manager",
    "query": "Sofia is taking over all of Lena's customers that are interested in services and are either qualified or in proposal. Can you reassign them in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000016\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000056\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000190\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000059\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")']",
    "base_template": "Give {new_assigned_to_first_name} all of {assigned_to_first_name}'s customers that are interested in {natural_language_product_interest} and are either qualified or in proposal in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_59",
    "domain": "customer_relationship_manager",
    "query": "Sofia is taking over all of Raj's customers that are interested in consulting and are either qualified or in proposal. Can you reassign them in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000097\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000053\", field=\"assigned_to_email\", new_value=\"sofia.santos@atlas.com\")']",
    "base_template": "Give {new_assigned_to_first_name} all of {assigned_to_first_name}'s customers that are interested in {natural_language_product_interest} and are either qualified or in proposal in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_60",
    "domain": "customer_relationship_manager",
    "query": "We no longer need to keep all of Sofia's customers that are in the won stage and interested in services. Can you delete them from the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000048\")']",
    "base_template": "Delete all of {assigned_to_first_name}'s customers that are in the {new_status_natural_language} stage and interested in {natural_language_product_interest} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_61",
    "domain": "customer_relationship_manager",
    "query": "We no longer need to keep all of Sofia's customers that are in the qualified stage and interested in services. Can you delete them from the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000099\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000137\")']",
    "base_template": "Delete all of {assigned_to_first_name}'s customers that are in the {new_status_natural_language} stage and interested in {natural_language_product_interest} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_62",
    "domain": "customer_relationship_manager",
    "query": "I need to move all of Raj's customers that are in the lost stage and interested in software to lost. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000168\")']",
    "base_template": "Delete all of {assigned_to_first_name}'s customers that are in the {new_status_natural_language} stage and interested in {natural_language_product_interest} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_63",
    "domain": "customer_relationship_manager",
    "query": "I need to move all of Lena's customers that are in the qualified stage and interested in hardware to lost. Can you make that change in the crm?",
    "answer": "[]",
    "base_template": "Delete all of {assigned_to_first_name}'s customers that are in the {new_status_natural_language} stage and interested in {natural_language_product_interest} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_64",
    "domain": "customer_relationship_manager",
    "query": "I need to move all of Akira's customers that are in the qualified stage and interested in services to lost. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000092\")']",
    "base_template": "Delete all of {assigned_to_first_name}'s customers that are in the {new_status_natural_language} stage and interested in {natural_language_product_interest} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_65",
    "domain": "customer_relationship_manager",
    "query": "I need to move all of Akira's customers that are in the proposal stage and interested in software to lost. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000147\")']",
    "base_template": "Delete all of {assigned_to_first_name}'s customers that are in the {new_status_natural_language} stage and interested in {natural_language_product_interest} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_66",
    "domain": "customer_relationship_manager",
    "query": "I need to move all of Nadia's customers that are in the qualified stage and interested in training to lost. Can you make that change in the crm?",
    "answer": "[]",
    "base_template": "Delete all of {assigned_to_first_name}'s customers that are in the {new_status_natural_language} stage and interested in {natural_language_product_interest} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_67",
    "domain": "customer_relationship_manager",
    "query": "I need to move all of Raj's customers that are in the won stage and interested in consulting to lost. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000171\")']",
    "base_template": "Delete all of {assigned_to_first_name}'s customers that are in the {new_status_natural_language} stage and interested in {natural_language_product_interest} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_68",
    "domain": "customer_relationship_manager",
    "query": "I need to move all of Raj's customers that are in the qualified stage and interested in services to lost. Can you make that change in the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000106\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000196\")']",
    "base_template": "Delete all of {assigned_to_first_name}'s customers that are in the {new_status_natural_language} stage and interested in {natural_language_product_interest} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_69",
    "domain": "customer_relationship_manager",
    "query": "We no longer need to keep all of Akira's customers that are in the lost stage and interested in hardware. Can you delete them from the crm?",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000071\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000057\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000018\")']",
    "base_template": "Delete all of {assigned_to_first_name}'s customers that are in the {new_status_natural_language} stage and interested in {natural_language_product_interest} in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_70",
    "domain": "customer_relationship_manager",
    "query": "I think there's a few customers that haven't responded to a proposal for the software product in 3 weeks. Can you move them to lost in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000007\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000147\", field=\"status\", new_value=\"Lost\")']",
    "base_template": "Move all customers that haven't responded to a proposal for the {natural_language_product_interest} product in {weeks} weeks to lost in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_71",
    "domain": "customer_relationship_manager",
    "query": "I think there's a few customers that haven't responded to a proposal for the software product in 6 weeks. Can you move them to lost in the crm?",
    "answer": "[]",
    "base_template": "Move all customers that haven't responded to a proposal for the {natural_language_product_interest} product in {weeks} weeks to lost in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_72",
    "domain": "customer_relationship_manager",
    "query": "Move all customers that haven't responded to a proposal for the services product in 5 weeks to lost in the crm",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000081\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000041\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000121\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000079\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000091\", field=\"status\", new_value=\"Lost\")']",
    "base_template": "Move all customers that haven't responded to a proposal for the {natural_language_product_interest} product in {weeks} weeks to lost in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_73",
    "domain": "customer_relationship_manager",
    "query": "I think there's a few customers that haven't responded to a proposal for the consulting product in 4 weeks. Can you move them to lost in the crm?",
    "answer": "[]",
    "base_template": "Move all customers that haven't responded to a proposal for the {natural_language_product_interest} product in {weeks} weeks to lost in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_74",
    "domain": "customer_relationship_manager",
    "query": "I think there's a few customers that haven't responded to a proposal for the hardware product in 6 weeks. Can you move them to lost in the crm?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000132\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000088\", field=\"status\", new_value=\"Lost\")']",
    "base_template": "Move all customers that haven't responded to a proposal for the {natural_language_product_interest} product in {weeks} weeks to lost in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_75",
    "domain": "customer_relationship_manager",
    "query": "We need to move all customers that haven't responded to a proposal for the hardware product in 4 weeks to lost. Can you update the CRM?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000037\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000195\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000058\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000132\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000088\", field=\"status\", new_value=\"Lost\")']",
    "base_template": "Move all customers that haven't responded to a proposal for the {natural_language_product_interest} product in {weeks} weeks to lost in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_76",
    "domain": "customer_relationship_manager",
    "query": "Move all customers that haven't responded to a proposal for the consulting product in 6 weeks to lost in the crm",
    "answer": "[]",
    "base_template": "Move all customers that haven't responded to a proposal for the {natural_language_product_interest} product in {weeks} weeks to lost in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_77",
    "domain": "customer_relationship_manager",
    "query": "We need to move all customers that haven't responded to a proposal for the software product in 6 weeks to lost. Can you update the CRM?",
    "answer": "[]",
    "base_template": "Move all customers that haven't responded to a proposal for the {natural_language_product_interest} product in {weeks} weeks to lost in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_78",
    "domain": "customer_relationship_manager",
    "query": "We need to move all customers that haven't responded to a proposal for the hardware product in 5 weeks to lost. Can you update the CRM?",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000195\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000058\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000132\", field=\"status\", new_value=\"Lost\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000088\", field=\"status\", new_value=\"Lost\")']",
    "base_template": "Move all customers that haven't responded to a proposal for the {natural_language_product_interest} product in {weeks} weeks to lost in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "customer_relationship_manager_79",
    "domain": "customer_relationship_manager",
    "query": "Move all customers that haven't responded to a proposal for the consulting product in 5 weeks to lost in the crm",
    "answer": "[]",
    "base_template": "Move all customers that haven't responded to a proposal for the {natural_language_product_interest} product in {weeks} weeks to lost in the crm",
    "domains": "['customer_relationship_manager']"
  },
  {
    "id": "email_0",
    "domain": "email",
    "query": "Delete my last email from nadia",
    "answer": "['email.delete_email.func(email_id=\"00000479\")']",
    "base_template": "Delete my last email from {name}",
    "domains": "['email']"
  },
  {
    "id": "email_1",
    "domain": "email",
    "query": "Delete my last email from sofia",
    "answer": "['email.delete_email.func(email_id=\"00000438\")']",
    "base_template": "Delete my last email from {name}",
    "domains": "['email']"
  },
  {
    "id": "email_2",
    "domain": "email",
    "query": "Delete my last email from anaya",
    "answer": "['email.delete_email.func(email_id=\"00000166\")']",
    "base_template": "Delete my last email from {name}",
    "domains": "['email']"
  },
  {
    "id": "email_3",
    "domain": "email",
    "query": "nadia just sent me an email that I need to delete. Can you get rid of of the most recent email they sent me?",
    "answer": "['email.delete_email.func(email_id=\"00000479\")']",
    "base_template": "Delete my last email from {name}",
    "domains": "['email']"
  },
  {
    "id": "email_4",
    "domain": "email",
    "query": "Delete my last email from yuki",
    "answer": "['email.delete_email.func(email_id=\"00000149\")']",
    "base_template": "Delete my last email from {name}",
    "domains": "['email']"
  },
  {
    "id": "email_5",
    "domain": "email",
    "query": "I need to delete my last email from leila. Can you do that?",
    "answer": "['email.delete_email.func(email_id=\"00000052\")']",
    "base_template": "Delete my last email from {name}",
    "domains": "['email']"
  },
  {
    "id": "email_6",
    "domain": "email",
    "query": "Delete my last email from chenwei",
    "answer": "['email.delete_email.func(email_id=\"00000211\")']",
    "base_template": "Delete my last email from {name}",
    "domains": "['email']"
  },
  {
    "id": "email_7",
    "domain": "email",
    "query": "Delete my last email from kofi",
    "answer": "['email.delete_email.func(email_id=\"00000259\")']",
    "base_template": "Delete my last email from {name}",
    "domains": "['email']"
  },
  {
    "id": "email_8",
    "domain": "email",
    "query": "anaya just sent me an email that I need to delete. Can you get rid of of the most recent email they sent me?",
    "answer": "['email.delete_email.func(email_id=\"00000166\")']",
    "base_template": "Delete my last email from {name}",
    "domains": "['email']"
  },
  {
    "id": "email_9",
    "domain": "email",
    "query": "Delete my last email from jinsoo",
    "answer": "['email.delete_email.func(email_id=\"00000204\")']",
    "base_template": "Delete my last email from {name}",
    "domains": "['email']"
  },
  {
    "id": "email_10",
    "domain": "email",
    "query": "All my emails from yuki from the last 3 days need to be deleted. Can you do that?",
    "answer": "[]",
    "base_template": "Delete all my emails from {name} from the last {days} days",
    "domains": "['email']"
  },
  {
    "id": "email_11",
    "domain": "email",
    "query": "Delete all my emails from yuki from the last 5 days",
    "answer": "['email.delete_email.func(email_id=\"00000149\")']",
    "base_template": "Delete all my emails from {name} from the last {days} days",
    "domains": "['email']"
  },
  {
    "id": "email_12",
    "domain": "email",
    "query": "I need to get rid of all my emails from amir from the last 6 days. Can you do delete them?",
    "answer": "['email.delete_email.func(email_id=\"00000196\")', 'email.delete_email.func(email_id=\"00000291\")', 'email.delete_email.func(email_id=\"00000188\")']",
    "base_template": "Delete all my emails from {name} from the last {days} days",
    "domains": "['email']"
  },
  {
    "id": "email_13",
    "domain": "email",
    "query": "All my emails from santiago from the last 3 days need to be deleted. Can you do that?",
    "answer": "['email.delete_email.func(email_id=\"00000348\")']",
    "base_template": "Delete all my emails from {name} from the last {days} days",
    "domains": "['email']"
  },
  {
    "id": "email_14",
    "domain": "email",
    "query": "I need to get rid of all my emails from nia from the last 4 days. Can you do delete them?",
    "answer": "['email.delete_email.func(email_id=\"00000066\")']",
    "base_template": "Delete all my emails from {name} from the last {days} days",
    "domains": "['email']"
  },
  {
    "id": "email_15",
    "domain": "email",
    "query": "I need to get rid of all my emails from raj from the last 3 days. Can you do delete them?",
    "answer": "['email.delete_email.func(email_id=\"00000402\")', 'email.delete_email.func(email_id=\"00000199\")', 'email.delete_email.func(email_id=\"00000140\")', 'email.delete_email.func(email_id=\"00000421\")', 'email.delete_email.func(email_id=\"00000245\")', 'email.delete_email.func(email_id=\"00000436\")']",
    "base_template": "Delete all my emails from {name} from the last {days} days",
    "domains": "['email']"
  },
  {
    "id": "email_16",
    "domain": "email",
    "query": "I need to get rid of all my emails from nadia from the last 2 days. Can you do delete them?",
    "answer": "['email.delete_email.func(email_id=\"00000479\")']",
    "base_template": "Delete all my emails from {name} from the last {days} days",
    "domains": "['email']"
  },
  {
    "id": "email_17",
    "domain": "email",
    "query": "I need to get rid of all my emails from nadia from the last 4 days. Can you do delete them?",
    "answer": "['email.delete_email.func(email_id=\"00000070\")', 'email.delete_email.func(email_id=\"00000479\")']",
    "base_template": "Delete all my emails from {name} from the last {days} days",
    "domains": "['email']"
  },
  {
    "id": "email_18",
    "domain": "email",
    "query": "Delete all my emails from jinsoo from the last 4 days",
    "answer": "['email.delete_email.func(email_id=\"00000204\")']",
    "base_template": "Delete all my emails from {name} from the last {days} days",
    "domains": "['email']"
  },
  {
    "id": "email_19",
    "domain": "email",
    "query": "Delete all my emails from amir from the last 6 days",
    "answer": "['email.delete_email.func(email_id=\"00000196\")', 'email.delete_email.func(email_id=\"00000291\")', 'email.delete_email.func(email_id=\"00000188\")']",
    "base_template": "Delete all my emails from {name} from the last {days} days",
    "domains": "['email']"
  },
  {
    "id": "email_20",
    "domain": "email",
    "query": "I need to send an email to kofi saying 'Hey kofi,\\n\\nI wanted to let you know that I've completed the tasks for the status briefing. Looking forward to your feedback.\\n\\nCheers,\\n\\nSam' and title it 'Task Update on Improve UX of onboarding process'. Can you do that?",
    "answer": "['email.send_email.func(recipient=\"kofi.mensah@atlas.com\", subject=\"Task Update on Improve UX of onboarding process\", body=\"Hey kofi,\\\\n\\\\nI wanted to let you know that I\\'ve completed the tasks for the status briefing. Looking forward to your feedback.\\\\n\\\\nCheers,\\\\n\\\\nSam\")']",
    "base_template": "Send an email to {name} saying '{body}' and title it '{subject}'",
    "domains": "['email']"
  },
  {
    "id": "email_21",
    "domain": "email",
    "query": "please send an email to jinsoo saying 'Hi jinsoo,\\n\\nStarting on 'Create wireframe for homepage' today. Any preliminary thoughts or resources you recommend before I dive in?\\n\\nBest,\\n\\nSam' and title it 'Task Update on Design logo for website'",
    "answer": "['email.send_email.func(recipient=\"jinsoo.kim@atlas.com\", subject=\"Task Update on Design logo for website\", body=\"Hi jinsoo,\\\\n\\\\nStarting on \\'Create wireframe for homepage\\' today. Any preliminary thoughts or resources you recommend before I dive in?\\\\n\\\\nBest,\\\\n\\\\nSam\")']",
    "base_template": "Send an email to {name} saying '{body}' and title it '{subject}'",
    "domains": "['email']"
  },
  {
    "id": "email_22",
    "domain": "email",
    "query": "I need to send an email to dmitri saying 'Hey dmitri,\\n\\nEncountered a few challenges while working on the Innovation and Creativity Hackathon. Could use your advice.\\n\\nThanks,\\n\\nSam' and title it 'Update on performance evaluation'. Can you do that?",
    "answer": "['email.send_email.func(recipient=\"dmitri.ivanov@atlas.com\", subject=\"Update on performance evaluation\", body=\"Hey dmitri,\\\\n\\\\nEncountered a few challenges while working on the Innovation and Creativity Hackathon. Could use your advice.\\\\n\\\\nThanks,\\\\n\\\\nSam\")']",
    "base_template": "Send an email to {name} saying '{body}' and title it '{subject}'",
    "domains": "['email']"
  },
  {
    "id": "email_23",
    "domain": "email",
    "query": "I need to send an email to chenwei saying 'chenwei,\\n\\nI wanted to let you know that I've completed the tasks for the daily stand-up. Looking forward to your feedback.\\n\\nThanks,\\n\\nSam' and title it 'Update on daily stand-up'. Can you do that?",
    "answer": "['email.send_email.func(recipient=\"chenwei.zhang@atlas.com\", subject=\"Update on daily stand-up\", body=\"chenwei,\\\\n\\\\nI wanted to let you know that I\\'ve completed the tasks for the daily stand-up. Looking forward to your feedback.\\\\n\\\\nThanks,\\\\n\\\\nSam\")']",
    "base_template": "Send an email to {name} saying '{body}' and title it '{subject}'",
    "domains": "['email']"
  },
  {
    "id": "email_24",
    "domain": "email",
    "query": "Send an email to lena saying 'lena,\\n\\nI've been assigned 'Develop prototype for report generation'. Excited to work on this and confident it will greatly improve our backend efficiency.\\n\\nCheers,\\n\\nSam' and title it 'Task Update on Create wireframe for homepage'",
    "answer": "['email.send_email.func(recipient=\"lena.schmidt@atlas.com\", subject=\"Task Update on Create wireframe for homepage\", body=\"lena,\\\\n\\\\nI\\'ve been assigned \\'Develop prototype for report generation\\'. Excited to work on this and confident it will greatly improve our backend efficiency.\\\\n\\\\nCheers,\\\\n\\\\nSam\")']",
    "base_template": "Send an email to {name} saying '{body}' and title it '{subject}'",
    "domains": "['email']"
  },
  {
    "id": "email_25",
    "domain": "email",
    "query": "please send an email to nadia saying 'nadia,\\n\\nI've been assigned 'Develop prototype for report generation'. Excited to work on this and confident it will greatly improve our backend efficiency.\\n\\nCheers,\\n\\nSam' and title it 'Task Update on Create wireframe for homepage'",
    "answer": "['email.send_email.func(recipient=\"nadia.moreau@atlas.com\", subject=\"Task Update on Create wireframe for homepage\", body=\"nadia,\\\\n\\\\nI\\'ve been assigned \\'Develop prototype for report generation\\'. Excited to work on this and confident it will greatly improve our backend efficiency.\\\\n\\\\nCheers,\\\\n\\\\nSam\")']",
    "base_template": "Send an email to {name} saying '{body}' and title it '{subject}'",
    "domains": "['email']"
  },
  {
    "id": "email_26",
    "domain": "email",
    "query": "I need to send an email to amir saying 'amir,\\n\\nRegarding task 'Add authentication for email notification', I've made significant progress but have hit a snag with UI responsiveness. Could use a brainstorm session.\\n\\nAdditionally, I wanted to touch base on some other areas we've been focusing on lately. Our team has been working tirelessly on improving our project management workflows and enhancing collaboration across departments. This effort includes adopting new tools, refining our communication strategies, and ensuring that all team members are fully aligned with our objectifs.\\n\\nRegards,\\n\\nSam' and title it 'Update on status briefing'. Can you do that?",
    "answer": "['email.send_email.func(recipient=\"amir.ali@atlas.com\", subject=\"Update on status briefing\", body=\"amir,\\\\n\\\\nRegarding task \\'Add authentication for email notification\\', I\\'ve made significant progress but have hit a snag with UI responsiveness. Could use a brainstorm session.\\\\n\\\\nAdditionally, I wanted to touch base on some other areas we\\'ve been focusing on lately. Our team has been working tirelessly on improving our project management workflows and enhancing collaboration across departments. This effort includes adopting new tools, refining our communication strategies, and ensuring that all team members are fully aligned with our objectifs.\\\\n\\\\nRegards,\\\\n\\\\nSam\")']",
    "base_template": "Send an email to {name} saying '{body}' and title it '{subject}'",
    "domains": "['email']"
  },
  {
    "id": "email_27",
    "domain": "email",
    "query": "please send an email to aisha saying 'Hi aisha,\\n\\nI have some ideas for the Machine Learning Chat that I'd like to run by you. When are you free?\\n\\nBest,\\n\\nSam' and title it 'Update on Innovation and Creativity Hackathon'",
    "answer": "['email.send_email.func(recipient=\"aisha.chen@atlas.com\", subject=\"Update on Innovation and Creativity Hackathon\", body=\"Hi aisha,\\\\n\\\\nI have some ideas for the Machine Learning Chat that I\\'d like to run by you. When are you free?\\\\n\\\\nBest,\\\\n\\\\nSam\")']",
    "base_template": "Send an email to {name} saying '{body}' and title it '{subject}'",
    "domains": "['email']"
  },
  {
    "id": "email_28",
    "domain": "email",
    "query": "I need to send an email to dmitri saying 'Hey dmitri,\\n\\nI have some ideas for the process review that I'd like to run by you. When are you free?\\n\\nThanks,\\n\\nSam' and title it 'Update on Product Launch Analysis'. Can you do that?",
    "answer": "['email.send_email.func(recipient=\"dmitri.ivanov@atlas.com\", subject=\"Update on Product Launch Analysis\", body=\"Hey dmitri,\\\\n\\\\nI have some ideas for the process review that I\\'d like to run by you. When are you free?\\\\n\\\\nThanks,\\\\n\\\\nSam\")']",
    "base_template": "Send an email to {name} saying '{body}' and title it '{subject}'",
    "domains": "['email']"
  },
  {
    "id": "email_29",
    "domain": "email",
    "query": "I need to send an email to kofi saying 'Hi kofi,\\n\\nI've been assigned 'Fix bug in user management module'. Excited to work on this and confident it will greatly improve our backend efficiency.\\n\\nThanks,\\n\\nSam' and title it 'Update on Corporate Social Responsibility Initiative'. Can you do that?",
    "answer": "['email.send_email.func(recipient=\"kofi.mensah@atlas.com\", subject=\"Update on Corporate Social Responsibility Initiative\", body=\"Hi kofi,\\\\n\\\\nI\\'ve been assigned \\'Fix bug in user management module\\'. Excited to work on this and confident it will greatly improve our backend efficiency.\\\\n\\\\nThanks,\\\\n\\\\nSam\")']",
    "base_template": "Send an email to {name} saying '{body}' and title it '{subject}'",
    "domains": "['email']"
  },
  {
    "id": "email_30",
    "domain": "email",
    "query": "I need to get back to yuki's last email about 'Update on Client Appreciation Gala' with 'Thanks for the update - I will get back to you tomorrow. Can you send the reply for me?",
    "answer": "['email.reply_email.func(email_id=\"00000234\", body=\"Thanks for the update - I will get back to you tomorrow.\")']",
    "base_template": "Reply to {name}'s last email about '{subject}' with 'Thanks for the update - I will get back to you tomorrow.'",
    "domains": "['email']"
  },
  {
    "id": "email_31",
    "domain": "email",
    "query": "Reply to yuki's last email about 'Update on Corporate Social Responsibility Initiative' with 'Thanks for the update - I will get back to you tomorrow.'",
    "answer": "['email.reply_email.func(email_id=\"00000446\", body=\"Thanks for the update - I will get back to you tomorrow.\")']",
    "base_template": "Reply to {name}'s last email about '{subject}' with 'Thanks for the update - I will get back to you tomorrow.'",
    "domains": "['email']"
  },
  {
    "id": "email_32",
    "domain": "email",
    "query": "I need to get back to dmitri's last email about 'Update on team coordination meeting' with 'Thanks for the update - I will get back to you tomorrow. Can you send the reply for me?",
    "answer": "['email.reply_email.func(email_id=\"00000313\", body=\"Thanks for the update - I will get back to you tomorrow.\")']",
    "base_template": "Reply to {name}'s last email about '{subject}' with 'Thanks for the update - I will get back to you tomorrow.'",
    "domains": "['email']"
  },
  {
    "id": "email_33",
    "domain": "email",
    "query": "Reply to anaya's last email about 'Update on Innovation and Creativity Hackathon' with 'Thanks for the update - I will get back to you tomorrow.'",
    "answer": "['email.reply_email.func(email_id=\"00000258\", body=\"Thanks for the update - I will get back to you tomorrow.\")']",
    "base_template": "Reply to {name}'s last email about '{subject}' with 'Thanks for the update - I will get back to you tomorrow.'",
    "domains": "['email']"
  },
  {
    "id": "email_34",
    "domain": "email",
    "query": "I need to get back to amir's last email about 'Update on Risk Management Forum' with 'Thanks for the update - I will get back to you tomorrow. Can you send the reply for me?",
    "answer": "['email.reply_email.func(email_id=\"00000188\", body=\"Thanks for the update - I will get back to you tomorrow.\")']",
    "base_template": "Reply to {name}'s last email about '{subject}' with 'Thanks for the update - I will get back to you tomorrow.'",
    "domains": "['email']"
  },
  {
    "id": "email_35",
    "domain": "email",
    "query": "Reply to nia's last email about 'Task Update on Design logo for website' with 'Thanks for the update - I will get back to you tomorrow.'",
    "answer": "['email.reply_email.func(email_id=\"00000403\", body=\"Thanks for the update - I will get back to you tomorrow.\")']",
    "base_template": "Reply to {name}'s last email about '{subject}' with 'Thanks for the update - I will get back to you tomorrow.'",
    "domains": "['email']"
  },
  {
    "id": "email_36",
    "domain": "email",
    "query": "I need to get back to lena's last email about 'Update on Leadership Training Workshop' with 'Thanks for the update - I will get back to you tomorrow. Can you send the reply for me?",
    "answer": "['email.reply_email.func(email_id=\"00000048\", body=\"Thanks for the update - I will get back to you tomorrow.\")']",
    "base_template": "Reply to {name}'s last email about '{subject}' with 'Thanks for the update - I will get back to you tomorrow.'",
    "domains": "['email']"
  },
  {
    "id": "email_37",
    "domain": "email",
    "query": "Reply to raj's last email about 'Update on IT Systems Update Briefing' with 'Thanks for the update - I will get back to you tomorrow.'",
    "answer": "['email.reply_email.func(email_id=\"00000001\", body=\"Thanks for the update - I will get back to you tomorrow.\")']",
    "base_template": "Reply to {name}'s last email about '{subject}' with 'Thanks for the update - I will get back to you tomorrow.'",
    "domains": "['email']"
  },
  {
    "id": "email_38",
    "domain": "email",
    "query": "Reply to chenwei's last email about 'Task Update on Develop prototype for login system' with 'Thanks for the update - I will get back to you tomorrow.'",
    "answer": "['email.reply_email.func(email_id=\"00000239\", body=\"Thanks for the update - I will get back to you tomorrow.\")']",
    "base_template": "Reply to {name}'s last email about '{subject}' with 'Thanks for the update - I will get back to you tomorrow.'",
    "domains": "['email']"
  },
  {
    "id": "email_39",
    "domain": "email",
    "query": "Reply to yuki's last email about 'Task Update on Add authentication for email notification' with 'Thanks for the update - I will get back to you tomorrow.'",
    "answer": "['email.reply_email.func(email_id=\"00000286\", body=\"Thanks for the update - I will get back to you tomorrow.\")']",
    "base_template": "Reply to {name}'s last email about '{subject}' with 'Thanks for the update - I will get back to you tomorrow.'",
    "domains": "['email']"
  },
  {
    "id": "email_40",
    "domain": "email",
    "query": "carlos needs all the emails from chenwei last week about 'Update on Supply Chain Enhancement Workshop'. Can you forward them?",
    "answer": "['email.forward_email.func(email_id=\"00000337\", recipient=\"carlos.rodriguez@atlas.com\")']",
    "base_template": "Forward all the emails from {name} last week about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_41",
    "domain": "email",
    "query": "can you forward all the emails from anaya last week about 'Update on Board of Directors Conclave' to nadia",
    "answer": "['email.forward_email.func(email_id=\"00000346\", recipient=\"nadia.moreau@atlas.com\")', 'email.forward_email.func(email_id=\"00000120\", recipient=\"nadia.moreau@atlas.com\")']",
    "base_template": "Forward all the emails from {name} last week about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_42",
    "domain": "email",
    "query": "nia needs all the emails from sofia last week about 'Update on Risk Management Forum'. Can you forward them?",
    "answer": "['email.forward_email.func(email_id=\"00000173\", recipient=\"nia.johnson@atlas.com\")']",
    "base_template": "Forward all the emails from {name} last week about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_43",
    "domain": "email",
    "query": "chenwei needs all the emails from nadia last week about 'Task Update on Improve UX of feedback submission'. Can you forward them?",
    "answer": "['email.forward_email.func(email_id=\"00000198\", recipient=\"chenwei.zhang@atlas.com\")']",
    "base_template": "Forward all the emails from {name} last week about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_44",
    "domain": "email",
    "query": "Forward all the emails from fatima last week about 'Task Update on Develop prototype for report generation' to anaya",
    "answer": "['email.forward_email.func(email_id=\"00000017\", recipient=\"anaya.patel@atlas.com\")']",
    "base_template": "Forward all the emails from {name} last week about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_45",
    "domain": "email",
    "query": "Forward all the emails from anaya last week about 'Update on status briefing' to amir",
    "answer": "['email.forward_email.func(email_id=\"00000281\", recipient=\"amir.ali@atlas.com\")']",
    "base_template": "Forward all the emails from {name} last week about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_46",
    "domain": "email",
    "query": "Forward all the emails from sofia last week about 'Task Update on Improve UX of onboarding process' to amir",
    "answer": "['email.forward_email.func(email_id=\"00000264\", recipient=\"amir.ali@atlas.com\")']",
    "base_template": "Forward all the emails from {name} last week about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_47",
    "domain": "email",
    "query": "Forward all the emails from amir last week about 'Task Update on Update brand colors in website' to yuki",
    "answer": "['email.forward_email.func(email_id=\"00000431\", recipient=\"yuki.tanaka@atlas.com\")']",
    "base_template": "Forward all the emails from {name} last week about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_48",
    "domain": "email",
    "query": "Forward all the emails from akira last week about 'Update on Client Appreciation Gala' to kofi",
    "answer": "['email.forward_email.func(email_id=\"00000477\", recipient=\"kofi.mensah@atlas.com\")']",
    "base_template": "Forward all the emails from {name} last week about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_49",
    "domain": "email",
    "query": "carlos needs all the emails from nia last week about 'Update on introductory call'. Can you forward them?",
    "answer": "['email.forward_email.func(email_id=\"00000308\", recipient=\"carlos.rodriguez@atlas.com\")']",
    "base_template": "Forward all the emails from {name} last week about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_50",
    "domain": "email",
    "query": "Forward the latest email about 'Task Update on Add authentication for email notification' to olga",
    "answer": "['email.forward_email.func(email_id=\"00000436\", recipient=\"olga.petrova@atlas.com\")']",
    "base_template": "Forward the latest email about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_51",
    "domain": "email",
    "query": "santiago needs the latest email about 'Update on Client Appreciation Gala'. Can you forward it?",
    "answer": "['email.forward_email.func(email_id=\"00000206\", recipient=\"santiago.martinez@atlas.com\")']",
    "base_template": "Forward the latest email about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_52",
    "domain": "email",
    "query": "amir needs the latest email about 'Update on Machine Learning Chat'. Can you forward it?",
    "answer": "['email.forward_email.func(email_id=\"00000409\", recipient=\"amir.ali@atlas.com\")']",
    "base_template": "Forward the latest email about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_53",
    "domain": "email",
    "query": "can you forward the latest email about 'Update on Corporate Governance Workshop' to yuki",
    "answer": "['email.forward_email.func(email_id=\"00000428\", recipient=\"yuki.tanaka@atlas.com\")']",
    "base_template": "Forward the latest email about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_54",
    "domain": "email",
    "query": "Forward the latest email about 'Task Update on Add animation to form submission button' to raj",
    "answer": "['email.forward_email.func(email_id=\"00000349\", recipient=\"raj.patel@atlas.com\")']",
    "base_template": "Forward the latest email about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_55",
    "domain": "email",
    "query": "Forward the latest email about 'Task Update on Design logo for website' to dmitri",
    "answer": "['email.forward_email.func(email_id=\"00000118\", recipient=\"dmitri.ivanov@atlas.com\")']",
    "base_template": "Forward the latest email about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_56",
    "domain": "email",
    "query": "Forward the latest email about 'Task Update on Design logo for blog' to yuki",
    "answer": "['email.forward_email.func(email_id=\"00000415\", recipient=\"yuki.tanaka@atlas.com\")']",
    "base_template": "Forward the latest email about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_57",
    "domain": "email",
    "query": "Forward the latest email about 'Update on team coordination meeting' to chenwei",
    "answer": "['email.forward_email.func(email_id=\"00000134\", recipient=\"chenwei.zhang@atlas.com\")']",
    "base_template": "Forward the latest email about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_58",
    "domain": "email",
    "query": "can you forward the latest email about 'Task Update on Design logo for blog' to carlos",
    "answer": "['email.forward_email.func(email_id=\"00000415\", recipient=\"carlos.rodriguez@atlas.com\")']",
    "base_template": "Forward the latest email about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_59",
    "domain": "email",
    "query": "Forward the latest email about 'Task Update on Optimize database query for user management' to aisha",
    "answer": "['email.forward_email.func(email_id=\"00000422\", recipient=\"aisha.chen@atlas.com\")']",
    "base_template": "Forward the latest email about '{subject}' to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_60",
    "domain": "email",
    "query": "Forward my most recent email from fatima to kofi",
    "answer": "['email.forward_email.func(email_id=\"00000119\", recipient=\"kofi.mensah@atlas.com\")']",
    "base_template": "Forward my most recent email from {sender_name} to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_61",
    "domain": "email",
    "query": "Forward my most recent email from kofi to jinsoo",
    "answer": "['email.forward_email.func(email_id=\"00000259\", recipient=\"jinsoo.kim@atlas.com\")']",
    "base_template": "Forward my most recent email from {sender_name} to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_62",
    "domain": "email",
    "query": "Forward my most recent email from anaya to olga",
    "answer": "['email.forward_email.func(email_id=\"00000166\", recipient=\"olga.petrova@atlas.com\")']",
    "base_template": "Forward my most recent email from {sender_name} to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_63",
    "domain": "email",
    "query": "can you forward my most recent email from leila to anaya",
    "answer": "['email.forward_email.func(email_id=\"00000052\", recipient=\"anaya.patel@atlas.com\")']",
    "base_template": "Forward my most recent email from {sender_name} to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_64",
    "domain": "email",
    "query": "can you forward my most recent email from jinsoo to chenwei",
    "answer": "['email.forward_email.func(email_id=\"00000204\", recipient=\"chenwei.zhang@atlas.com\")']",
    "base_template": "Forward my most recent email from {sender_name} to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_65",
    "domain": "email",
    "query": "can you forward my most recent email from kofi to nia",
    "answer": "['email.forward_email.func(email_id=\"00000259\", recipient=\"nia.johnson@atlas.com\")']",
    "base_template": "Forward my most recent email from {sender_name} to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_66",
    "domain": "email",
    "query": "fatima needs my most recent email from leila. Can you forward it?",
    "answer": "['email.forward_email.func(email_id=\"00000052\", recipient=\"fatima.khan@atlas.com\")']",
    "base_template": "Forward my most recent email from {sender_name} to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_67",
    "domain": "email",
    "query": "can you forward my most recent email from sofia to dmitri",
    "answer": "['email.forward_email.func(email_id=\"00000438\", recipient=\"dmitri.ivanov@atlas.com\")']",
    "base_template": "Forward my most recent email from {sender_name} to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_68",
    "domain": "email",
    "query": "anaya needs my most recent email from akira. Can you forward it?",
    "answer": "['email.forward_email.func(email_id=\"00000429\", recipient=\"anaya.patel@atlas.com\")']",
    "base_template": "Forward my most recent email from {sender_name} to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_69",
    "domain": "email",
    "query": "can you forward my most recent email from olga to raj",
    "answer": "['email.forward_email.func(email_id=\"00000206\", recipient=\"raj.patel@atlas.com\")']",
    "base_template": "Forward my most recent email from {sender_name} to {recipient_name}",
    "domains": "['email']"
  },
  {
    "id": "email_70",
    "domain": "email",
    "query": "Forward the last email about 'Update on feedback discussion' to amir and akira",
    "answer": "['email.forward_email.func(email_id=\"00000092\", recipient=\"amir.ali@atlas.com\")', 'email.forward_email.func(email_id=\"00000092\", recipient=\"akira.sato@atlas.com\")']",
    "base_template": "Forward the last email about '{subject}' to {recipient_name1} and {recipient_name2}",
    "domains": "['email']"
  },
  {
    "id": "email_71",
    "domain": "email",
    "query": "Forward the last email about 'Update on Annual Budget Planning Session' to carlos and nadia",
    "answer": "['email.forward_email.func(email_id=\"00000012\", recipient=\"carlos.rodriguez@atlas.com\")', 'email.forward_email.func(email_id=\"00000012\", recipient=\"nadia.moreau@atlas.com\")']",
    "base_template": "Forward the last email about '{subject}' to {recipient_name1} and {recipient_name2}",
    "domains": "['email']"
  },
  {
    "id": "email_72",
    "domain": "email",
    "query": "dmitri and yuki need the last email about 'Update on IT Systems Update Briefing'. Can you forward it?",
    "answer": "['email.forward_email.func(email_id=\"00000412\", recipient=\"dmitri.ivanov@atlas.com\")', 'email.forward_email.func(email_id=\"00000412\", recipient=\"yuki.tanaka@atlas.com\")']",
    "base_template": "Forward the last email about '{subject}' to {recipient_name1} and {recipient_name2}",
    "domains": "['email']"
  },
  {
    "id": "email_73",
    "domain": "email",
    "query": "Forward the last email about 'Update on project debrief' to olga and kofi",
    "answer": "['email.forward_email.func(email_id=\"00000245\", recipient=\"olga.petrova@atlas.com\")', 'email.forward_email.func(email_id=\"00000245\", recipient=\"kofi.mensah@atlas.com\")']",
    "base_template": "Forward the last email about '{subject}' to {recipient_name1} and {recipient_name2}",
    "domains": "['email']"
  },
  {
    "id": "email_74",
    "domain": "email",
    "query": "lena and aisha need the last email about 'Update on Team Building Retreat'. Can you forward it?",
    "answer": "['email.forward_email.func(email_id=\"00000262\", recipient=\"lena.schmidt@atlas.com\")', 'email.forward_email.func(email_id=\"00000262\", recipient=\"aisha.chen@atlas.com\")']",
    "base_template": "Forward the last email about '{subject}' to {recipient_name1} and {recipient_name2}",
    "domains": "['email']"
  },
  {
    "id": "email_75",
    "domain": "email",
    "query": "Forward the last email about 'Update on Board of Directors Conclave' to akira and yuki",
    "answer": "['email.forward_email.func(email_id=\"00000120\", recipient=\"akira.sato@atlas.com\")', 'email.forward_email.func(email_id=\"00000120\", recipient=\"yuki.tanaka@atlas.com\")']",
    "base_template": "Forward the last email about '{subject}' to {recipient_name1} and {recipient_name2}",
    "domains": "['email']"
  },
  {
    "id": "email_76",
    "domain": "email",
    "query": "Forward the last email about 'Update on introductory call' to lena and nadia",
    "answer": "['email.forward_email.func(email_id=\"00000308\", recipient=\"lena.schmidt@atlas.com\")', 'email.forward_email.func(email_id=\"00000308\", recipient=\"nadia.moreau@atlas.com\")']",
    "base_template": "Forward the last email about '{subject}' to {recipient_name1} and {recipient_name2}",
    "domains": "['email']"
  },
  {
    "id": "email_77",
    "domain": "email",
    "query": "can you forward the last email about 'Update on Machine Learning Chat' to nadia and jinsoo",
    "answer": "['email.forward_email.func(email_id=\"00000409\", recipient=\"nadia.moreau@atlas.com\")', 'email.forward_email.func(email_id=\"00000409\", recipient=\"jinsoo.kim@atlas.com\")']",
    "base_template": "Forward the last email about '{subject}' to {recipient_name1} and {recipient_name2}",
    "domains": "['email']"
  },
  {
    "id": "email_78",
    "domain": "email",
    "query": "raj and sofia need the last email about 'Update on introductory call'. Can you forward it?",
    "answer": "['email.forward_email.func(email_id=\"00000308\", recipient=\"raj.patel@atlas.com\")', 'email.forward_email.func(email_id=\"00000308\", recipient=\"sofia.santos@atlas.com\")']",
    "base_template": "Forward the last email about '{subject}' to {recipient_name1} and {recipient_name2}",
    "domains": "['email']"
  },
  {
    "id": "email_79",
    "domain": "email",
    "query": "Forward the last email about 'Update on casual catch-up' to anaya and luis",
    "answer": "['email.forward_email.func(email_id=\"00000208\", recipient=\"anaya.patel@atlas.com\")', 'email.forward_email.func(email_id=\"00000208\", recipient=\"luis.ortiz@atlas.com\")']",
    "base_template": "Forward the last email about '{subject}' to {recipient_name1} and {recipient_name2}",
    "domains": "['email']"
  },
  {
    "id": "email_80",
    "domain": "email",
    "query": "I need to reply to the latest email from sofia with 'Got it, thank you!'. Can you do that?",
    "answer": "['email.reply_email.func(email_id=\"00000438\", body=\"Got it, thank you!\")']",
    "base_template": "Reply to the latest email from {sender_name} with 'Got it, thank you!'",
    "domains": "['email']"
  },
  {
    "id": "email_81",
    "domain": "email",
    "query": "can you reply to the latest email from carlos with 'Got it, thank you!'",
    "answer": "['email.reply_email.func(email_id=\"00000068\", body=\"Got it, thank you!\")']",
    "base_template": "Reply to the latest email from {sender_name} with 'Got it, thank you!'",
    "domains": "['email']"
  },
  {
    "id": "email_82",
    "domain": "email",
    "query": "Reply to the latest email from chenwei with 'Got it, thank you!'",
    "answer": "['email.reply_email.func(email_id=\"00000211\", body=\"Got it, thank you!\")']",
    "base_template": "Reply to the latest email from {sender_name} with 'Got it, thank you!'",
    "domains": "['email']"
  },
  {
    "id": "email_83",
    "domain": "email",
    "query": "can you reply to the latest email from nia with 'Got it, thank you!'",
    "answer": "['email.reply_email.func(email_id=\"00000066\", body=\"Got it, thank you!\")']",
    "base_template": "Reply to the latest email from {sender_name} with 'Got it, thank you!'",
    "domains": "['email']"
  },
  {
    "id": "email_84",
    "domain": "email",
    "query": "Reply to the latest email from akira with 'Got it, thank you!'",
    "answer": "['email.reply_email.func(email_id=\"00000429\", body=\"Got it, thank you!\")']",
    "base_template": "Reply to the latest email from {sender_name} with 'Got it, thank you!'",
    "domains": "['email']"
  },
  {
    "id": "email_85",
    "domain": "email",
    "query": "Reply to the latest email from sofia with 'Got it, thank you!'",
    "answer": "['email.reply_email.func(email_id=\"00000438\", body=\"Got it, thank you!\")']",
    "base_template": "Reply to the latest email from {sender_name} with 'Got it, thank you!'",
    "domains": "['email']"
  },
  {
    "id": "email_86",
    "domain": "email",
    "query": "I need to reply to the latest email from amir with 'Got it, thank you!'. Can you do that?",
    "answer": "['email.reply_email.func(email_id=\"00000188\", body=\"Got it, thank you!\")']",
    "base_template": "Reply to the latest email from {sender_name} with 'Got it, thank you!'",
    "domains": "['email']"
  },
  {
    "id": "email_87",
    "domain": "email",
    "query": "I need to reply to the latest email from nia with 'Got it, thank you!'. Can you do that?",
    "answer": "['email.reply_email.func(email_id=\"00000066\", body=\"Got it, thank you!\")']",
    "base_template": "Reply to the latest email from {sender_name} with 'Got it, thank you!'",
    "domains": "['email']"
  },
  {
    "id": "email_88",
    "domain": "email",
    "query": "Reply to the latest email from santiago with 'Got it, thank you!'",
    "answer": "['email.reply_email.func(email_id=\"00000348\", body=\"Got it, thank you!\")']",
    "base_template": "Reply to the latest email from {sender_name} with 'Got it, thank you!'",
    "domains": "['email']"
  },
  {
    "id": "email_89",
    "domain": "email",
    "query": "I need to reply to the latest email from kofi with 'Got it, thank you!'. Can you do that?",
    "answer": "['email.reply_email.func(email_id=\"00000259\", body=\"Got it, thank you!\")']",
    "base_template": "Reply to the latest email from {sender_name} with 'Got it, thank you!'",
    "domains": "['email']"
  },
  {
    "id": "multi_domain_0",
    "domain": "multi_domain",
    "query": "If we haven't spoke to Cameron Anderson in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on Cameron Anderson' at the first time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Update on Cameron Anderson\", participant_email=\"sofia.santos@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If we haven't spoke to {current_customer_name} in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on {current_customer_name}' at the first time I'm free tomorrow",
    "domains": "['crm', 'calendar']"
  },
  {
    "id": "multi_domain_1",
    "domain": "multi_domain",
    "query": "If we haven't spoke to Riley Brown in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on Riley Brown' at the first time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Update on Riley Brown\", participant_email=\"lena.schmidt@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If we haven't spoke to {current_customer_name} in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on {current_customer_name}' at the first time I'm free tomorrow",
    "domains": "['crm', 'calendar']"
  },
  {
    "id": "multi_domain_2",
    "domain": "multi_domain",
    "query": "If we haven't spoke to Jessie Thomas in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on Jessie Thomas' at the first time I'm free tomorrow",
    "answer": "[]",
    "base_template": "If we haven't spoke to {current_customer_name} in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on {current_customer_name}' at the first time I'm free tomorrow",
    "domains": "['crm', 'calendar']"
  },
  {
    "id": "multi_domain_3",
    "domain": "multi_domain",
    "query": "I haven't spoken to Quinn Thomas in a while. Can you check if it's been over 14 days? If so, book a 30-minute meeting with whoever is assigned to them called 'Update on Quinn Thomas' at the first time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Update on Quinn Thomas\", participant_email=\"akira.sato@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If we haven't spoke to {current_customer_name} in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on {current_customer_name}' at the first time I'm free tomorrow",
    "domains": "['crm', 'calendar']"
  },
  {
    "id": "multi_domain_4",
    "domain": "multi_domain",
    "query": "If we haven't spoke to Quinn Harris in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on Quinn Harris' at the first time I'm free tomorrow",
    "answer": "[]",
    "base_template": "If we haven't spoke to {current_customer_name} in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on {current_customer_name}' at the first time I'm free tomorrow",
    "domains": "['crm', 'calendar']"
  },
  {
    "id": "multi_domain_5",
    "domain": "multi_domain",
    "query": "I haven't spoken to Quinn Brown in a while. Can you check if it's been over 14 days? If so, book a 30-minute meeting with whoever is assigned to them called 'Update on Quinn Brown' at the first time I'm free tomorrow",
    "answer": "[]",
    "base_template": "If we haven't spoke to {current_customer_name} in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on {current_customer_name}' at the first time I'm free tomorrow",
    "domains": "['crm', 'calendar']"
  },
  {
    "id": "multi_domain_6",
    "domain": "multi_domain",
    "query": "If we haven't spoke to Jamie Anderson in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on Jamie Anderson' at the first time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Update on Jamie Anderson\", participant_email=\"nadia.moreau@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If we haven't spoke to {current_customer_name} in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on {current_customer_name}' at the first time I'm free tomorrow",
    "domains": "['crm', 'calendar']"
  },
  {
    "id": "multi_domain_7",
    "domain": "multi_domain",
    "query": "If we haven't spoken to Kerry Brown in the past 2 weeks, book a half hour meeting with whoeveris assigned to them called 'Update on Kerry Brown' at the first time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Update on Kerry Brown\", participant_email=\"lena.schmidt@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If we haven't spoke to {current_customer_name} in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on {current_customer_name}' at the first time I'm free tomorrow",
    "domains": "['crm', 'calendar']"
  },
  {
    "id": "multi_domain_8",
    "domain": "multi_domain",
    "query": "If we haven't spoke to Jordan Jones in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on Jordan Jones' at the first time I'm free tomorrow",
    "answer": "[]",
    "base_template": "If we haven't spoke to {current_customer_name} in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on {current_customer_name}' at the first time I'm free tomorrow",
    "domains": "['crm', 'calendar']"
  },
  {
    "id": "multi_domain_9",
    "domain": "multi_domain",
    "query": "I haven't spoken to Jamie Davis in a while. Can you check if it's been over 14 days? If so, book a 30-minute meeting with whoever is assigned to them called 'Update on Jamie Davis' at the first time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Update on Jamie Davis\", participant_email=\"sofia.santos@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If we haven't spoke to {current_customer_name} in the past fortnight book a 30-minute meeting with whoever is assigned to them called 'Update on {current_customer_name}' at the first time I'm free tomorrow",
    "domains": "['crm', 'calendar']"
  },
  {
    "id": "multi_domain_10",
    "domain": "multi_domain",
    "query": "Can you find the person with the fewest overdue tasks and assign Reese Martinez to them as a new lead in the crm?",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Reese Martinez\", assigned_to_email=\"anaya.patel@atlas.com\", status=\"Lead\")']",
    "base_template": " Add {new_customer_name} as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "domains": "['crm', 'project_management']"
  },
  {
    "id": "multi_domain_11",
    "domain": "multi_domain",
    "query": " Add Alex Davis as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Alex Davis\", assigned_to_email=\"anaya.patel@atlas.com\", status=\"Lead\")']",
    "base_template": " Add {new_customer_name} as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "domains": "['crm', 'project_management']"
  },
  {
    "id": "multi_domain_12",
    "domain": "multi_domain",
    "query": "I need to add Alex Anderson as a new lead in the crm. Can you assign them to the person with the fewest overdue tasks?",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Alex Anderson\", assigned_to_email=\"anaya.patel@atlas.com\", status=\"Lead\")']",
    "base_template": " Add {new_customer_name} as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "domains": "['crm', 'project_management']"
  },
  {
    "id": "multi_domain_13",
    "domain": "multi_domain",
    "query": "Can you find the person with the fewest overdue tasks and assign Cameron Brown to them as a new lead in the crm?",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Cameron Brown\", assigned_to_email=\"anaya.patel@atlas.com\", status=\"Lead\")']",
    "base_template": " Add {new_customer_name} as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "domains": "['crm', 'project_management']"
  },
  {
    "id": "multi_domain_14",
    "domain": "multi_domain",
    "query": " Add Jessie Martinez as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Jessie Martinez\", assigned_to_email=\"anaya.patel@atlas.com\", status=\"Lead\")']",
    "base_template": " Add {new_customer_name} as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "domains": "['crm', 'project_management']"
  },
  {
    "id": "multi_domain_15",
    "domain": "multi_domain",
    "query": "Can you find the person with the fewest overdue tasks and assign Quinn Thomas to them as a new lead in the crm?",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Quinn Thomas\", assigned_to_email=\"anaya.patel@atlas.com\", status=\"Lead\")']",
    "base_template": " Add {new_customer_name} as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "domains": "['crm', 'project_management']"
  },
  {
    "id": "multi_domain_16",
    "domain": "multi_domain",
    "query": " Add Taylor Brown as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Taylor Brown\", assigned_to_email=\"anaya.patel@atlas.com\", status=\"Lead\")']",
    "base_template": " Add {new_customer_name} as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "domains": "['crm', 'project_management']"
  },
  {
    "id": "multi_domain_17",
    "domain": "multi_domain",
    "query": " Add Parker Martin as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Parker Martin\", assigned_to_email=\"anaya.patel@atlas.com\", status=\"Lead\")']",
    "base_template": " Add {new_customer_name} as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "domains": "['crm', 'project_management']"
  },
  {
    "id": "multi_domain_18",
    "domain": "multi_domain",
    "query": "Can you find the person with the fewest overdue tasks and assign Jamie Davis to them as a new lead in the crm?",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Jamie Davis\", assigned_to_email=\"anaya.patel@atlas.com\", status=\"Lead\")']",
    "base_template": " Add {new_customer_name} as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "domains": "['crm', 'project_management']"
  },
  {
    "id": "multi_domain_19",
    "domain": "multi_domain",
    "query": " Add Jaden Anderson as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "answer": "['customer_relationship_manager.add_customer.func(customer_name=\"Jaden Anderson\", assigned_to_email=\"anaya.patel@atlas.com\", status=\"Lead\")']",
    "base_template": " Add {new_customer_name} as a new lead in the crm and assign them to the person with the fewest overdue tasks",
    "domains": "['crm', 'project_management']"
  },
  {
    "id": "multi_domain_20",
    "domain": "multi_domain",
    "query": "Can you find the email from October 19 about 'Update on Supply Chain Enhancement Workshop' and schedule a 1.5 hour meeting called 'Update on Supply Chain Enhancement Workshop' at 12 with the sender for December 11?",
    "answer": "['calendar.create_event.func(event_name=\"Update on Supply Chain Enhancement Workshop\", participant_email=\"chenwei.zhang@atlas.com\", event_start=\"2023-12-11 12:00:00\", duration=\"90\")']",
    "base_template": "Find the email from {natural_language_email_date} about {subject} and schedule a {natural_language_duration} meeting called '{subject}' at {natural_language_time} with the sender for {natural_language_event_date}.",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_21",
    "domain": "multi_domain",
    "query": "Find the email from October 17 about Update on project debrief and schedule a 1.5 hour meeting called 'Update on project debrief' at 11:30 with the sender for December 18.",
    "answer": "['calendar.create_event.func(event_name=\"Update on project debrief\", participant_email=\"sofia.santos@atlas.com\", event_start=\"2023-12-18 11:30:00\", duration=\"90\")']",
    "base_template": "Find the email from {natural_language_email_date} about {subject} and schedule a {natural_language_duration} meeting called '{subject}' at {natural_language_time} with the sender for {natural_language_event_date}.",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_22",
    "domain": "multi_domain",
    "query": "Find the email from November 1 about Task Update on Design UI for landing page and schedule a 30 minute meeting called 'Task Update on Design UI for landing page' at 1 with the sender for December 18.",
    "answer": "['calendar.create_event.func(event_name=\"Task Update on Design UI for landing page\", participant_email=\"nadia.moreau@atlas.com\", event_start=\"2023-12-18 13:00:00\", duration=\"30\")']",
    "base_template": "Find the email from {natural_language_email_date} about {subject} and schedule a {natural_language_duration} meeting called '{subject}' at {natural_language_time} with the sender for {natural_language_event_date}.",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_23",
    "domain": "multi_domain",
    "query": "Can you find the email from November 3 about 'Task Update on Fix bug in content delivery module' and schedule a 1 hour meeting called 'Task Update on Fix bug in content delivery module' at 11 with the sender for December 20?",
    "answer": "['calendar.create_event.func(event_name=\"Task Update on Fix bug in content delivery module\", participant_email=\"leila.azizi@atlas.com\", event_start=\"2023-12-20 11:00:00\", duration=\"60\")']",
    "base_template": "Find the email from {natural_language_email_date} about {subject} and schedule a {natural_language_duration} meeting called '{subject}' at {natural_language_time} with the sender for {natural_language_event_date}.",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_24",
    "domain": "multi_domain",
    "query": "I need to schedule a 1.5 hour meeting called 'Update on Creative Thinking Workshop' at 11:30 for December 12. It's with the sender of the email from November 27 about 'Update on Creative Thinking Workshop'. Can you do that?",
    "answer": "['calendar.create_event.func(event_name=\"Update on Creative Thinking Workshop\", participant_email=\"akira.sato@atlas.com\", event_start=\"2023-12-12 11:30:00\", duration=\"90\")']",
    "base_template": "Find the email from {natural_language_email_date} about {subject} and schedule a {natural_language_duration} meeting called '{subject}' at {natural_language_time} with the sender for {natural_language_event_date}.",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_25",
    "domain": "multi_domain",
    "query": "Can you find the email from November 20 about 'Task Update on Implement payment gateway API' and schedule a 30 minute meeting called 'Task Update on Implement payment gateway API' at 12:30 with the sender for December 18?",
    "answer": "['calendar.create_event.func(event_name=\"Task Update on Implement payment gateway API\", participant_email=\"leila.azizi@atlas.com\", event_start=\"2023-12-18 12:30:00\", duration=\"30\")']",
    "base_template": "Find the email from {natural_language_email_date} about {subject} and schedule a {natural_language_duration} meeting called '{subject}' at {natural_language_time} with the sender for {natural_language_event_date}.",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_26",
    "domain": "multi_domain",
    "query": "Can you find the email from November 17 about 'Task Update on Optimize database query for report generation' and schedule a 2 hour meeting called 'Task Update on Optimize database query for report generation' at 11:30 with the sender for December 15?",
    "answer": "['calendar.create_event.func(event_name=\"Task Update on Optimize database query for report generation\", participant_email=\"raj.patel@atlas.com\", event_start=\"2023-12-15 11:30:00\", duration=\"120\")']",
    "base_template": "Find the email from {natural_language_email_date} about {subject} and schedule a {natural_language_duration} meeting called '{subject}' at {natural_language_time} with the sender for {natural_language_event_date}.",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_27",
    "domain": "multi_domain",
    "query": "I need to schedule a 30 minute meeting called 'Update on Annual Budget Planning Session' at 10:30 for December 8. It's with the sender of the email from November 13 about 'Update on Annual Budget Planning Session'. Can you do that?",
    "answer": "['calendar.create_event.func(event_name=\"Update on Annual Budget Planning Session\", participant_email=\"anaya.patel@atlas.com\", event_start=\"2023-12-08 10:30:00\", duration=\"30\")']",
    "base_template": "Find the email from {natural_language_email_date} about {subject} and schedule a {natural_language_duration} meeting called '{subject}' at {natural_language_time} with the sender for {natural_language_event_date}.",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_28",
    "domain": "multi_domain",
    "query": "Can you find the email from October 26 about 'Update on Board of Directors Conclave' and schedule a 2 hour meeting called 'Update on Board of Directors Conclave' at 2:30 with the sender for November 30?",
    "answer": "['calendar.create_event.func(event_name=\"Update on Board of Directors Conclave\", participant_email=\"anaya.patel@atlas.com\", event_start=\"2023-11-30 14:30:00\", duration=\"120\")']",
    "base_template": "Find the email from {natural_language_email_date} about {subject} and schedule a {natural_language_duration} meeting called '{subject}' at {natural_language_time} with the sender for {natural_language_event_date}.",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_29",
    "domain": "multi_domain",
    "query": "Can you find the email from October 25 about 'Update on Project Initiation Meeting' and schedule a 1 hour meeting called 'Update on Project Initiation Meeting' at 12 with the sender for December 7?",
    "answer": "['calendar.create_event.func(event_name=\"Update on Project Initiation Meeting\", participant_email=\"jinsoo.kim@atlas.com\", event_start=\"2023-12-07 12:00:00\", duration=\"60\")']",
    "base_template": "Find the email from {natural_language_email_date} about {subject} and schedule a {natural_language_duration} meeting called '{subject}' at {natural_language_time} with the sender for {natural_language_event_date}.",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_30",
    "domain": "multi_domain",
    "query": "Can you send an email to attendees of the first event on November 30? Title it with the event name and tell them 'Remember to attend this event.'",
    "answer": "['email.send_email.func(recipient=\"fatima.khan@atlas.com\", subject=\"Annual Budget Planning Session\", body=\"Remember to attend this event.\")']",
    "base_template": "Send an email to attendees of the first event on {natural_language_event_date}. Title it with the event name and tell them 'Remember to attend this event.'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_31",
    "domain": "multi_domain",
    "query": "I need to make sure everyone remembers to attend the first event on December 11. Can you send an email to the attendees with the event name as the title and 'Remember to attend this event.' in the email?",
    "answer": "['email.send_email.func(recipient=\"nia.johnson@atlas.com\", subject=\"Annual Budget Planning Session\", body=\"Remember to attend this event.\")']",
    "base_template": "Send an email to attendees of the first event on {natural_language_event_date}. Title it with the event name and tell them 'Remember to attend this event.'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_32",
    "domain": "multi_domain",
    "query": "Can you send an email to attendees of the first event on December 21? Title it with the event name and tell them 'Remember to attend this event.'",
    "answer": "['email.send_email.func(recipient=\"leila.azizi@atlas.com\", subject=\"New Employee Onboarding\", body=\"Remember to attend this event.\")']",
    "base_template": "Send an email to attendees of the first event on {natural_language_event_date}. Title it with the event name and tell them 'Remember to attend this event.'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_33",
    "domain": "multi_domain",
    "query": "Send an email to attendees of the first event on December 12. Title it with the event name and tell them 'Remember to attend this event.'",
    "answer": "['email.send_email.func(recipient=\"aisha.chen@atlas.com\", subject=\"casual catch-up\", body=\"Remember to attend this event.\")']",
    "base_template": "Send an email to attendees of the first event on {natural_language_event_date}. Title it with the event name and tell them 'Remember to attend this event.'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_34",
    "domain": "multi_domain",
    "query": "I need to make sure everyone remembers to attend the first event on December 1. Can you send an email to the attendees with the event name as the title and 'Remember to attend this event.' in the email?",
    "answer": "['email.send_email.func(recipient=\"olga.petrova@atlas.com\", subject=\"Corporate Social Responsibility Initiative\", body=\"Remember to attend this event.\")']",
    "base_template": "Send an email to attendees of the first event on {natural_language_event_date}. Title it with the event name and tell them 'Remember to attend this event.'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_35",
    "domain": "multi_domain",
    "query": "Can you send an email to attendees of the first event on December 12? Title it with the event name and tell them 'Remember to attend this event.'",
    "answer": "['email.send_email.func(recipient=\"aisha.chen@atlas.com\", subject=\"casual catch-up\", body=\"Remember to attend this event.\")']",
    "base_template": "Send an email to attendees of the first event on {natural_language_event_date}. Title it with the event name and tell them 'Remember to attend this event.'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_36",
    "domain": "multi_domain",
    "query": "Send an email to attendees of the first event on December 15. Title it with the event name and tell them 'Remember to attend this event.'",
    "answer": "['email.send_email.func(recipient=\"dmitri.ivanov@atlas.com\", subject=\"performance evaluation\", body=\"Remember to attend this event.\")']",
    "base_template": "Send an email to attendees of the first event on {natural_language_event_date}. Title it with the event name and tell them 'Remember to attend this event.'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_37",
    "domain": "multi_domain",
    "query": "I need to make sure everyone remembers to attend the first event on December 6. Can you send an email to the attendees with the event name as the title and 'Remember to attend this event.' in the email?",
    "answer": "['email.send_email.func(recipient=\"aisha.chen@atlas.com\", subject=\"introductory call\", body=\"Remember to attend this event.\")']",
    "base_template": "Send an email to attendees of the first event on {natural_language_event_date}. Title it with the event name and tell them 'Remember to attend this event.'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_38",
    "domain": "multi_domain",
    "query": "I need to make sure everyone remembers to attend the first event on December 21. Can you send an email to the attendees with the event name as the title and 'Remember to attend this event.' in the email?",
    "answer": "['email.send_email.func(recipient=\"leila.azizi@atlas.com\", subject=\"New Employee Onboarding\", body=\"Remember to attend this event.\")']",
    "base_template": "Send an email to attendees of the first event on {natural_language_event_date}. Title it with the event name and tell them 'Remember to attend this event.'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_39",
    "domain": "multi_domain",
    "query": "Can you send an email to attendees of the first event on December 8? Title it with the event name and tell them 'Remember to attend this event.'",
    "answer": "['email.send_email.func(recipient=\"dmitri.ivanov@atlas.com\", subject=\"Product Launch Analysis\", body=\"Remember to attend this event.\")']",
    "base_template": "Send an email to attendees of the first event on {natural_language_event_date}. Title it with the event name and tell them 'Remember to attend this event.'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_40",
    "domain": "multi_domain",
    "query": "if yuki hasn't sent me any emails in the past 4 days, schedule a half hour meeting with them for Friday at 12 and call it 'Catch up with yuki'",
    "answer": "[]",
    "base_template": "If {sender_name} hasn't sent me any emails in the past {days} days, schedule a 30 minute meeting with them for {day_of_week} at {natural_language_time} called 'Catch up with {sender_name}'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_41",
    "domain": "multi_domain",
    "query": "If nadia hasn't sent me any emails in the past 2 days, schedule a 30 minute meeting with them for Wednesday at 2:30 called 'Catch up with nadia'",
    "answer": "[]",
    "base_template": "If {sender_name} hasn't sent me any emails in the past {days} days, schedule a 30 minute meeting with them for {day_of_week} at {natural_language_time} called 'Catch up with {sender_name}'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_42",
    "domain": "multi_domain",
    "query": "If luis hasn't sent me any emails in the past 4 days, schedule a 30 minute meeting with them for Tuesday at 9:30 called 'Catch up with luis'",
    "answer": "[]",
    "base_template": "If {sender_name} hasn't sent me any emails in the past {days} days, schedule a 30 minute meeting with them for {day_of_week} at {natural_language_time} called 'Catch up with {sender_name}'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_43",
    "domain": "multi_domain",
    "query": "I can't remember the last time I heard from kofi. Can you check if they've sent me any emails in the past 4 days? If not, schedule a 30 minute meeting with them for Tuesday at 10:30 called 'Catch up with kofi'",
    "answer": "['calendar.create_event.func(event_name=\"Catch up with kofi\", participant_email=\"kofi.mensah@atlas.com\", event_start=\"2023-12-05 10:30:00\", duration=\"30\")']",
    "base_template": "If {sender_name} hasn't sent me any emails in the past {days} days, schedule a 30 minute meeting with them for {day_of_week} at {natural_language_time} called 'Catch up with {sender_name}'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_44",
    "domain": "multi_domain",
    "query": "I can't remember the last time I heard from yuki. Can you check if they've sent me any emails in the past 2 days? If not, schedule a 30 minute meeting with them for Friday at 3:30 called 'Catch up with yuki'",
    "answer": "['calendar.create_event.func(event_name=\"Catch up with yuki\", participant_email=\"yuki.tanaka@atlas.com\", event_start=\"2023-12-01 15:30:00\", duration=\"30\")']",
    "base_template": "If {sender_name} hasn't sent me any emails in the past {days} days, schedule a 30 minute meeting with them for {day_of_week} at {natural_language_time} called 'Catch up with {sender_name}'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_45",
    "domain": "multi_domain",
    "query": "if fatima hasn't sent me any emails in the past 3 days, schedule a half hour meeting with them for Friday at 12 and call it 'Catch up with fatima'",
    "answer": "[]",
    "base_template": "If {sender_name} hasn't sent me any emails in the past {days} days, schedule a 30 minute meeting with them for {day_of_week} at {natural_language_time} called 'Catch up with {sender_name}'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_46",
    "domain": "multi_domain",
    "query": "I can't remember the last time I heard from yuki. Can you check if they've sent me any emails in the past 4 days? If not, schedule a 30 minute meeting with them for Monday at 3 called 'Catch up with yuki'",
    "answer": "[]",
    "base_template": "If {sender_name} hasn't sent me any emails in the past {days} days, schedule a 30 minute meeting with them for {day_of_week} at {natural_language_time} called 'Catch up with {sender_name}'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_47",
    "domain": "multi_domain",
    "query": "if fatima hasn't sent me any emails in the past 3 days, schedule a half hour meeting with them for Monday at 9:30 and call it 'Catch up with fatima'",
    "answer": "[]",
    "base_template": "If {sender_name} hasn't sent me any emails in the past {days} days, schedule a 30 minute meeting with them for {day_of_week} at {natural_language_time} called 'Catch up with {sender_name}'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_48",
    "domain": "multi_domain",
    "query": "If akira hasn't sent me any emails in the past 2 days, schedule a 30 minute meeting with them for Tuesday at 12:30 called 'Catch up with akira'",
    "answer": "['calendar.create_event.func(event_name=\"Catch up with akira\", participant_email=\"akira.sato@atlas.com\", event_start=\"2023-12-05 12:30:00\", duration=\"30\")']",
    "base_template": "If {sender_name} hasn't sent me any emails in the past {days} days, schedule a 30 minute meeting with them for {day_of_week} at {natural_language_time} called 'Catch up with {sender_name}'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_49",
    "domain": "multi_domain",
    "query": "If akira hasn't sent me any emails in the past 3 days, schedule a 30 minute meeting with them for Friday at 2:30 called 'Catch up with akira'",
    "answer": "[]",
    "base_template": "If {sender_name} hasn't sent me any emails in the past {days} days, schedule a 30 minute meeting with them for {day_of_week} at {natural_language_time} called 'Catch up with {sender_name}'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_50",
    "domain": "multi_domain",
    "query": "I haven't met with amir in a while. if it's been longer than 2 days can you send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"amir.ali@atlas.com\", subject=\"Catch up soon?\", body=\"We haven\\'t caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I haven't met with {name} in the past {days} days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_51",
    "domain": "multi_domain",
    "query": "I haven't met with fatima in a while. if it's been longer than 10 days can you send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"fatima.khan@atlas.com\", subject=\"Catch up soon?\", body=\"We haven\\'t caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I haven't met with {name} in the past {days} days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_52",
    "domain": "multi_domain",
    "query": "can't remember the last time I met with nia. Can you check if it's been over 2 days? If so, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "answer": "[]",
    "base_template": "If I haven't met with {name} in the past {days} days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_53",
    "domain": "multi_domain",
    "query": "can't remember the last time I met with kofi. Can you check if it's been over 2 days? If so, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"kofi.mensah@atlas.com\", subject=\"Catch up soon?\", body=\"We haven\\'t caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I haven't met with {name} in the past {days} days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_54",
    "domain": "multi_domain",
    "query": "can't remember the last time I met with lena. Can you check if it's been over 2 days? If so, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"lena.schmidt@atlas.com\", subject=\"Catch up soon?\", body=\"We haven\\'t caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I haven't met with {name} in the past {days} days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_55",
    "domain": "multi_domain",
    "query": "I haven't met with akira in a while. if it's been longer than 2 days can you send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"akira.sato@atlas.com\", subject=\"Catch up soon?\", body=\"We haven\\'t caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I haven't met with {name} in the past {days} days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_56",
    "domain": "multi_domain",
    "query": "I haven't met with yuki in a while. if it's been longer than 10 days can you send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "answer": "[]",
    "base_template": "If I haven't met with {name} in the past {days} days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_57",
    "domain": "multi_domain",
    "query": "If I haven't met with sofia in the past 2 days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"sofia.santos@atlas.com\", subject=\"Catch up soon?\", body=\"We haven\\'t caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I haven't met with {name} in the past {days} days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_58",
    "domain": "multi_domain",
    "query": "can't remember the last time I met with santiago. Can you check if it's been over 2 days? If so, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"santiago.martinez@atlas.com\", subject=\"Catch up soon?\", body=\"We haven\\'t caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I haven't met with {name} in the past {days} days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_59",
    "domain": "multi_domain",
    "query": "I haven't met with luis in a while. if it's been longer than 2 days can you send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"luis.ortiz@atlas.com\", subject=\"Catch up soon?\", body=\"We haven\\'t caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I haven't met with {name} in the past {days} days, send them an email titled 'Catch up soon?' saying 'We haven't caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_60",
    "domain": "multi_domain",
    "query": "Did I already schedule a meeting with leila in the next 3 days? If not, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "answer": "[]",
    "base_template": "If I don't have any meetings scheduled with {name} in the next {days} days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_61",
    "domain": "multi_domain",
    "query": "I need to check if I have any meetings scheduled with akira in the next 4 days. If not, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"akira.sato@atlas.com\", subject=\"Catch up soon?\", body=\"We have not caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I don't have any meetings scheduled with {name} in the next {days} days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_62",
    "domain": "multi_domain",
    "query": "Did I already schedule a meeting with carlos in the next 2 days? If not, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"carlos.rodriguez@atlas.com\", subject=\"Catch up soon?\", body=\"We have not caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I don't have any meetings scheduled with {name} in the next {days} days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_63",
    "domain": "multi_domain",
    "query": "If I don't have any meetings scheduled with anaya in the next 4 days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"anaya.patel@atlas.com\", subject=\"Catch up soon?\", body=\"We have not caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I don't have any meetings scheduled with {name} in the next {days} days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_64",
    "domain": "multi_domain",
    "query": "Did I already schedule a meeting with akira in the next 2 days? If not, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"akira.sato@atlas.com\", subject=\"Catch up soon?\", body=\"We have not caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I don't have any meetings scheduled with {name} in the next {days} days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_65",
    "domain": "multi_domain",
    "query": "Did I already schedule a meeting with lena in the next 2 days? If not, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"lena.schmidt@atlas.com\", subject=\"Catch up soon?\", body=\"We have not caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I don't have any meetings scheduled with {name} in the next {days} days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_66",
    "domain": "multi_domain",
    "query": "If I don't have any meetings scheduled with aisha in the next 3 days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "answer": "[]",
    "base_template": "If I don't have any meetings scheduled with {name} in the next {days} days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_67",
    "domain": "multi_domain",
    "query": "I need to check if I have any meetings scheduled with amir in the next 2 days. If not, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "answer": "[]",
    "base_template": "If I don't have any meetings scheduled with {name} in the next {days} days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_68",
    "domain": "multi_domain",
    "query": "Did I already schedule a meeting with anaya in the next 3 days? If not, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "answer": "['email.send_email.func(recipient=\"anaya.patel@atlas.com\", subject=\"Catch up soon?\", body=\"We have not caught up in a while - can you send some availability over next week?\")']",
    "base_template": "If I don't have any meetings scheduled with {name} in the next {days} days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_69",
    "domain": "multi_domain",
    "query": "I need to check if I have any meetings scheduled with aisha in the next 4 days. If not, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "answer": "[]",
    "base_template": "If I don't have any meetings scheduled with {name} in the next {days} days, send them an email titled 'Catch up soon?' saying 'We have not caught up in a while - can you send some availability over next week?'",
    "domains": "['email', 'calendar']"
  },
  {
    "id": "multi_domain_70",
    "domain": "multi_domain",
    "query": "I think jinsoo might have some overdue tasks. Can you check and if so, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"jinsoo.kim@atlas.com\", subject=\"Overdue tasks\", body=\"You have a few overdue tasks - can you update me on them?\")']",
    "base_template": "If {name} has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'project_management']"
  },
  {
    "id": "multi_domain_71",
    "domain": "multi_domain",
    "query": "I think kofi might have some overdue tasks. Can you check and if so, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"kofi.mensah@atlas.com\", subject=\"Overdue tasks\", body=\"You have a few overdue tasks - can you update me on them?\")']",
    "base_template": "If {name} has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'project_management']"
  },
  {
    "id": "multi_domain_72",
    "domain": "multi_domain",
    "query": "If chenwei has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"chenwei.zhang@atlas.com\", subject=\"Overdue tasks\", body=\"You have a few overdue tasks - can you update me on them?\")']",
    "base_template": "If {name} has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'project_management']"
  },
  {
    "id": "multi_domain_73",
    "domain": "multi_domain",
    "query": "can you check if carlos has any overdue tasks? If so, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"carlos.rodriguez@atlas.com\", subject=\"Good work this sprint\", body=\"Nice work keeping on top of your tasks this sprint!\")']",
    "base_template": "If {name} has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'project_management']"
  },
  {
    "id": "multi_domain_74",
    "domain": "multi_domain",
    "query": "I think aisha might have some overdue tasks. Can you check and if so, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"aisha.chen@atlas.com\", subject=\"Good work this sprint\", body=\"Nice work keeping on top of your tasks this sprint!\")']",
    "base_template": "If {name} has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'project_management']"
  },
  {
    "id": "multi_domain_75",
    "domain": "multi_domain",
    "query": "If nia has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"nia.johnson@atlas.com\", subject=\"Good work this sprint\", body=\"Nice work keeping on top of your tasks this sprint!\")']",
    "base_template": "If {name} has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'project_management']"
  },
  {
    "id": "multi_domain_76",
    "domain": "multi_domain",
    "query": "I think carlos might have some overdue tasks. Can you check and if so, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"carlos.rodriguez@atlas.com\", subject=\"Good work this sprint\", body=\"Nice work keeping on top of your tasks this sprint!\")']",
    "base_template": "If {name} has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'project_management']"
  },
  {
    "id": "multi_domain_77",
    "domain": "multi_domain",
    "query": "can you check if jinsoo has any overdue tasks? If so, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"jinsoo.kim@atlas.com\", subject=\"Overdue tasks\", body=\"You have a few overdue tasks - can you update me on them?\")']",
    "base_template": "If {name} has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'project_management']"
  },
  {
    "id": "multi_domain_78",
    "domain": "multi_domain",
    "query": "can you check if anaya has any overdue tasks? If so, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"anaya.patel@atlas.com\", subject=\"Overdue tasks\", body=\"You have a few overdue tasks - can you update me on them?\")']",
    "base_template": "If {name} has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'project_management']"
  },
  {
    "id": "multi_domain_79",
    "domain": "multi_domain",
    "query": "If olga has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"olga.petrova@atlas.com\", subject=\"Overdue tasks\", body=\"You have a few overdue tasks - can you update me on them?\")']",
    "base_template": "If {name} has any overdue tasks, send them an email titled 'Overdue tasks' saying 'You have a few overdue tasks - can you update me on them?'. Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'project_management']"
  },
  {
    "id": "multi_domain_80",
    "domain": "multi_domain",
    "query": "I think jinsoo might have some overdue tasks. Can you check and if so, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"jinsoo.kim@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Book a half-hour meeting with {name} called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "domains": "['calendar', 'project_management']"
  },
  {
    "id": "multi_domain_81",
    "domain": "multi_domain",
    "query": "can you check if fatima has any overdue tasks? If so, book a 30 minute meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow",
    "answer": "[]",
    "base_template": "Book a half-hour meeting with {name} called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "domains": "['calendar', 'project_management']"
  },
  {
    "id": "multi_domain_82",
    "domain": "multi_domain",
    "query": "I think leila might have some overdue tasks. Can you check and if so, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"leila.azizi@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Book a half-hour meeting with {name} called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "domains": "['calendar', 'project_management']"
  },
  {
    "id": "multi_domain_83",
    "domain": "multi_domain",
    "query": "Book a half-hour meeting with jinsoo called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"jinsoo.kim@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Book a half-hour meeting with {name} called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "domains": "['calendar', 'project_management']"
  },
  {
    "id": "multi_domain_84",
    "domain": "multi_domain",
    "query": "I think olga might have some overdue tasks. Can you check and if so, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"olga.petrova@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Book a half-hour meeting with {name} called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "domains": "['calendar', 'project_management']"
  },
  {
    "id": "multi_domain_85",
    "domain": "multi_domain",
    "query": "I think dmitri might have some overdue tasks. Can you check and if so, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow",
    "answer": "[]",
    "base_template": "Book a half-hour meeting with {name} called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "domains": "['calendar', 'project_management']"
  },
  {
    "id": "multi_domain_86",
    "domain": "multi_domain",
    "query": "I think anaya might have some overdue tasks. Can you check and if so, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"anaya.patel@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Book a half-hour meeting with {name} called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "domains": "['calendar', 'project_management']"
  },
  {
    "id": "multi_domain_87",
    "domain": "multi_domain",
    "query": "Book a half-hour meeting with dmitri called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "answer": "[]",
    "base_template": "Book a half-hour meeting with {name} called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "domains": "['calendar', 'project_management']"
  },
  {
    "id": "multi_domain_88",
    "domain": "multi_domain",
    "query": "can you check if chenwei has any overdue tasks? If so, book a 30 minute meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"chenwei.zhang@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Book a half-hour meeting with {name} called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "domains": "['calendar', 'project_management']"
  },
  {
    "id": "multi_domain_89",
    "domain": "multi_domain",
    "query": "I think carlos might have some overdue tasks. Can you check and if so, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow",
    "answer": "[]",
    "base_template": "Book a half-hour meeting with {name} called 'Catch up on overdue tasks' at the earliest time I'm free tomorrowif they have any overdue tasks",
    "domains": "['calendar', 'project_management']"
  },
  {
    "id": "multi_domain_90",
    "domain": "multi_domain",
    "query": "can you check if engaged users was less than 11 at any time since November 26? If so, send an email to luis.ortiz@atlas.com titled 'Update on engaged users' saying 'I noticed engaged users was less than 11 - can you update me?'",
    "answer": "['email.send_email.func(recipient=\"luis.ortiz@atlas.com\", subject=\"Update on engaged users\", body=\"I noticed engaged users was less than 11 - can you update me?\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} send an email to {sender} titled 'Update on {natural_language_metric}' saying 'I noticed {natural_language_metric} was {more_or_less} than {threshold} - can you update me?'",
    "domains": "['analytics', 'email']"
  },
  {
    "id": "multi_domain_91",
    "domain": "multi_domain",
    "query": "can you check if average session duration was less than 41 at any time since September 20? If so, send an email to carlos.rodriguez@atlas.com titled 'Update on average session duration' saying 'I noticed average session duration was less than 41 - can you update me?'",
    "answer": "['email.send_email.func(recipient=\"carlos.rodriguez@atlas.com\", subject=\"Update on average session duration\", body=\"I noticed average session duration was less than 41 - can you update me?\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} send an email to {sender} titled 'Update on {natural_language_metric}' saying 'I noticed {natural_language_metric} was {more_or_less} than {threshold} - can you update me?'",
    "domains": "['analytics', 'email']"
  },
  {
    "id": "multi_domain_92",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 11 at any time since September 15? If so, send an email to yuki.tanaka@atlas.com titled 'Update on engaged users' saying 'I noticed engaged users was more than 11 - can you update me?'",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} send an email to {sender} titled 'Update on {natural_language_metric}' saying 'I noticed {natural_language_metric} was {more_or_less} than {threshold} - can you update me?'",
    "domains": "['analytics', 'email']"
  },
  {
    "id": "multi_domain_93",
    "domain": "multi_domain",
    "query": "can you check if average session duration was more than 19 at any time since November 7? If so, send an email to amir.ali@atlas.com titled 'Update on average session duration' saying 'I noticed average session duration was more than 19 - can you update me?'",
    "answer": "['email.send_email.func(recipient=\"amir.ali@atlas.com\", subject=\"Update on average session duration\", body=\"I noticed average session duration was more than 19 - can you update me?\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} send an email to {sender} titled 'Update on {natural_language_metric}' saying 'I noticed {natural_language_metric} was {more_or_less} than {threshold} - can you update me?'",
    "domains": "['analytics', 'email']"
  },
  {
    "id": "multi_domain_94",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 5 at any time since November 1? If so, send an email to leila.azizi@atlas.com titled 'Update on engaged users' saying 'I noticed engaged users was more than 5 - can you update me?'",
    "answer": "['email.send_email.func(recipient=\"leila.azizi@atlas.com\", subject=\"Update on engaged users\", body=\"I noticed engaged users was more than 5 - can you update me?\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} send an email to {sender} titled 'Update on {natural_language_metric}' saying 'I noticed {natural_language_metric} was {more_or_less} than {threshold} - can you update me?'",
    "domains": "['analytics', 'email']"
  },
  {
    "id": "multi_domain_95",
    "domain": "multi_domain",
    "query": "If total visits was less than 3 at any time since September 16 send an email to nadia.moreau@atlas.com titled 'Update on total visits' saying 'I noticed total visits was less than 3 - can you update me?'",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} send an email to {sender} titled 'Update on {natural_language_metric}' saying 'I noticed {natural_language_metric} was {more_or_less} than {threshold} - can you update me?'",
    "domains": "['analytics', 'email']"
  },
  {
    "id": "multi_domain_96",
    "domain": "multi_domain",
    "query": "If average session duration was less than 41 at any time since October 17 send an email to jinsoo.kim@atlas.com titled 'Update on average session duration' saying 'I noticed average session duration was less than 41 - can you update me?'",
    "answer": "['email.send_email.func(recipient=\"jinsoo.kim@atlas.com\", subject=\"Update on average session duration\", body=\"I noticed average session duration was less than 41 - can you update me?\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} send an email to {sender} titled 'Update on {natural_language_metric}' saying 'I noticed {natural_language_metric} was {more_or_less} than {threshold} - can you update me?'",
    "domains": "['analytics', 'email']"
  },
  {
    "id": "multi_domain_97",
    "domain": "multi_domain",
    "query": "I think engaged users might have been more than 1. If it has been at any time since September 7, can yousend an email to amir.ali@atlas.com titled 'Update on engaged users' saying 'I noticed engaged users was more than 1 - can you update me?'",
    "answer": "['email.send_email.func(recipient=\"amir.ali@atlas.com\", subject=\"Update on engaged users\", body=\"I noticed engaged users was more than 1 - can you update me?\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} send an email to {sender} titled 'Update on {natural_language_metric}' saying 'I noticed {natural_language_metric} was {more_or_less} than {threshold} - can you update me?'",
    "domains": "['analytics', 'email']"
  },
  {
    "id": "multi_domain_98",
    "domain": "multi_domain",
    "query": "can you check if average session duration was less than 41 at any time since October 4? If so, send an email to lena.schmidt@atlas.com titled 'Update on average session duration' saying 'I noticed average session duration was less than 41 - can you update me?'",
    "answer": "['email.send_email.func(recipient=\"lena.schmidt@atlas.com\", subject=\"Update on average session duration\", body=\"I noticed average session duration was less than 41 - can you update me?\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} send an email to {sender} titled 'Update on {natural_language_metric}' saying 'I noticed {natural_language_metric} was {more_or_less} than {threshold} - can you update me?'",
    "domains": "['analytics', 'email']"
  },
  {
    "id": "multi_domain_99",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 5 at any time since October 23? If so, send an email to nia.johnson@atlas.com titled 'Update on engaged users' saying 'I noticed engaged users was more than 5 - can you update me?'",
    "answer": "['email.send_email.func(recipient=\"nia.johnson@atlas.com\", subject=\"Update on engaged users\", body=\"I noticed engaged users was more than 5 - can you update me?\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} send an email to {sender} titled 'Update on {natural_language_metric}' saying 'I noticed {natural_language_metric} was {more_or_less} than {threshold} - can you update me?'",
    "domains": "['analytics', 'email']"
  },
  {
    "id": "multi_domain_100",
    "domain": "multi_domain",
    "query": "If average session duration was more than 41 at any time since October 8 schedule a half-hour meeting called 'Discuss average session duration' with luis at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Discuss average session duration\", participant_email=\"luis.ortiz@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} schedule a half-hour meeting called 'Discuss {natural_language_metric}' with {sender_name} at the earliest time I'm free tomorrow",
    "domains": "['analytics', 'calendar']"
  },
  {
    "id": "multi_domain_101",
    "domain": "multi_domain",
    "query": "I think average session duration might have been more than 41 at any time since September 8. Can you check and if so, schedule a half-hour meeting called 'Discuss average session duration' with luis at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Discuss average session duration\", participant_email=\"luis.ortiz@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} schedule a half-hour meeting called 'Discuss {natural_language_metric}' with {sender_name} at the earliest time I'm free tomorrow",
    "domains": "['analytics', 'calendar']"
  },
  {
    "id": "multi_domain_102",
    "domain": "multi_domain",
    "query": "I think total visits might have been less than 10 at any time since September 24. Can you check and if so, schedule a half-hour meeting called 'Discuss total visits' with lena at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"lena.schmidt@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} schedule a half-hour meeting called 'Discuss {natural_language_metric}' with {sender_name} at the earliest time I'm free tomorrow",
    "domains": "['analytics', 'calendar']"
  },
  {
    "id": "multi_domain_103",
    "domain": "multi_domain",
    "query": "can you check if engaged users was less than 5 at any time since September 3? If so, schedule a 30 minute meeting called 'Discuss engaged users' with leila at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Discuss engaged users\", participant_email=\"leila.azizi@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} schedule a half-hour meeting called 'Discuss {natural_language_metric}' with {sender_name} at the earliest time I'm free tomorrow",
    "domains": "['analytics', 'calendar']"
  },
  {
    "id": "multi_domain_104",
    "domain": "multi_domain",
    "query": "can you check if engaged users was less than 5 at any time since November 9? If so, schedule a 30 minute meeting called 'Discuss engaged users' with santiago at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Discuss engaged users\", participant_email=\"santiago.martinez@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} schedule a half-hour meeting called 'Discuss {natural_language_metric}' with {sender_name} at the earliest time I'm free tomorrow",
    "domains": "['analytics', 'calendar']"
  },
  {
    "id": "multi_domain_105",
    "domain": "multi_domain",
    "query": "can you check if average session duration was more than 41 at any time since November 1? If so, schedule a 30 minute meeting called 'Discuss average session duration' with aisha at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Discuss average session duration\", participant_email=\"aisha.chen@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} schedule a half-hour meeting called 'Discuss {natural_language_metric}' with {sender_name} at the earliest time I'm free tomorrow",
    "domains": "['analytics', 'calendar']"
  },
  {
    "id": "multi_domain_106",
    "domain": "multi_domain",
    "query": "I think average session duration might have been more than 2 at any time since November 25. Can you check and if so, schedule a half-hour meeting called 'Discuss average session duration' with anaya at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Discuss average session duration\", participant_email=\"anaya.patel@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} schedule a half-hour meeting called 'Discuss {natural_language_metric}' with {sender_name} at the earliest time I'm free tomorrow",
    "domains": "['analytics', 'calendar']"
  },
  {
    "id": "multi_domain_107",
    "domain": "multi_domain",
    "query": "I think total visits might have been more than 3 at any time since November 19. Can you check and if so, schedule a half-hour meeting called 'Discuss total visits' with raj at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"raj.patel@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} schedule a half-hour meeting called 'Discuss {natural_language_metric}' with {sender_name} at the earliest time I'm free tomorrow",
    "domains": "['analytics', 'calendar']"
  },
  {
    "id": "multi_domain_108",
    "domain": "multi_domain",
    "query": "can you check if average session duration was more than 19 at any time since September 24? If so, schedule a 30 minute meeting called 'Discuss average session duration' with chenwei at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Discuss average session duration\", participant_email=\"chenwei.zhang@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} schedule a half-hour meeting called 'Discuss {natural_language_metric}' with {sender_name} at the earliest time I'm free tomorrow",
    "domains": "['analytics', 'calendar']"
  },
  {
    "id": "multi_domain_109",
    "domain": "multi_domain",
    "query": "If engaged users was less than 1 at any time since September 10 schedule a half-hour meeting called 'Discuss engaged users' with nadia at the earliest time I'm free tomorrow",
    "answer": "['calendar.create_event.func(event_name=\"Discuss engaged users\", participant_email=\"nadia.moreau@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} schedule a half-hour meeting called 'Discuss {natural_language_metric}' with {sender_name} at the earliest time I'm free tomorrow",
    "domains": "['analytics', 'calendar']"
  },
  {
    "id": "multi_domain_110",
    "domain": "multi_domain",
    "query": "can you check if total visits was more than 21 at any time since October 12? If so, make a backlog task called 'Improve total visits' for dmitri on the front-end board with a deadline of next Friday",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_111",
    "domain": "multi_domain",
    "query": "can you check if total visits was less than 10 at any time since October 11? If so, make a backlog task called 'Improve total visits' for anaya on the front-end board with a deadline of next Friday",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"anaya.patel@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_112",
    "domain": "multi_domain",
    "query": "can you check if engaged users was less than 5 at any time since November 20? If so, make a backlog task called 'Improve engaged users' for kofi on the front-end board with a deadline of next Friday",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"kofi.mensah@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_113",
    "domain": "multi_domain",
    "query": "can you check if average session duration was less than 19 at any time since October 20? If so, make a backlog task called 'Improve average session duration' for luis on the front-end board with a deadline of next Friday",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"luis.ortiz@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_114",
    "domain": "multi_domain",
    "query": "Was average session duration more than 41 at any time since October 28? If so, make a backlog task called 'Improve average session duration' on the front-end board and assign it to for anaya with next Friday as the deadline",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"anaya.patel@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_115",
    "domain": "multi_domain",
    "query": "Was engaged users more than 11 at any time since October 9? If so, make a backlog task called 'Improve engaged users' on the front-end board and assign it to for nia with next Friday as the deadline",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_116",
    "domain": "multi_domain",
    "query": "can you check if average session duration was less than 19 at any time since October 20? If so, make a backlog task called 'Improve average session duration' for anaya on the front-end board with a deadline of next Friday",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"anaya.patel@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_117",
    "domain": "multi_domain",
    "query": "If total visits was more than 21 at any time since November 29 make a backlog task called 'Improve total visits' for santiago on the front-end board with a deadline of next Friday",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_118",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 5 at any time since September 24? If so, make a backlog task called 'Improve engaged users' for fatima on the front-end board with a deadline of next Friday",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"fatima.khan@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_119",
    "domain": "multi_domain",
    "query": "If engaged users was less than 5 at any time since November 22 make a backlog task called 'Improve engaged users' for dmitri on the front-end board with a deadline of next Friday",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"dmitri.ivanov@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_120",
    "domain": "multi_domain",
    "query": "If average session duration was more than 19 at any time since November 27 make a backlog task called 'Improve average session duration' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"nia.johnson@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_121",
    "domain": "multi_domain",
    "query": "If average session duration was more than 41 at any time since October 3 make a backlog task called 'Improve average session duration' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"nia.johnson@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_122",
    "domain": "multi_domain",
    "query": "can you check if average session duration was less than 41 at any time since October 7? If so, make a backlog task called 'Improve average session duration' due next Friday on the front-end board and assign it to the person with the most completed front end tasks",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"nia.johnson@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_123",
    "domain": "multi_domain",
    "query": "If engaged users was more than 11 at any time since October 12 make a backlog task called 'Improve engaged users' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_124",
    "domain": "multi_domain",
    "query": "If engaged users was less than 1 at any time since November 16 make a backlog task called 'Improve engaged users' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_125",
    "domain": "multi_domain",
    "query": "Was engaged users more than 11 at any time since September 28? We need to fix this by next Friday if so - make a backlog task called 'Improve engaged users' on the front-end board and assign it to the person with the most completed front end tasks",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_126",
    "domain": "multi_domain",
    "query": "can you check if average session duration was less than 41 at any time since September 1? If so, make a backlog task called 'Improve average session duration' due next Friday on the front-end board and assign it to the person with the most completed front end tasks",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"nia.johnson@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_127",
    "domain": "multi_domain",
    "query": "can you check if engaged users was less than 5 at any time since September 17? If so, make a backlog task called 'Improve engaged users' due next Friday on the front-end board and assign it to the person with the most completed front end tasks",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"nia.johnson@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_128",
    "domain": "multi_domain",
    "query": "Was total visits more than 10 at any time since October 15? We need to fix this by next Friday if so - make a backlog task called 'Improve total visits' on the front-end board and assign it to the person with the most completed front end tasks",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"nia.johnson@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_129",
    "domain": "multi_domain",
    "query": "If total visits was less than 21 at any time since October 27 make a backlog task called 'Improve total visits' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"nia.johnson@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' on the front-end board with a deadline of next Friday for the person with the most completed front end tasks",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_130",
    "domain": "multi_domain",
    "query": "Check the percent growth of average session duration since Sunday and if was more than engaged users make a backlog task called 'Improve engaged users' for chenwei on the front-end board with a deadline of next Friday",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_131",
    "domain": "multi_domain",
    "query": "can you check the percent growth of engaged users since Wednesday? If it grew by more than total visits make a task called 'Improve total visits' on the front-end backlog for olga that's due next Friday",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_132",
    "domain": "multi_domain",
    "query": "Check the percent growth of average session duration since Monday and if was more than total visits make a backlog task called 'Improve total visits' for amir on the front-end board with a deadline of next Friday",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_133",
    "domain": "multi_domain",
    "query": "Check the percent growth of engaged users since Saturday and if was more than total visits make a backlog task called 'Improve total visits' for olga on the front-end board with a deadline of next Friday",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_134",
    "domain": "multi_domain",
    "query": "can you check the percent growth of average session duration since Friday? If it grew by more than total visits make a task called 'Improve total visits' on the front-end backlog for olga that's due next Friday",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_135",
    "domain": "multi_domain",
    "query": "Check the percent growth of average session duration since Tuesday and if was more than total visits make a backlog task called 'Improve total visits' for olga on the front-end board with a deadline of next Friday",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"olga.petrova@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_136",
    "domain": "multi_domain",
    "query": "I need to check the percent growth of average session duration since Monday. If it grew by more than engaged users make a backlog task called 'Improve engaged users' for kofi on the front-end board with a deadline of next Friday",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_137",
    "domain": "multi_domain",
    "query": "can you check the percent growth of total visits since Monday? If it grew by more than engaged users make a task called 'Improve engaged users' on the front-end backlog for santiago that's due next Friday",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"santiago.martinez@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_138",
    "domain": "multi_domain",
    "query": "I need to check the percent growth of total visits since Sunday. If it grew by more than average session duration make a backlog task called 'Improve average session duration' for chenwei on the front-end board with a deadline of next Friday",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"chenwei.zhang@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_139",
    "domain": "multi_domain",
    "query": "can you check the percent growth of average session duration since Saturday? If it grew by more than total visits make a task called 'Improve total visits' on the front-end backlog for chenwei that's due next Friday",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"chenwei.zhang@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday",
    "domains": "['analytics', 'project_management']"
  },
  {
    "id": "multi_domain_140",
    "domain": "multi_domain",
    "query": "I think engaged users might have been more than 1 at any time since October 18. Can you check and if so, delete all Nadia's leads in the CRM",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000117\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000133\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000109\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000115\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000128\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000031\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000151\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} delete all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'crm']"
  },
  {
    "id": "multi_domain_141",
    "domain": "multi_domain",
    "query": "If average session duration was more than 41 at any time since November 9 delete all Sofia's leads in the CRM",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000025\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000051\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000021\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000013\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000116\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000010\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} delete all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'crm']"
  },
  {
    "id": "multi_domain_142",
    "domain": "multi_domain",
    "query": "If engaged users was more than 5 at any time since November 21 delete all Raj's leads in the CRM",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000154\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000149\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000032\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000194\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000129\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000062\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000100\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000108\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000065\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000152\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} delete all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'crm']"
  },
  {
    "id": "multi_domain_143",
    "domain": "multi_domain",
    "query": "If average session duration was less than 2 at any time since September 14 delete all Nadia's leads in the CRM",
    "answer": "[]",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} delete all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'crm']"
  },
  {
    "id": "multi_domain_144",
    "domain": "multi_domain",
    "query": "I think engaged users might have been less than 5 at any time since October 24. Can you check and if so, delete all Lena's leads in the CRM",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000187\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000076\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000188\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000034\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000180\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000017\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000063\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000177\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000113\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000015\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000110\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} delete all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'crm']"
  },
  {
    "id": "multi_domain_145",
    "domain": "multi_domain",
    "query": "I think engaged users might have been less than 11 at any time since September 18. Can you check and if so, delete all Lena's leads in the CRM",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000187\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000076\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000188\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000034\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000180\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000017\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000063\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000177\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000113\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000015\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000110\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} delete all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'crm']"
  },
  {
    "id": "multi_domain_146",
    "domain": "multi_domain",
    "query": "can you check if engaged users was less than 11 at any time since October 10? If so, delete all the leads assigned to Lena in the CRM",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000187\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000076\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000188\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000034\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000180\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000017\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000063\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000177\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000113\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000015\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000110\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} delete all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'crm']"
  },
  {
    "id": "multi_domain_147",
    "domain": "multi_domain",
    "query": "I think engaged users might have been more than 1 at any time since September 19. Can you check and if so, delete all Raj's leads in the CRM",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000154\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000149\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000032\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000194\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000129\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000062\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000100\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000108\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000065\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000152\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} delete all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'crm']"
  },
  {
    "id": "multi_domain_148",
    "domain": "multi_domain",
    "query": "I think engaged users might have been less than 1 at any time since September 12. Can you check and if so, delete all Akira's leads in the CRM",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000167\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000095\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000004\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000160\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000080\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000035\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000012\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000155\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} delete all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'crm']"
  },
  {
    "id": "multi_domain_149",
    "domain": "multi_domain",
    "query": "can you check if total visits was more than 10 at any time since September 8? If so, delete all the leads assigned to Sofia in the CRM",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000025\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000051\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000021\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000013\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000116\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000010\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} delete all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'crm']"
  },
  {
    "id": "multi_domain_150",
    "domain": "multi_domain",
    "query": "can you check if carlos has any overdue tasks? If so, book a 30 minute meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise send them an email saying 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"carlos.rodriguez@atlas.com\", subject=\"Good work this sprint\", body=\"Nice work keeping on top of your tasks this sprint!\")']",
    "base_template": "If {name} has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_151",
    "domain": "multi_domain",
    "query": "can you check if leila has any overdue tasks? If so, book a 30 minute meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise send them an email saying 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"leila.azizi@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")', 'email.send_email.func(recipient=\"leila.azizi@atlas.com\", subject=\"Discuss overdue tasks\", body=\"I noticed you have a few overdue tasks - let\\'s catch up tomorrow.\")']",
    "base_template": "If {name} has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_152",
    "domain": "multi_domain",
    "query": "If olga has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"olga.petrova@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")', 'email.send_email.func(recipient=\"olga.petrova@atlas.com\", subject=\"Discuss overdue tasks\", body=\"I noticed you have a few overdue tasks - let\\'s catch up tomorrow.\")']",
    "base_template": "If {name} has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_153",
    "domain": "multi_domain",
    "query": "can you check if luis has any overdue tasks? If so, book a 30 minute meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise send them an email saying 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"luis.ortiz@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")', 'email.send_email.func(recipient=\"luis.ortiz@atlas.com\", subject=\"Discuss overdue tasks\", body=\"I noticed you have a few overdue tasks - let\\'s catch up tomorrow.\")']",
    "base_template": "If {name} has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_154",
    "domain": "multi_domain",
    "query": "I think dmitri might have some overdue tasks. Can you check and if so, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"dmitri.ivanov@atlas.com\", subject=\"Good work this sprint\", body=\"Nice work keeping on top of your tasks this sprint!\")']",
    "base_template": "If {name} has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_155",
    "domain": "multi_domain",
    "query": "can you check if dmitri has any overdue tasks? If so, book a 30 minute meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise send them an email saying 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"dmitri.ivanov@atlas.com\", subject=\"Good work this sprint\", body=\"Nice work keeping on top of your tasks this sprint!\")']",
    "base_template": "If {name} has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_156",
    "domain": "multi_domain",
    "query": "can you check if yuki has any overdue tasks? If so, book a 30 minute meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise send them an email saying 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"yuki.tanaka@atlas.com\", subject=\"Good work this sprint\", body=\"Nice work keeping on top of your tasks this sprint!\")']",
    "base_template": "If {name} has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_157",
    "domain": "multi_domain",
    "query": "I think kofi might have some overdue tasks. Can you check and if so, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"kofi.mensah@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")', 'email.send_email.func(recipient=\"kofi.mensah@atlas.com\", subject=\"Discuss overdue tasks\", body=\"I noticed you have a few overdue tasks - let\\'s catch up tomorrow.\")']",
    "base_template": "If {name} has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_158",
    "domain": "multi_domain",
    "query": "If chenwei has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['calendar.create_event.func(event_name=\"Catch up on overdue tasks\", participant_email=\"chenwei.zhang@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")', 'email.send_email.func(recipient=\"chenwei.zhang@atlas.com\", subject=\"Discuss overdue tasks\", body=\"I noticed you have a few overdue tasks - let\\'s catch up tomorrow.\")']",
    "base_template": "If {name} has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_159",
    "domain": "multi_domain",
    "query": "If dmitri has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "answer": "['email.send_email.func(recipient=\"dmitri.ivanov@atlas.com\", subject=\"Good work this sprint\", body=\"Nice work keeping on top of your tasks this sprint!\")']",
    "base_template": "If {name} has any overdue tasks, book a half hour meeting with them called 'Catch up on overdue tasks' at the earliest time I'm free tomorrow and send them an email titled 'Discuss overdue tasks' saying 'I noticed you have a few overdue tasks - let's catch up tomorrow.' Otherwise email them with 'Nice work keeping on top of your tasks this sprint!' titled 'Good work this sprint'",
    "domains": "['email', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_160",
    "domain": "multi_domain",
    "query": "If total visits was less than 21 at any time since November 13 make a backlog task 'Improve total visits' for dmitri on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent total visits' saying 'I noticed total visits has been stable, nice work!' ",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"dmitri.ivanov@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent {natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!' ",
    "domains": "['analytics', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_161",
    "domain": "multi_domain",
    "query": "can you check if total visits was more than 10 at any time since November 19? If so, make a task 'Improve total visits' for aisha on the front-end backlog with a deadline of next Friday otherwise send them an email titled 'Recent total visits' saying 'I noticed total visits has been stable, nice work!'",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"aisha.chen@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent {natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!' ",
    "domains": "['analytics', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_162",
    "domain": "multi_domain",
    "query": "If engaged users was more than 11 at any time since October 23 make a backlog task 'Improve engaged users' for yuki on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent engaged users' saying 'I noticed engaged users has been stable, nice work!' ",
    "answer": "['email.send_email.func(recipient=\"yuki.tanaka@atlas.com\", subject=\"Recent engaged users\", body=\"I noticed engaged users has been stable, nice work!\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent {natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!' ",
    "domains": "['analytics', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_163",
    "domain": "multi_domain",
    "query": "Was average session duration less than 19 at any time since October 13? If so, make a backlog task called 'Improve average session duration' for dmitri on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent average session duration' saying 'I noticed average session duration has been stable, nice work!'",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"dmitri.ivanov@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent {natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!' ",
    "domains": "['analytics', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_164",
    "domain": "multi_domain",
    "query": "Was total visits less than 10 at any time since October 10? If so, make a backlog task called 'Improve total visits' for dmitri on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent total visits' saying 'I noticed total visits has been stable, nice work!'",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"dmitri.ivanov@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent {natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!' ",
    "domains": "['analytics', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_165",
    "domain": "multi_domain",
    "query": "Was total visits more than 10 at any time since September 17? If so, make a backlog task called 'Improve total visits' for kofi on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent total visits' saying 'I noticed total visits has been stable, nice work!'",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"kofi.mensah@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent {natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!' ",
    "domains": "['analytics', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_166",
    "domain": "multi_domain",
    "query": "If total visits was more than 3 at any time since September 24 make a backlog task 'Improve total visits' for olga on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent total visits' saying 'I noticed total visits has been stable, nice work!' ",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"olga.petrova@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent {natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!' ",
    "domains": "['analytics', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_167",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 1 at any time since September 5? If so, make a task 'Improve engaged users' for chenwei on the front-end backlog with a deadline of next Friday otherwise send them an email titled 'Recent engaged users' saying 'I noticed engaged users has been stable, nice work!'",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"chenwei.zhang@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent {natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!' ",
    "domains": "['analytics', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_168",
    "domain": "multi_domain",
    "query": "Was total visits less than 21 at any time since October 25? If so, make a backlog task called 'Improve total visits' for santiago on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent total visits' saying 'I noticed total visits has been stable, nice work!'",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"santiago.martinez@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent {natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!' ",
    "domains": "['analytics', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_169",
    "domain": "multi_domain",
    "query": "can you check if average session duration was less than 41 at any time since October 30? If so, make a task 'Improve average session duration' for leila on the front-end backlog with a deadline of next Friday otherwise send them an email titled 'Recent average session duration' saying 'I noticed average session duration has been stable, nice work!'",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"leila.azizi@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday otherwise send them an email titled 'Recent {natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!' ",
    "domains": "['analytics', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_170",
    "domain": "multi_domain",
    "query": "can you check the percent growth of engaged users since Wednesday? If it grew by more than total visits make a backlog task called 'Improve total visits' for yuki on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss engaged users' for us at the first time I can do tomorrow",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss {natural_language_metric}' with them at the first time I can do tomorrow",
    "domains": "['analytics', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_171",
    "domain": "multi_domain",
    "query": "please check the percent growth of engaged users since Friday. If it grew by more than average session duration make a front-end backlog task called 'Improve average session duration' for kofi that's due next Friday and schedule a 30 minute meeting called 'Discuss engaged users' for us at the earliest slot i'm free tomorrow",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"kofi.mensah@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss engaged users\", participant_email=\"kofi.mensah@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss {natural_language_metric}' with them at the first time I can do tomorrow",
    "domains": "['analytics', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_172",
    "domain": "multi_domain",
    "query": "can you check the percent growth of average session duration since Sunday? If it grew by more than engaged users make a backlog task called 'Improve engaged users' for jinsoo on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss average session duration' for us at the first time I can do tomorrow",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss {natural_language_metric}' with them at the first time I can do tomorrow",
    "domains": "['analytics', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_173",
    "domain": "multi_domain",
    "query": "Check the percent growth of total visits since Wednesday and if was more than engaged users make a backlog task called 'Improve engaged users' for carlos on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss total visits' with them at the first time I can do tomorrow",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss {natural_language_metric}' with them at the first time I can do tomorrow",
    "domains": "['analytics', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_174",
    "domain": "multi_domain",
    "query": "can you check the percent growth of average session duration since Saturday? If it grew by more than engaged users make a backlog task called 'Improve engaged users' for chenwei on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss average session duration' for us at the first time I can do tomorrow",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"chenwei.zhang@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss average session duration\", participant_email=\"chenwei.zhang@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss {natural_language_metric}' with them at the first time I can do tomorrow",
    "domains": "['analytics', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_175",
    "domain": "multi_domain",
    "query": "please check the percent growth of total visits since Wednesday. If it grew by more than engaged users make a front-end backlog task called 'Improve engaged users' for nia that's due next Friday and schedule a 30 minute meeting called 'Discuss total visits' for us at the earliest slot i'm free tomorrow",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss {natural_language_metric}' with them at the first time I can do tomorrow",
    "domains": "['analytics', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_176",
    "domain": "multi_domain",
    "query": "please check the percent growth of total visits since Monday. If it grew by more than average session duration make a front-end backlog task called 'Improve average session duration' for chenwei that's due next Friday and schedule a 30 minute meeting called 'Discuss total visits' for us at the earliest slot i'm free tomorrow",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"chenwei.zhang@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"chenwei.zhang@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss {natural_language_metric}' with them at the first time I can do tomorrow",
    "domains": "['analytics', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_177",
    "domain": "multi_domain",
    "query": "please check the percent growth of total visits since Friday. If it grew by more than average session duration make a front-end backlog task called 'Improve average session duration' for nia that's due next Friday and schedule a 30 minute meeting called 'Discuss total visits' for us at the earliest slot i'm free tomorrow",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"nia.johnson@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"nia.johnson@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss {natural_language_metric}' with them at the first time I can do tomorrow",
    "domains": "['analytics', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_178",
    "domain": "multi_domain",
    "query": "Check the percent growth of average session duration since Saturday and if was more than engaged users make a backlog task called 'Improve engaged users' for leila on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss average session duration' with them at the first time I can do tomorrow",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"leila.azizi@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss average session duration\", participant_email=\"leila.azizi@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss {natural_language_metric}' with them at the first time I can do tomorrow",
    "domains": "['analytics', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_179",
    "domain": "multi_domain",
    "query": "Check the percent growth of average session duration since Friday and if was more than engaged users make a backlog task called 'Improve engaged users' for aisha on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss average session duration' with them at the first time I can do tomorrow",
    "answer": "[]",
    "base_template": "Check the percent growth of {natural_language_metric} since {day_of_week} and if was more than {natural_language_metric_2} make a backlog task called 'Improve {natural_language_metric_2}' for {name} on the front-end board with a deadline of next Friday. Also schedule a half-hour meeting called 'Discuss {natural_language_metric}' with them at the first time I can do tomorrow",
    "domains": "['analytics', 'calendar', 'project_management']"
  },
  {
    "id": "multi_domain_180",
    "domain": "multi_domain",
    "query": "Was engaged users more than 1 at any time since November 6? If so, delete all Raj's leads in the CRM and then send them an email titled 'Reprioritising' saying 'engaged users looks good, so we no longer need you finding new leads'. If not say in the email 'We need you to improve engaged users - TBD.'",
    "answer": "['email.send_email.func(recipient=\"raj.patel@atlas.com\", subject=\"Reprioritising\", body=\"We need you to improve engaged users - TBD.\")']",
    "base_template": "If {natural_language_metric} was more than {threshold} at any time since {natural_language_date} delete {assigned_to_first_name}'s new leads in the CRM and send them an email titled 'Reprioritising'saying '{natural_language_metric} looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve {natural_language_metric} - TBD.'",
    "domains": "['analytics', 'crm', 'email']"
  },
  {
    "id": "multi_domain_181",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 5 at any time since October 3? If so, delete all the leads assigned to Nadia's in the CRM and send them an email titled 'Reprioritising' saying 'engaged users looks good, so we no longer need you finding new leads'. If not say 'We need you to improve engaged users - TBD.'",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000117\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000133\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000109\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000115\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000128\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000031\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000151\")', 'email.send_email.func(recipient=\"nadia.moreau@atlas.com\", subject=\"Reprioritising\", body=\"engaged users looks good, so we no longer need you finding new leads\")']",
    "base_template": "If {natural_language_metric} was more than {threshold} at any time since {natural_language_date} delete {assigned_to_first_name}'s new leads in the CRM and send them an email titled 'Reprioritising'saying '{natural_language_metric} looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve {natural_language_metric} - TBD.'",
    "domains": "['analytics', 'crm', 'email']"
  },
  {
    "id": "multi_domain_182",
    "domain": "multi_domain",
    "query": "If total visits was more than 21 at any time since October 30 delete Sofia's new leads in the CRM and send them an email titled 'Reprioritising'saying 'total visits looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve total visits - TBD.'",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000025\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000051\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000021\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000013\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000116\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000010\")', 'email.send_email.func(recipient=\"sofia.santos@atlas.com\", subject=\"Reprioritising\", body=\"total visits looks good, so we no longer need you finding new leads\")']",
    "base_template": "If {natural_language_metric} was more than {threshold} at any time since {natural_language_date} delete {assigned_to_first_name}'s new leads in the CRM and send them an email titled 'Reprioritising'saying '{natural_language_metric} looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve {natural_language_metric} - TBD.'",
    "domains": "['analytics', 'crm', 'email']"
  },
  {
    "id": "multi_domain_183",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 11 at any time since September 22? If so, delete all the leads assigned to Sofia's in the CRM and send them an email titled 'Reprioritising' saying 'engaged users looks good, so we no longer need you finding new leads'. If not say 'We need you to improve engaged users - TBD.'",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000025\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000051\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000021\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000013\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000116\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000010\")', 'email.send_email.func(recipient=\"sofia.santos@atlas.com\", subject=\"Reprioritising\", body=\"engaged users looks good, so we no longer need you finding new leads\")']",
    "base_template": "If {natural_language_metric} was more than {threshold} at any time since {natural_language_date} delete {assigned_to_first_name}'s new leads in the CRM and send them an email titled 'Reprioritising'saying '{natural_language_metric} looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve {natural_language_metric} - TBD.'",
    "domains": "['analytics', 'crm', 'email']"
  },
  {
    "id": "multi_domain_184",
    "domain": "multi_domain",
    "query": "Was total visits more than 21 at any time since September 1? If so, delete all Akira's leads in the CRM and then send them an email titled 'Reprioritising' saying 'total visits looks good, so we no longer need you finding new leads'. If not say in the email 'We need you to improve total visits - TBD.'",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000167\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000095\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000004\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000160\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000080\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000035\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000012\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000155\")', 'email.send_email.func(recipient=\"akira.sato@atlas.com\", subject=\"Reprioritising\", body=\"total visits looks good, so we no longer need you finding new leads\")']",
    "base_template": "If {natural_language_metric} was more than {threshold} at any time since {natural_language_date} delete {assigned_to_first_name}'s new leads in the CRM and send them an email titled 'Reprioritising'saying '{natural_language_metric} looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve {natural_language_metric} - TBD.'",
    "domains": "['analytics', 'crm', 'email']"
  },
  {
    "id": "multi_domain_185",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 11 at any time since November 21? If so, delete all the leads assigned to Raj's in the CRM and send them an email titled 'Reprioritising' saying 'engaged users looks good, so we no longer need you finding new leads'. If not say 'We need you to improve engaged users - TBD.'",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000154\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000149\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000032\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000194\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000129\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000062\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000100\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000108\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000065\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000152\")', 'email.send_email.func(recipient=\"raj.patel@atlas.com\", subject=\"Reprioritising\", body=\"engaged users looks good, so we no longer need you finding new leads\")']",
    "base_template": "If {natural_language_metric} was more than {threshold} at any time since {natural_language_date} delete {assigned_to_first_name}'s new leads in the CRM and send them an email titled 'Reprioritising'saying '{natural_language_metric} looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve {natural_language_metric} - TBD.'",
    "domains": "['analytics', 'crm', 'email']"
  },
  {
    "id": "multi_domain_186",
    "domain": "multi_domain",
    "query": "Was total visits more than 10 at any time since November 6? If so, delete all Akira's leads in the CRM and then send them an email titled 'Reprioritising' saying 'total visits looks good, so we no longer need you finding new leads'. If not say in the email 'We need you to improve total visits - TBD.'",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000167\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000095\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000004\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000160\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000080\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000035\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000012\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000155\")', 'email.send_email.func(recipient=\"akira.sato@atlas.com\", subject=\"Reprioritising\", body=\"total visits looks good, so we no longer need you finding new leads\")']",
    "base_template": "If {natural_language_metric} was more than {threshold} at any time since {natural_language_date} delete {assigned_to_first_name}'s new leads in the CRM and send them an email titled 'Reprioritising'saying '{natural_language_metric} looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve {natural_language_metric} - TBD.'",
    "domains": "['analytics', 'crm', 'email']"
  },
  {
    "id": "multi_domain_187",
    "domain": "multi_domain",
    "query": "Was engaged users more than 5 at any time since November 17? If so, delete all Nadia's leads in the CRM and then send them an email titled 'Reprioritising' saying 'engaged users looks good, so we no longer need you finding new leads'. If not say in the email 'We need you to improve engaged users - TBD.'",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000117\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000133\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000109\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000115\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000128\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000031\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000151\")', 'email.send_email.func(recipient=\"nadia.moreau@atlas.com\", subject=\"Reprioritising\", body=\"engaged users looks good, so we no longer need you finding new leads\")']",
    "base_template": "If {natural_language_metric} was more than {threshold} at any time since {natural_language_date} delete {assigned_to_first_name}'s new leads in the CRM and send them an email titled 'Reprioritising'saying '{natural_language_metric} looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve {natural_language_metric} - TBD.'",
    "domains": "['analytics', 'crm', 'email']"
  },
  {
    "id": "multi_domain_188",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 1 at any time since September 4? If so, delete all the leads assigned to Raj's in the CRM and send them an email titled 'Reprioritising' saying 'engaged users looks good, so we no longer need you finding new leads'. If not say 'We need you to improve engaged users - TBD.'",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000154\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000149\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000032\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000194\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000129\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000062\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000100\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000108\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000065\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000152\")', 'email.send_email.func(recipient=\"raj.patel@atlas.com\", subject=\"Reprioritising\", body=\"engaged users looks good, so we no longer need you finding new leads\")']",
    "base_template": "If {natural_language_metric} was more than {threshold} at any time since {natural_language_date} delete {assigned_to_first_name}'s new leads in the CRM and send them an email titled 'Reprioritising'saying '{natural_language_metric} looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve {natural_language_metric} - TBD.'",
    "domains": "['analytics', 'crm', 'email']"
  },
  {
    "id": "multi_domain_189",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 11 at any time since September 15? If so, delete all the leads assigned to Raj's in the CRM and send them an email titled 'Reprioritising' saying 'engaged users looks good, so we no longer need you finding new leads'. If not say 'We need you to improve engaged users - TBD.'",
    "answer": "['customer_relationship_manager.delete_customer.func(customer_id=\"00000154\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000149\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000032\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000194\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000129\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000062\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000100\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000108\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000065\")', 'customer_relationship_manager.delete_customer.func(customer_id=\"00000152\")', 'email.send_email.func(recipient=\"raj.patel@atlas.com\", subject=\"Reprioritising\", body=\"engaged users looks good, so we no longer need you finding new leads\")']",
    "base_template": "If {natural_language_metric} was more than {threshold} at any time since {natural_language_date} delete {assigned_to_first_name}'s new leads in the CRM and send them an email titled 'Reprioritising'saying '{natural_language_metric} looks good, so we no longer need you finding new leads'.If not say in the email 'We need you to improve {natural_language_metric} - TBD.'",
    "domains": "['analytics', 'crm', 'email']"
  },
  {
    "id": "multi_domain_190",
    "domain": "multi_domain",
    "query": "Was engaged users more than 5 at any time since September 4? If so, add a task to the backlog called 'Improve engaged users' for anaya on the front-end board with a deadline of next Friday and schedule a half hour meeting called 'Discuss engaged users' for us at the earliest time I'm free tomorrow otherwise send them an email titled 'engaged users' saying 'I noticed engaged users has been stable, nice work!''",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"anaya.patel@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss engaged users\", participant_email=\"anaya.patel@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss {natural_language_metric}' for us at the first time I can do tomorrow otherwise send them an email titled '{natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!''",
    "domains": "['analytics', 'calendar', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_191",
    "domain": "multi_domain",
    "query": "If engaged users was less than 1 at any time since September 26 make a backlog task 'Improve engaged users' for chenwei on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss engaged users' for us at the first time I can do tomorrow otherwise send them an email titled 'engaged users' saying 'I noticed engaged users has been stable, nice work!''",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"chenwei.zhang@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss engaged users\", participant_email=\"chenwei.zhang@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss {natural_language_metric}' for us at the first time I can do tomorrow otherwise send them an email titled '{natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!''",
    "domains": "['analytics', 'calendar', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_192",
    "domain": "multi_domain",
    "query": "Was average session duration more than 2 at any time since October 28? If so, add a task to the backlog called 'Improve average session duration' for kofi on the front-end board with a deadline of next Friday and schedule a half hour meeting called 'Discuss average session duration' for us at the earliest time I'm free tomorrow otherwise send them an email titled 'average session duration' saying 'I noticed average session duration has been stable, nice work!''",
    "answer": "['project_management.create_task.func(task_name=\"Improve average session duration\", board=\"Front end\", assigned_to_email=\"kofi.mensah@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss average session duration\", participant_email=\"kofi.mensah@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss {natural_language_metric}' for us at the first time I can do tomorrow otherwise send them an email titled '{natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!''",
    "domains": "['analytics', 'calendar', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_193",
    "domain": "multi_domain",
    "query": "Was total visits more than 21 at any time since September 14? If so, add a task to the backlog called 'Improve total visits' for aisha on the front-end board with a deadline of next Friday and schedule a half hour meeting called 'Discuss total visits' for us at the earliest time I'm free tomorrow otherwise send them an email titled 'total visits' saying 'I noticed total visits has been stable, nice work!''",
    "answer": "['email.send_email.func(recipient=\"aisha.chen@atlas.com\", subject=\"Recent total visits\", body=\"I noticed total visits has been stable, nice work!\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss {natural_language_metric}' for us at the first time I can do tomorrow otherwise send them an email titled '{natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!''",
    "domains": "['analytics', 'calendar', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_194",
    "domain": "multi_domain",
    "query": "Was engaged users more than 1 at any time since November 1? If so, add a task to the backlog called 'Improve engaged users' for yuki on the front-end board with a deadline of next Friday and schedule a half hour meeting called 'Discuss engaged users' for us at the earliest time I'm free tomorrow otherwise send them an email titled 'engaged users' saying 'I noticed engaged users has been stable, nice work!''",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"yuki.tanaka@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss engaged users\", participant_email=\"yuki.tanaka@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss {natural_language_metric}' for us at the first time I can do tomorrow otherwise send them an email titled '{natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!''",
    "domains": "['analytics', 'calendar', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_195",
    "domain": "multi_domain",
    "query": "can you check if total visits was less than 10 at any time since October 8? If so, make a task 'Improve total visits' for luis on the front-end backlog that's due next Friday and schedule a half-hour meeting called 'Discuss total visits' for us at the first time I can do tomorrow otherwise send them an email titled 'total visits' saying 'I noticed total visits has been stable, nice work!''",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"luis.ortiz@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"luis.ortiz@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss {natural_language_metric}' for us at the first time I can do tomorrow otherwise send them an email titled '{natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!''",
    "domains": "['analytics', 'calendar', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_196",
    "domain": "multi_domain",
    "query": "can you check if engaged users was less than 1 at any time since September 26? If so, make a task 'Improve engaged users' for dmitri on the front-end backlog that's due next Friday and schedule a half-hour meeting called 'Discuss engaged users' for us at the first time I can do tomorrow otherwise send them an email titled 'engaged users' saying 'I noticed engaged users has been stable, nice work!''",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"dmitri.ivanov@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss engaged users\", participant_email=\"dmitri.ivanov@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss {natural_language_metric}' for us at the first time I can do tomorrow otherwise send them an email titled '{natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!''",
    "domains": "['analytics', 'calendar', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_197",
    "domain": "multi_domain",
    "query": "can you check if total visits was less than 10 at any time since November 17? If so, make a task 'Improve total visits' for amir on the front-end backlog that's due next Friday and schedule a half-hour meeting called 'Discuss total visits' for us at the first time I can do tomorrow otherwise send them an email titled 'total visits' saying 'I noticed total visits has been stable, nice work!''",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"amir.ali@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"amir.ali@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss {natural_language_metric}' for us at the first time I can do tomorrow otherwise send them an email titled '{natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!''",
    "domains": "['analytics', 'calendar', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_198",
    "domain": "multi_domain",
    "query": "can you check if total visits was more than 10 at any time since November 2? If so, make a task 'Improve total visits' for olga on the front-end backlog that's due next Friday and schedule a half-hour meeting called 'Discuss total visits' for us at the first time I can do tomorrow otherwise send them an email titled 'total visits' saying 'I noticed total visits has been stable, nice work!''",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"olga.petrova@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"olga.petrova@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss {natural_language_metric}' for us at the first time I can do tomorrow otherwise send them an email titled '{natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!''",
    "domains": "['analytics', 'calendar', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_199",
    "domain": "multi_domain",
    "query": "can you check if average session duration was less than 2 at any time since September 4? If so, make a task 'Improve average session duration' for aisha on the front-end backlog that's due next Friday and schedule a half-hour meeting called 'Discuss average session duration' for us at the first time I can do tomorrow otherwise send them an email titled 'average session duration' saying 'I noticed average session duration has been stable, nice work!''",
    "answer": "['email.send_email.func(recipient=\"aisha.chen@atlas.com\", subject=\"Recent average session duration\", body=\"I noticed average session duration has been stable, nice work!\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and schedule a half-hour meeting called 'Discuss {natural_language_metric}' for us at the first time I can do tomorrow otherwise send them an email titled '{natural_language_metric}' saying 'I noticed {natural_language_metric} has been stable, nice work!''",
    "domains": "['analytics', 'calendar', 'email', 'project_management']"
  },
  {
    "id": "multi_domain_200",
    "domain": "multi_domain",
    "query": "If total visits was more than 10 at any time since October 1 make a backlog task called 'Improve total visits' for fatima on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss total visits' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying 'total visits looks good, so there are new leads for you' and then give them all Nadia's leads in the CRM",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"fatima.khan@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"fatima.khan@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss {natural_language_metric}' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying '{natural_language_metric} looks good, so there are new leads for you' and then give them all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'calendar', 'email', 'project_management', 'crm']"
  },
  {
    "id": "multi_domain_201",
    "domain": "multi_domain",
    "query": "If total visits was more than 3 at any time since September 18 make a backlog task called 'Improve total visits' for kofi on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss total visits' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying 'total visits looks good, so there are new leads for you' and then give them all Sofia's leads in the CRM",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"kofi.mensah@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"kofi.mensah@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss {natural_language_metric}' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying '{natural_language_metric} looks good, so there are new leads for you' and then give them all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'calendar', 'email', 'project_management', 'crm']"
  },
  {
    "id": "multi_domain_202",
    "domain": "multi_domain",
    "query": "can you check if average session duration was more than 41 at any time since November 20? If so, make a task for chenwei on the backlog called 'Improve average session duration' on the front-end board that's due next Friday and book a half-hour meeting for us called 'Discuss average session duration' at the earliest time I can do tomorrow. otherwise send them an email titled 'New leads for you' saying 'average session duration looks good, so there are new leads for you' and then give them all Nadia's leads in the CRM",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000117\", field=\"assigned_to_email\", new_value=\"chenwei.zhang@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000133\", field=\"assigned_to_email\", new_value=\"chenwei.zhang@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000109\", field=\"assigned_to_email\", new_value=\"chenwei.zhang@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000115\", field=\"assigned_to_email\", new_value=\"chenwei.zhang@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000128\", field=\"assigned_to_email\", new_value=\"chenwei.zhang@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000031\", field=\"assigned_to_email\", new_value=\"chenwei.zhang@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000151\", field=\"assigned_to_email\", new_value=\"chenwei.zhang@atlas.com\")', 'email.send_email.func(recipient=\"chenwei.zhang@atlas.com\", subject=\"New leads for you\", body=\"average session duration looks good, so there are new leads for you\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss {natural_language_metric}' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying '{natural_language_metric} looks good, so there are new leads for you' and then give them all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'calendar', 'email', 'project_management', 'crm']"
  },
  {
    "id": "multi_domain_203",
    "domain": "multi_domain",
    "query": "can you check if engaged users was more than 5 at any time since November 29? If so, make a task for santiago on the backlog called 'Improve engaged users' on the front-end board that's due next Friday and book a half-hour meeting for us called 'Discuss engaged users' at the earliest time I can do tomorrow. otherwise send them an email titled 'New leads for you' saying 'engaged users looks good, so there are new leads for you' and then give them all Lena's leads in the CRM",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000187\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000076\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000188\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000034\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000180\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000017\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000063\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000177\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000113\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000015\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000110\", field=\"assigned_to_email\", new_value=\"santiago.martinez@atlas.com\")', 'email.send_email.func(recipient=\"santiago.martinez@atlas.com\", subject=\"New leads for you\", body=\"engaged users looks good, so there are new leads for you\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss {natural_language_metric}' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying '{natural_language_metric} looks good, so there are new leads for you' and then give them all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'calendar', 'email', 'project_management', 'crm']"
  },
  {
    "id": "multi_domain_204",
    "domain": "multi_domain",
    "query": "Was total visits more than 21 at any time since November 12? If so, make a backlog task called 'Improve total visits' for anaya on the front-end board with a deadline of next Friday and book a 30 minute meeting for us called 'Discuss total visits' at the earliest time I'm free tomorrow. otherwise send them an email and title it 'New leads for you' saying 'total visits looks good, so there are new leads for you' and then give them all Lena's leads in the CRM",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000187\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000076\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000188\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000034\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000180\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000017\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000063\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000177\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000113\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000015\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000110\", field=\"assigned_to_email\", new_value=\"anaya.patel@atlas.com\")', 'email.send_email.func(recipient=\"anaya.patel@atlas.com\", subject=\"New leads for you\", body=\"total visits looks good, so there are new leads for you\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss {natural_language_metric}' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying '{natural_language_metric} looks good, so there are new leads for you' and then give them all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'calendar', 'email', 'project_management', 'crm']"
  },
  {
    "id": "multi_domain_205",
    "domain": "multi_domain",
    "query": "Was engaged users less than 5 at any time since September 10? If so, make a backlog task called 'Improve engaged users' for kofi on the front-end board with a deadline of next Friday and book a 30 minute meeting for us called 'Discuss engaged users' at the earliest time I'm free tomorrow. otherwise send them an email and title it 'New leads for you' saying 'engaged users looks good, so there are new leads for you' and then give them all Raj's leads in the CRM",
    "answer": "['project_management.create_task.func(task_name=\"Improve engaged users\", board=\"Front end\", assigned_to_email=\"kofi.mensah@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss engaged users\", participant_email=\"kofi.mensah@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss {natural_language_metric}' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying '{natural_language_metric} looks good, so there are new leads for you' and then give them all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'calendar', 'email', 'project_management', 'crm']"
  },
  {
    "id": "multi_domain_206",
    "domain": "multi_domain",
    "query": "can you check if average session duration was less than 2 at any time since October 15? If so, make a task for nia on the backlog called 'Improve average session duration' on the front-end board that's due next Friday and book a half-hour meeting for us called 'Discuss average session duration' at the earliest time I can do tomorrow. otherwise send them an email titled 'New leads for you' saying 'average session duration looks good, so there are new leads for you' and then give them all Akira's leads in the CRM",
    "answer": "['customer_relationship_manager.update_customer.func(customer_id=\"00000167\", field=\"assigned_to_email\", new_value=\"nia.johnson@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000095\", field=\"assigned_to_email\", new_value=\"nia.johnson@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000004\", field=\"assigned_to_email\", new_value=\"nia.johnson@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000160\", field=\"assigned_to_email\", new_value=\"nia.johnson@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000080\", field=\"assigned_to_email\", new_value=\"nia.johnson@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000035\", field=\"assigned_to_email\", new_value=\"nia.johnson@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000012\", field=\"assigned_to_email\", new_value=\"nia.johnson@atlas.com\")', 'customer_relationship_manager.update_customer.func(customer_id=\"00000155\", field=\"assigned_to_email\", new_value=\"nia.johnson@atlas.com\")', 'email.send_email.func(recipient=\"nia.johnson@atlas.com\", subject=\"New leads for you\", body=\"average session duration looks good, so there are new leads for you\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss {natural_language_metric}' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying '{natural_language_metric} looks good, so there are new leads for you' and then give them all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'calendar', 'email', 'project_management', 'crm']"
  },
  {
    "id": "multi_domain_207",
    "domain": "multi_domain",
    "query": "Was total visits less than 10 at any time since September 20? If so, make a backlog task called 'Improve total visits' for aisha on the front-end board with a deadline of next Friday and book a 30 minute meeting for us called 'Discuss total visits' at the earliest time I'm free tomorrow. otherwise send them an email and title it 'New leads for you' saying 'total visits looks good, so there are new leads for you' and then give them all Akira's leads in the CRM",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"aisha.chen@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"aisha.chen@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss {natural_language_metric}' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying '{natural_language_metric} looks good, so there are new leads for you' and then give them all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'calendar', 'email', 'project_management', 'crm']"
  },
  {
    "id": "multi_domain_208",
    "domain": "multi_domain",
    "query": "If total visits was more than 10 at any time since September 21 make a backlog task called 'Improve total visits' for leila on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss total visits' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying 'total visits looks good, so there are new leads for you' and then give them all Raj's leads in the CRM",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"leila.azizi@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"leila.azizi@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss {natural_language_metric}' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying '{natural_language_metric} looks good, so there are new leads for you' and then give them all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'calendar', 'email', 'project_management', 'crm']"
  },
  {
    "id": "multi_domain_209",
    "domain": "multi_domain",
    "query": "Was total visits more than 10 at any time since September 29? If so, make a backlog task called 'Improve total visits' for aisha on the front-end board with a deadline of next Friday and book a 30 minute meeting for us called 'Discuss total visits' at the earliest time I'm free tomorrow. otherwise send them an email and title it 'New leads for you' saying 'total visits looks good, so there are new leads for you' and then give them all Sofia's leads in the CRM",
    "answer": "['project_management.create_task.func(task_name=\"Improve total visits\", board=\"Front end\", assigned_to_email=\"aisha.chen@atlas.com\", due_date=\"2023-12-08\", list_name=\"Backlog\")', 'calendar.create_event.func(event_name=\"Discuss total visits\", participant_email=\"aisha.chen@atlas.com\", event_start=\"2023-12-01 13:00:00\", duration=\"30\")']",
    "base_template": "If {natural_language_metric} was {more_or_less} than {threshold} at any time since {natural_language_date} make a backlog task called 'Improve {natural_language_metric}' for {name} on the front-end board with a deadline of next Friday and book a half-hour meeting for us called 'Discuss {natural_language_metric}' at the earliest time I'm free tomorrow. otherwise send them an email titled 'New leads for you' saying '{natural_language_metric} looks good, so there are new leads for you' and then give them all {assigned_to_first_name}'s leads in the CRM",
    "domains": "['analytics', 'calendar', 'email', 'project_management', 'crm']"
  },
  {
    "id": "project_management_0",
    "domain": "project_management",
    "query": "Move all of kofi's tasks that are in progress to in review",
    "answer": "[]",
    "base_template": "Move all of {name}'s tasks that are in progress to in review",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_1",
    "domain": "project_management",
    "query": "can you move all of aisha's tasks that are in progress to in review?",
    "answer": "[]",
    "base_template": "Move all of {name}'s tasks that are in progress to in review",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_2",
    "domain": "project_management",
    "query": "Move all of yuki's tasks that are in progress to in review",
    "answer": "['project_management.update_task.func(task_id=\"00000091\", field=\"list_name\", new_value=\"In Review\")']",
    "base_template": "Move all of {name}'s tasks that are in progress to in review",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_3",
    "domain": "project_management",
    "query": "Move all of dmitri's tasks that are in progress to in review",
    "answer": "['project_management.update_task.func(task_id=\"00000009\", field=\"list_name\", new_value=\"In Review\")']",
    "base_template": "Move all of {name}'s tasks that are in progress to in review",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_4",
    "domain": "project_management",
    "query": "Move all of luis's tasks that are in progress to in review",
    "answer": "['project_management.update_task.func(task_id=\"00000235\", field=\"list_name\", new_value=\"In Review\")']",
    "base_template": "Move all of {name}'s tasks that are in progress to in review",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_5",
    "domain": "project_management",
    "query": "can you move all of kofi's tasks that are in progress to in review?",
    "answer": "[]",
    "base_template": "Move all of {name}'s tasks that are in progress to in review",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_6",
    "domain": "project_management",
    "query": "can you move all of amir's tasks that are in progress to in review?",
    "answer": "[]",
    "base_template": "Move all of {name}'s tasks that are in progress to in review",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_7",
    "domain": "project_management",
    "query": "can you move all of carlos's tasks that are in progress to in review?",
    "answer": "['project_management.update_task.func(task_id=\"00000086\", field=\"list_name\", new_value=\"In Review\")']",
    "base_template": "Move all of {name}'s tasks that are in progress to in review",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_8",
    "domain": "project_management",
    "query": "Move all of leila's tasks that are in progress to in review",
    "answer": "[]",
    "base_template": "Move all of {name}'s tasks that are in progress to in review",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_9",
    "domain": "project_management",
    "query": "Move all of aisha's tasks that are in progress to in review",
    "answer": "[]",
    "base_template": "Move all of {name}'s tasks that are in progress to in review",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_10",
    "domain": "project_management",
    "query": "Add a new task to the Design backlog called Implement user profile management API and assign it to fatima. It's due on December 5.",
    "answer": "['project_management.create_task.func(task_name=\"Implement user profile management API\", board=\"Design\", assigned_to_email=\"fatima.khan@atlas.com\", due_date=\"2023-12-05\", list_name=\"Backlog\")']",
    "base_template": "Add a new task to the {board} backlog called {task_name} and assign it to {name}. It's due on {natural_language_due_date}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_11",
    "domain": "project_management",
    "query": "I need to add a new task to the Design backlog called Develop prototype for data export and assign it to fatima. It's due on December 6. Can you do that?",
    "answer": "['project_management.create_task.func(task_name=\"Develop prototype for data export\", board=\"Design\", assigned_to_email=\"fatima.khan@atlas.com\", due_date=\"2023-12-06\", list_name=\"Backlog\")']",
    "base_template": "Add a new task to the {board} backlog called {task_name} and assign it to {name}. It's due on {natural_language_due_date}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_12",
    "domain": "project_management",
    "query": "I need to add a new task to the Front end backlog called Create wireframe for dashboard and assign it to jinsoo. It's due on December 4. Can you do that?",
    "answer": "['project_management.create_task.func(task_name=\"Create wireframe for dashboard\", board=\"Front end\", assigned_to_email=\"jinsoo.kim@atlas.com\", due_date=\"2023-12-04\", list_name=\"Backlog\")']",
    "base_template": "Add a new task to the {board} backlog called {task_name} and assign it to {name}. It's due on {natural_language_due_date}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_13",
    "domain": "project_management",
    "query": "Add a new task to the Front end backlog called Integrate Twilio SMS API with frontend and assign it to santiago. It's due on December 7.",
    "answer": "['project_management.create_task.func(task_name=\"Integrate Twilio SMS API with frontend\", board=\"Front end\", assigned_to_email=\"santiago.martinez@atlas.com\", due_date=\"2023-12-07\", list_name=\"Backlog\")']",
    "base_template": "Add a new task to the {board} backlog called {task_name} and assign it to {name}. It's due on {natural_language_due_date}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_14",
    "domain": "project_management",
    "query": "Add a new task to the Back end backlog called Improve UX of sign-up flow and assign it to chenwei. It's due on December 2.",
    "answer": "['project_management.create_task.func(task_name=\"Improve UX of sign-up flow\", board=\"Back end\", assigned_to_email=\"chenwei.zhang@atlas.com\", due_date=\"2023-12-02\", list_name=\"Backlog\")']",
    "base_template": "Add a new task to the {board} backlog called {task_name} and assign it to {name}. It's due on {natural_language_due_date}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_15",
    "domain": "project_management",
    "query": "Add a new task to the Front end backlog called Implement search functionality API and assign it to carlos. It's due on December 4.",
    "answer": "['project_management.create_task.func(task_name=\"Implement search functionality API\", board=\"Front end\", assigned_to_email=\"carlos.rodriguez@atlas.com\", due_date=\"2023-12-04\", list_name=\"Backlog\")']",
    "base_template": "Add a new task to the {board} backlog called {task_name} and assign it to {name}. It's due on {natural_language_due_date}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_16",
    "domain": "project_management",
    "query": "can you add a new task called Fix bug in payment processing module to the Back end backlog and assign it to kofi? It's due on December 5.",
    "answer": "['project_management.create_task.func(task_name=\"Fix bug in payment processing module\", board=\"Back end\", assigned_to_email=\"kofi.mensah@atlas.com\", due_date=\"2023-12-05\", list_name=\"Backlog\")']",
    "base_template": "Add a new task to the {board} backlog called {task_name} and assign it to {name}. It's due on {natural_language_due_date}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_17",
    "domain": "project_management",
    "query": "Add a new task to the Back end backlog called Fix alignment issue in homepage and assign it to anaya. It's due on December 5.",
    "answer": "['project_management.create_task.func(task_name=\"Fix alignment issue in homepage\", board=\"Back end\", assigned_to_email=\"anaya.patel@atlas.com\", due_date=\"2023-12-05\", list_name=\"Backlog\")']",
    "base_template": "Add a new task to the {board} backlog called {task_name} and assign it to {name}. It's due on {natural_language_due_date}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_18",
    "domain": "project_management",
    "query": "I need to add a new task to the Design backlog called Design UI for profile page and assign it to carlos. It's due on December 3. Can you do that?",
    "answer": "['project_management.create_task.func(task_name=\"Design UI for profile page\", board=\"Design\", assigned_to_email=\"carlos.rodriguez@atlas.com\", due_date=\"2023-12-03\", list_name=\"Backlog\")']",
    "base_template": "Add a new task to the {board} backlog called {task_name} and assign it to {name}. It's due on {natural_language_due_date}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_19",
    "domain": "project_management",
    "query": "Add a new task to the Front end backlog called Fix bug in user authentication module and assign it to yuki. It's due on December 6.",
    "answer": "['project_management.create_task.func(task_name=\"Fix bug in user authentication module\", board=\"Front end\", assigned_to_email=\"yuki.tanaka@atlas.com\", due_date=\"2023-12-06\", list_name=\"Backlog\")']",
    "base_template": "Add a new task to the {board} backlog called {task_name} and assign it to {name}. It's due on {natural_language_due_date}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_20",
    "domain": "project_management",
    "query": "can you move all of aisha's overdue tasks in the backlog to in progress?",
    "answer": "[]",
    "base_template": "Move all of {name}'s overdue tasks in the backlog to in progress",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_21",
    "domain": "project_management",
    "query": "dmitri has a bunch of overdue tasks in the backlog. Can you move them to in progress?",
    "answer": "[]",
    "base_template": "Move all of {name}'s overdue tasks in the backlog to in progress",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_22",
    "domain": "project_management",
    "query": "Move all of carlos's overdue tasks in the backlog to in progress",
    "answer": "[]",
    "base_template": "Move all of {name}'s overdue tasks in the backlog to in progress",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_23",
    "domain": "project_management",
    "query": "Move all of jinsoo's overdue tasks in the backlog to in progress",
    "answer": "['project_management.update_task.func(task_id=\"00000250\", field=\"list_name\", new_value=\"In Progress\")', 'project_management.update_task.func(task_id=\"00000257\", field=\"list_name\", new_value=\"In Progress\")']",
    "base_template": "Move all of {name}'s overdue tasks in the backlog to in progress",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_24",
    "domain": "project_management",
    "query": "leila has a bunch of overdue tasks in the backlog. Can you move them to in progress?",
    "answer": "['project_management.update_task.func(task_id=\"00000149\", field=\"list_name\", new_value=\"In Progress\")', 'project_management.update_task.func(task_id=\"00000151\", field=\"list_name\", new_value=\"In Progress\")', 'project_management.update_task.func(task_id=\"00000190\", field=\"list_name\", new_value=\"In Progress\")']",
    "base_template": "Move all of {name}'s overdue tasks in the backlog to in progress",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_25",
    "domain": "project_management",
    "query": "can you move all of santiago's overdue tasks in the backlog to in progress?",
    "answer": "['project_management.update_task.func(task_id=\"00000194\", field=\"list_name\", new_value=\"In Progress\")', 'project_management.update_task.func(task_id=\"00000179\", field=\"list_name\", new_value=\"In Progress\")']",
    "base_template": "Move all of {name}'s overdue tasks in the backlog to in progress",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_26",
    "domain": "project_management",
    "query": "jinsoo has a bunch of overdue tasks in the backlog. Can you move them to in progress?",
    "answer": "['project_management.update_task.func(task_id=\"00000250\", field=\"list_name\", new_value=\"In Progress\")', 'project_management.update_task.func(task_id=\"00000257\", field=\"list_name\", new_value=\"In Progress\")']",
    "base_template": "Move all of {name}'s overdue tasks in the backlog to in progress",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_27",
    "domain": "project_management",
    "query": "fatima has a bunch of overdue tasks in the backlog. Can you move them to in progress?",
    "answer": "[]",
    "base_template": "Move all of {name}'s overdue tasks in the backlog to in progress",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_28",
    "domain": "project_management",
    "query": "Move all of nia's overdue tasks in the backlog to in progress",
    "answer": "[]",
    "base_template": "Move all of {name}'s overdue tasks in the backlog to in progress",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_29",
    "domain": "project_management",
    "query": "kofi has a bunch of overdue tasks in the backlog. Can you move them to in progress?",
    "answer": "['project_management.update_task.func(task_id=\"00000220\", field=\"list_name\", new_value=\"In Progress\")', 'project_management.update_task.func(task_id=\"00000244\", field=\"list_name\", new_value=\"In Progress\")', 'project_management.update_task.func(task_id=\"00000234\", field=\"list_name\", new_value=\"In Progress\")']",
    "base_template": "Move all of {name}'s overdue tasks in the backlog to in progress",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_30",
    "domain": "project_management",
    "query": "can you move any of luis's tasks that are in review to completed?",
    "answer": "['project_management.update_task.func(task_id=\"00000249\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000272\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000296\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000280\", field=\"list_name\", new_value=\"Completed\")']",
    "base_template": "Move any of {name}'s tasks that are in review to completed",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_31",
    "domain": "project_management",
    "query": "Move any of kofi's tasks that are in review to completed",
    "answer": "['project_management.update_task.func(task_id=\"00000219\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000270\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000217\", field=\"list_name\", new_value=\"Completed\")']",
    "base_template": "Move any of {name}'s tasks that are in review to completed",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_32",
    "domain": "project_management",
    "query": "can you move any of anaya's tasks that are in review to completed?",
    "answer": "['project_management.update_task.func(task_id=\"00000115\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000198\", field=\"list_name\", new_value=\"Completed\")']",
    "base_template": "Move any of {name}'s tasks that are in review to completed",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_33",
    "domain": "project_management",
    "query": "can you move any of fatima's tasks that are in review to completed?",
    "answer": "['project_management.update_task.func(task_id=\"00000035\", field=\"list_name\", new_value=\"Completed\")']",
    "base_template": "Move any of {name}'s tasks that are in review to completed",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_34",
    "domain": "project_management",
    "query": "Move any of luis's tasks that are in review to completed",
    "answer": "['project_management.update_task.func(task_id=\"00000249\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000272\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000296\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000280\", field=\"list_name\", new_value=\"Completed\")']",
    "base_template": "Move any of {name}'s tasks that are in review to completed",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_35",
    "domain": "project_management",
    "query": "I've finished reviewing all of fatima's tasks. Can you move all the ones that are in review to completed?",
    "answer": "['project_management.update_task.func(task_id=\"00000035\", field=\"list_name\", new_value=\"Completed\")']",
    "base_template": "Move any of {name}'s tasks that are in review to completed",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_36",
    "domain": "project_management",
    "query": "I've finished reviewing all of leila's tasks. Can you move all the ones that are in review to completed?",
    "answer": "['project_management.update_task.func(task_id=\"00000113\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000157\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000118\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000121\", field=\"list_name\", new_value=\"Completed\")']",
    "base_template": "Move any of {name}'s tasks that are in review to completed",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_37",
    "domain": "project_management",
    "query": "can you move any of amir's tasks that are in review to completed?",
    "answer": "['project_management.update_task.func(task_id=\"00000252\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000264\", field=\"list_name\", new_value=\"Completed\")']",
    "base_template": "Move any of {name}'s tasks that are in review to completed",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_38",
    "domain": "project_management",
    "query": "can you move any of dmitri's tasks that are in review to completed?",
    "answer": "['project_management.update_task.func(task_id=\"00000067\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000053\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000094\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000073\", field=\"list_name\", new_value=\"Completed\")']",
    "base_template": "Move any of {name}'s tasks that are in review to completed",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_39",
    "domain": "project_management",
    "query": "Move any of nia's tasks that are in review to completed",
    "answer": "['project_management.update_task.func(task_id=\"00000120\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000191\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000126\", field=\"list_name\", new_value=\"Completed\")', 'project_management.update_task.func(task_id=\"00000197\", field=\"list_name\", new_value=\"Completed\")']",
    "base_template": "Move any of {name}'s tasks that are in review to completed",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_40",
    "domain": "project_management",
    "query": "dmitri is sick so reassign their in progress tasks to jinsoo.",
    "answer": "['project_management.update_task.func(task_id=\"00000009\", field=\"assigned_to_email\", new_value=\"jinsoo.kim@atlas.com\")']",
    "base_template": "{name_1} is sick so reassign their in progress tasks to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_41",
    "domain": "project_management",
    "query": "can you reassign all of olga's in progress tasks to nia?",
    "answer": "['project_management.update_task.func(task_id=\"00000278\", field=\"assigned_to_email\", new_value=\"nia.johnson@atlas.com\")']",
    "base_template": "{name_1} is sick so reassign their in progress tasks to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_42",
    "domain": "project_management",
    "query": "yuki is sick so reassign their in progress tasks to carlos.",
    "answer": "['project_management.update_task.func(task_id=\"00000091\", field=\"assigned_to_email\", new_value=\"carlos.rodriguez@atlas.com\")']",
    "base_template": "{name_1} is sick so reassign their in progress tasks to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_43",
    "domain": "project_management",
    "query": "I need to reassign all of amir's in progress tasks to anaya. Can you do that?",
    "answer": "[]",
    "base_template": "{name_1} is sick so reassign their in progress tasks to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_44",
    "domain": "project_management",
    "query": "I need to reassign all of nia's in progress tasks to dmitri. Can you do that?",
    "answer": "[]",
    "base_template": "{name_1} is sick so reassign their in progress tasks to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_45",
    "domain": "project_management",
    "query": "I need to reassign all of santiago's in progress tasks to leila. Can you do that?",
    "answer": "[]",
    "base_template": "{name_1} is sick so reassign their in progress tasks to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_46",
    "domain": "project_management",
    "query": "can you reassign all of santiago's in progress tasks to fatima?",
    "answer": "[]",
    "base_template": "{name_1} is sick so reassign their in progress tasks to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_47",
    "domain": "project_management",
    "query": "I need to reassign all of fatima's in progress tasks to dmitri. Can you do that?",
    "answer": "['project_management.update_task.func(task_id=\"00000074\", field=\"assigned_to_email\", new_value=\"dmitri.ivanov@atlas.com\")', 'project_management.update_task.func(task_id=\"00000075\", field=\"assigned_to_email\", new_value=\"dmitri.ivanov@atlas.com\")', 'project_management.update_task.func(task_id=\"00000002\", field=\"assigned_to_email\", new_value=\"dmitri.ivanov@atlas.com\")']",
    "base_template": "{name_1} is sick so reassign their in progress tasks to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_48",
    "domain": "project_management",
    "query": "I need to reassign all of chenwei's in progress tasks to yuki. Can you do that?",
    "answer": "['project_management.update_task.func(task_id=\"00000137\", field=\"assigned_to_email\", new_value=\"yuki.tanaka@atlas.com\")']",
    "base_template": "{name_1} is sick so reassign their in progress tasks to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_49",
    "domain": "project_management",
    "query": "I need to reassign all of anaya's in progress tasks to leila. Can you do that?",
    "answer": "['project_management.update_task.func(task_id=\"00000196\", field=\"assigned_to_email\", new_value=\"leila.azizi@atlas.com\")', 'project_management.update_task.func(task_id=\"00000159\", field=\"assigned_to_email\", new_value=\"leila.azizi@atlas.com\")']",
    "base_template": "{name_1} is sick so reassign their in progress tasks to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_50",
    "domain": "project_management",
    "query": "can you move all of leila's unfinished tasks to the backlog?",
    "answer": "[]",
    "base_template": "{name_1} is on vacation now so move all their unfinished tasks to the backlog.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_51",
    "domain": "project_management",
    "query": "dmitri is on vacation now so move all their unfinished tasks to the backlog.",
    "answer": "['project_management.update_task.func(task_id=\"00000009\", field=\"list_name\", new_value=\"Backlog\")']",
    "base_template": "{name_1} is on vacation now so move all their unfinished tasks to the backlog.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_52",
    "domain": "project_management",
    "query": "can you move all of chenwei's unfinished tasks to the backlog?",
    "answer": "['project_management.update_task.func(task_id=\"00000137\", field=\"list_name\", new_value=\"Backlog\")']",
    "base_template": "{name_1} is on vacation now so move all their unfinished tasks to the backlog.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_53",
    "domain": "project_management",
    "query": "carlos is on vacation now so move all their unfinished tasks to the backlog.",
    "answer": "['project_management.update_task.func(task_id=\"00000086\", field=\"list_name\", new_value=\"Backlog\")']",
    "base_template": "{name_1} is on vacation now so move all their unfinished tasks to the backlog.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_54",
    "domain": "project_management",
    "query": "jinsoo is on vacation now so move all their unfinished tasks to the backlog.",
    "answer": "['project_management.update_task.func(task_id=\"00000267\", field=\"list_name\", new_value=\"Backlog\")', 'project_management.update_task.func(task_id=\"00000214\", field=\"list_name\", new_value=\"Backlog\")']",
    "base_template": "{name_1} is on vacation now so move all their unfinished tasks to the backlog.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_55",
    "domain": "project_management",
    "query": "I need to move all of fatima's unfinished tasks to the backlog. Can you do that?",
    "answer": "['project_management.update_task.func(task_id=\"00000074\", field=\"list_name\", new_value=\"Backlog\")', 'project_management.update_task.func(task_id=\"00000075\", field=\"list_name\", new_value=\"Backlog\")', 'project_management.update_task.func(task_id=\"00000002\", field=\"list_name\", new_value=\"Backlog\")']",
    "base_template": "{name_1} is on vacation now so move all their unfinished tasks to the backlog.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_56",
    "domain": "project_management",
    "query": "I need to move all of leila's unfinished tasks to the backlog. Can you do that?",
    "answer": "[]",
    "base_template": "{name_1} is on vacation now so move all their unfinished tasks to the backlog.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_57",
    "domain": "project_management",
    "query": "can you move all of carlos's unfinished tasks to the backlog?",
    "answer": "['project_management.update_task.func(task_id=\"00000086\", field=\"list_name\", new_value=\"Backlog\")']",
    "base_template": "{name_1} is on vacation now so move all their unfinished tasks to the backlog.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_58",
    "domain": "project_management",
    "query": "I need to move all of santiago's unfinished tasks to the backlog. Can you do that?",
    "answer": "[]",
    "base_template": "{name_1} is on vacation now so move all their unfinished tasks to the backlog.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_59",
    "domain": "project_management",
    "query": "I need to move all of yuki's unfinished tasks to the backlog. Can you do that?",
    "answer": "['project_management.update_task.func(task_id=\"00000091\", field=\"list_name\", new_value=\"Backlog\")']",
    "base_template": "{name_1} is on vacation now so move all their unfinished tasks to the backlog.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_60",
    "domain": "project_management",
    "query": "can you give all of jinsoo's overdue tasks that they haven't started to aisha?",
    "answer": "['project_management.update_task.func(task_id=\"00000250\", field=\"assigned_to_email\", new_value=\"aisha.chen@atlas.com\")', 'project_management.update_task.func(task_id=\"00000257\", field=\"assigned_to_email\", new_value=\"aisha.chen@atlas.com\")']",
    "base_template": "Give all the overdue tasks that {name_1} hasn't started to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_61",
    "domain": "project_management",
    "query": "can you give all of luis's overdue tasks that they haven't started to carlos?",
    "answer": "['project_management.update_task.func(task_id=\"00000293\", field=\"assigned_to_email\", new_value=\"carlos.rodriguez@atlas.com\")', 'project_management.update_task.func(task_id=\"00000299\", field=\"assigned_to_email\", new_value=\"carlos.rodriguez@atlas.com\")', 'project_management.update_task.func(task_id=\"00000275\", field=\"assigned_to_email\", new_value=\"carlos.rodriguez@atlas.com\")']",
    "base_template": "Give all the overdue tasks that {name_1} hasn't started to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_62",
    "domain": "project_management",
    "query": "chenwei has some free time so can you give them all of amir's overdue tasks that they haven't started?",
    "answer": "['project_management.update_task.func(task_id=\"00000268\", field=\"assigned_to_email\", new_value=\"chenwei.zhang@atlas.com\")', 'project_management.update_task.func(task_id=\"00000269\", field=\"assigned_to_email\", new_value=\"chenwei.zhang@atlas.com\")']",
    "base_template": "Give all the overdue tasks that {name_1} hasn't started to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_63",
    "domain": "project_management",
    "query": "kofi has some free time so can you give them all of olga's overdue tasks that they haven't started?",
    "answer": "['project_management.update_task.func(task_id=\"00000258\", field=\"assigned_to_email\", new_value=\"kofi.mensah@atlas.com\")', 'project_management.update_task.func(task_id=\"00000294\", field=\"assigned_to_email\", new_value=\"kofi.mensah@atlas.com\")']",
    "base_template": "Give all the overdue tasks that {name_1} hasn't started to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_64",
    "domain": "project_management",
    "query": "yuki has some free time so can you give them all of carlos's overdue tasks that they haven't started?",
    "answer": "[]",
    "base_template": "Give all the overdue tasks that {name_1} hasn't started to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_65",
    "domain": "project_management",
    "query": "Give all the overdue tasks that fatima hasn't started to santiago.",
    "answer": "[]",
    "base_template": "Give all the overdue tasks that {name_1} hasn't started to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_66",
    "domain": "project_management",
    "query": "can you give all of luis's overdue tasks that they haven't started to amir?",
    "answer": "['project_management.update_task.func(task_id=\"00000293\", field=\"assigned_to_email\", new_value=\"amir.ali@atlas.com\")', 'project_management.update_task.func(task_id=\"00000299\", field=\"assigned_to_email\", new_value=\"amir.ali@atlas.com\")', 'project_management.update_task.func(task_id=\"00000275\", field=\"assigned_to_email\", new_value=\"amir.ali@atlas.com\")']",
    "base_template": "Give all the overdue tasks that {name_1} hasn't started to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_67",
    "domain": "project_management",
    "query": "Give all the overdue tasks that yuki hasn't started to chenwei.",
    "answer": "[]",
    "base_template": "Give all the overdue tasks that {name_1} hasn't started to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_68",
    "domain": "project_management",
    "query": "Give all the overdue tasks that chenwei hasn't started to amir.",
    "answer": "['project_management.update_task.func(task_id=\"00000125\", field=\"assigned_to_email\", new_value=\"amir.ali@atlas.com\")', 'project_management.update_task.func(task_id=\"00000145\", field=\"assigned_to_email\", new_value=\"amir.ali@atlas.com\")', 'project_management.update_task.func(task_id=\"00000105\", field=\"assigned_to_email\", new_value=\"amir.ali@atlas.com\")']",
    "base_template": "Give all the overdue tasks that {name_1} hasn't started to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_69",
    "domain": "project_management",
    "query": "kofi has some free time so can you give them all of jinsoo's overdue tasks that they haven't started?",
    "answer": "['project_management.update_task.func(task_id=\"00000250\", field=\"assigned_to_email\", new_value=\"kofi.mensah@atlas.com\")', 'project_management.update_task.func(task_id=\"00000257\", field=\"assigned_to_email\", new_value=\"kofi.mensah@atlas.com\")']",
    "base_template": "Give all the overdue tasks that {name_1} hasn't started to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_70",
    "domain": "project_management",
    "query": "I need to take jinsoo's most urgent task and reassign it to kofi. Can you do that?",
    "answer": "['project_management.update_task.func(task_id=\"00000250\", field=\"assigned_to_email\", new_value=\"kofi.mensah@atlas.com\")']",
    "base_template": "Take {name_1}'s most urgent task and reassign it to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_71",
    "domain": "project_management",
    "query": "Take anaya's most urgent task and reassign it to dmitri.",
    "answer": "['project_management.update_task.func(task_id=\"00000122\", field=\"assigned_to_email\", new_value=\"dmitri.ivanov@atlas.com\")']",
    "base_template": "Take {name_1}'s most urgent task and reassign it to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_72",
    "domain": "project_management",
    "query": "Take nia's most urgent task and reassign it to olga.",
    "answer": "['project_management.update_task.func(task_id=\"00000162\", field=\"assigned_to_email\", new_value=\"olga.petrova@atlas.com\")']",
    "base_template": "Take {name_1}'s most urgent task and reassign it to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_73",
    "domain": "project_management",
    "query": "can you take anaya's most urgent task and reassign it to nia?",
    "answer": "['project_management.update_task.func(task_id=\"00000122\", field=\"assigned_to_email\", new_value=\"nia.johnson@atlas.com\")']",
    "base_template": "Take {name_1}'s most urgent task and reassign it to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_74",
    "domain": "project_management",
    "query": "can you take aisha's most urgent task and reassign it to carlos?",
    "answer": "['project_management.update_task.func(task_id=\"00000079\", field=\"assigned_to_email\", new_value=\"carlos.rodriguez@atlas.com\")']",
    "base_template": "Take {name_1}'s most urgent task and reassign it to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_75",
    "domain": "project_management",
    "query": "Take dmitri's most urgent task and reassign it to aisha.",
    "answer": "['project_management.update_task.func(task_id=\"00000064\", field=\"assigned_to_email\", new_value=\"aisha.chen@atlas.com\")']",
    "base_template": "Take {name_1}'s most urgent task and reassign it to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_76",
    "domain": "project_management",
    "query": "can you take carlos's most urgent task and reassign it to luis?",
    "answer": "['project_management.update_task.func(task_id=\"00000039\", field=\"assigned_to_email\", new_value=\"luis.ortiz@atlas.com\")']",
    "base_template": "Take {name_1}'s most urgent task and reassign it to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_77",
    "domain": "project_management",
    "query": "I need to take jinsoo's most urgent task and reassign it to carlos. Can you do that?",
    "answer": "['project_management.update_task.func(task_id=\"00000250\", field=\"assigned_to_email\", new_value=\"carlos.rodriguez@atlas.com\")']",
    "base_template": "Take {name_1}'s most urgent task and reassign it to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_78",
    "domain": "project_management",
    "query": "can you take fatima's most urgent task and reassign it to kofi?",
    "answer": "['project_management.update_task.func(task_id=\"00000066\", field=\"assigned_to_email\", new_value=\"kofi.mensah@atlas.com\")']",
    "base_template": "Take {name_1}'s most urgent task and reassign it to {name_2}.",
    "domains": "['project_management']"
  },
  {
    "id": "project_management_79",
    "domain": "project_management",
    "query": "I need to take yuki's most urgent task and reassign it to chenwei. Can you do that?",
    "answer": "['project_management.update_task.func(task_id=\"00000027\", field=\"assigned_to_email\", new_value=\"chenwei.zhang@atlas.com\")']",
    "base_template": "Take {name_1}'s most urgent task and reassign it to {name_2}.",
    "domains": "['project_management']"
  }
]